{"version":3,"sources":["logo.svg","variables/charts.jsx","components/Sidebar/Sidebar.jsx","layouts/Admin.jsx","redux/reducers.js","helpers/notification.js","API/get.js","API/post.js","components/Modals/newAnimal.jsx","API/readAnimal.js","components/Navbars/DemoNavbar.jsx","components/Search/search.jsx","components/Search/details.jsx","components/Search/weightRecord.jsx","API/delete.js","API/put.js","components/Modals/weight.jsx","components/Search/weightTable.jsx","components/Search/newWeight.jsx","components/Modals/vaccine.jsx","components/Search/vaccineTable.jsx","components/Search/newVaccine.jsx","components/Search/out.jsx","components/Modals/pregnancy.jsx","components/Search/outHistory.jsx","components/Search/newPregnancy.jsx","components/Search/historyPregnancy.jsx","components/Search/disease/new.jsx","components/Modals/disease.jsx","components/Modals/newStatusDisease.jsx","components/Modals/diseaseDetails.jsx","components/Search/disease/history.jsx","components/Search/milk/new.jsx","components/Search/milk/editModal.jsx","components/Search/milk/tables.jsx","components/user/newUser.jsx","routes.js","views/Dashboard.jsx","views/Search.jsx","views/Logs.jsx","views/User.jsx","views/Errors.jsx","views/Stock.jsx","views/Expenses.jsx","views/Incomes.jsx","redux/actions.js","views/Login.jsx","app.js","index.js"],"names":["module","exports","__webpack_require__","p","dashboard24HoursPerformanceChart","data","canvas","labels","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","dashboardEmailStatisticsChart","label","pieceLabel","render","precision","dashboardNASDAQChart","fill","pointBorderColor","pointBorderWidth","position","ps","combineReducers","user","state","arguments","length","undefined","authenticated","role","action","type","Object","objectSpread2","payload","notification","msg","store","addNotification","message","react_default","a","createElement","Fragment","insert","container","animationIn","animationOut","dismiss","duration","onScreen","showIcon","get","_uri","uri","concat","console","log","Headers","append","req","Request","Promise","resolve","reject","fetch","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","json","wrap","_context","prev","next","sent","ok","stop","_x","apply","this","catch","err","post","h","method","body","JSON","stringify","mode","headers","newAnimal","Intl","NumberFormat","style","currency","props","_useState","useState","_useState2","slicedToArray","entryType","setEntryType","_useState3","_useState4","weight","setWeight","_useState5","_useState6","key","setKey","_useState7","_useState8","setType","_useState9","_useState10","race","setRace","_useState11","_useState12","fatherKey","setFatherKey","_useState13","_useState14","motherKey","setMotherKey","_useState15","_useState16","gene","setGene","_useState17","_useState18","mother","setMother","_useState19","_useState20","sex","setSex","entryDate","momentJalaali","_useState21","_useState22","birthDate","setBirthDate","_useState23","_useState24","shopDate","setShopDate","_useState25","_useState26","touched","setTouched","_useState27","_useState28","errors","setErrors","_useState29","_useState30","fatherOptions","setFatherOptions","_useState31","_useState32","motherOptions","setMotherOptions","_useState33","_useState34","pregnancyKey","setPregnancyKey","handleTouched","name","newTouched","handleKeyFather","value","abrupt","readAnimalApi","limit","results","useEffect","newErrors","isRequired","serverErr","keys","formValidationOnSubmit","cb","isGregorian","handleFormSubmit","animal","Number","token","localStorage","artimal","ApiPost","result","handleClose","error","ApiGet","male","_key","pregnancy","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","Label","check","Input","onChange","checked","dist_es","timePicker","map","i","className","e","target","isValid","disabled","placeholder","q","handleKeyMother","ListGroup","o","ListGroupItem","onClick","Row","Col","defaultValue","ModalFooter","Button","jDate","format","DemoNavbar","dropdownOpen","setState","Date","time","setTime","animalModalOpen","setAnimalModalOpen","sidebarToggle","createRef","interval","setInterval","clearInterval","window","innerWidth","history","location","pathname","document","documentElement","indexOf","classList","current","handleNewAnimalModalOpen","Navbar","expand","Container","fluid","ref","NavbarToggler","Collapse","navbar","toLocaleTimeString","Nav","NavItem","react_router_dom","Dropdown","nav","DropdownToggle","caret","DropdownMenu","right","DropdownItem","tag","to","Sidebar","_this","classCallCheck","_super","call","activeRoute","bind","assertThisInitialized","sidebar","React","routeName","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","_this2","data-color","bgColor","data-active-color","activeColor","href","routes","prop","path","pro","layout","activeClassName","icon","Component","search","setOptions","selectedAnimal","Card","CardHeader","CardTitle","CardBody","size","top","updateKey","Search_details","Table","start","end","diff","months","Math","round","as","days","handleAge","CardFooter","updateTool","dataset","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHitRadius","weightRecord","weightArr","w","date","weightRecordChart","react_chartjs_2_es","API_delete","status","put","Modals_weight","setDate","weightError","checkboxDisabled","setCheckboxDisabled","setCheck","selectedItem","stopFeedingMilk","verticalAlign","marginRight","entry","ApiDelete","animalKey","forceUpdate","ApiPut","weightTable","editModalOpen","setEditModalOpen","setSelectedItem","setStopFeedingMilk","findStopFeedingMilk","filter","record","handleEditModalOpen","createdAtJdate","item","handleSelectItem","newWeight","setWeightError","createdAt","notifications","vaccineOptions","Modals_vaccine","vaccine","setVaccine","vaccineError","react_bootstrap_typeahead_es","id","labelKey","selected","vaccineTable","vaccineArr","v","newVaccine","selectedVaccine","setSelectedVaccine","formatter","out","setMode","sellDate","setSellDate","sellPrice","setSellPrice","sellComment","setSellComment","sellPriceError","setSellPriceError","slaughterDate","setSlaughterDate","deathComment","setDeathComment","deathCommentError","setDeathCommentError","deathReasonError","setDeathReasonError","deathDate","setDeathDate","deathReason","setDeathReason","noDiseaseFound","setNoDiseaseFound","diseaseArr","setDiseaseArr","selectedDisease","setSelectedDisease","ButtonGroup","replace","for","price","comment","Alert","obj","handleSubmitDisease","reason","disease","pregnancyDetails","setPregnancyDetails","femaleKey","popoverOpen","setPopoverOpen","handlePopOverTo","element","_id","onMouseEnter","onMouseLeave","Popover","placement","PopoverHeader","PopoverBody","outHistory","exit","renderBody","newPregnancy","maleKey","setMaleKey","maleKeyError","setMaleKeyError","maleOptions","setMaleOptions","handleFatherKeyChange","historyPregnancy","pregnancyRecords","startedAt","finishedAt","diseaseOptions","disease_new","setDisease","diseaseError","setDiseaseError","setComment","Modals_disease","handleRemoveRecord","confirmToDeleteOut","alert","confirm","drugOptions","effectOptions","newStatusDisease","drugs","setDrugs","effects","setEffects","treatment","setTreatment","isCured","setIsCured","clearButton","multiple","diseaseDetails","details","setDetails","react_event_timeline_dist","step","drug","effect","Badge","died","disease_history","newStatusModalOpen","setNewStatusModalOpen","detailsModalOpen","setDetailsModalOpen","handleNewStatusModalOpen","handleDetailsModalOpen","active","milk_new","milkWeight","setMilkWeight","milkWeightError","setMilkWeightError","editModal","setValue","valueError","setValueError","dateError","setDateError","tables","milkRecords","m","newUser","setRole","roleError","setRoleError","username","setUsername","usernameError","setUsernameError","password","setPassword","passwordError","setPasswordError","onHold","setOnHold","push","finally","forEach","Spinner","component","totalAnimal","setTotalAnimal","thisMonthExpense","setThisMonthExpense","currnetYM","firstDayOfMonth","from","lg","md","sm","xs","tool","setTool","update","setUpdate","setSelectedAnimal","setExit","setPregnancyRecords","setMilkRecords","handleUpdate","updateSelectedAnimal","_tool","pregnant","logs","setLogs","page","setpage","setUri","setAnimalKey","collection","setCollection","_collection","_value","query","entryId","userId","animalId","setResults","el","stock","setStock","mergeObject","countType","entries","_ref2","Admin","mainPanel","scrollTop","scrollingElement","components_Sidebar_Sidebar","assign","react_router","userAction","Login","dispatch","useDispatch","usernameErrors","setUsernameErrors","passwordErrors","setPasswordErrors","setOtherError","serverError","setServerError","usernameErr","passwordErr","handleErrors","htmlFor","setItem","hasOwnProperty","hist","createBrowserHistory","app","userReducer","useSelector","global","dist_default","process","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","getElementById"],"mappings":"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","file":"static/js/main.b8a4f03b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n    this.sidebar = React.createRef();\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.sidebar.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          {/* <a\n            href=\"https://www.creative-tim.com\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a> */}\n          <a\n            href=\"https://www.creative-tim.com\"\n            className=\"simple-text logo-normal\"\n          >\n            آرتمیان\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref={this.sidebar}>\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect, createRef } from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\n// import Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nexport default (props) => {\n  console.log(\".....................\", props);\n  const [state, setState] = useState({\n    backgroundColor: \"black\",\n    activeColor: \"info\",\n  });\n\n  const mainPanel = createRef();\n\n  useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }, [mainPanel]);\n\n  useEffect(() => {\n    return () => {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (props.history.action === \"PUSH\") {\n      mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  });\n\n  // const handleActiveClick = (color) => {\n  //   setState({ ...state, activeColor: color });\n  // };\n  // const handleBgClick = (color) => {\n  //   setState({ ...state, backgroundColor: color });\n  // };\n\n  return (\n    <div className=\"wrapper\">\n      <Sidebar\n        {...props}\n        routes={routes}\n        bgColor={state.backgroundColor}\n        activeColor={state.activeColor}\n      />\n      <div className=\"main-panel\" ref={mainPanel}>\n        <DemoNavbar {...props} />\n        <Switch>\n          {routes.map((prop, key) => {\n            return (\n              <Route\n                path={prop.layout + prop.path}\n                component={prop.component}\n                key={key}\n              />\n            );\n          })}\n        </Switch>\n        {/* <Footer fluid /> */}\n      </div>\n      {/* <FixedPlugin\n        bgColor={state.backgroundColor}\n        activeColor={state.activeColor}\n        handleActiveClick={handleActiveClick}\n        handleBgClick={handleBgClick}\n      /> */}\n    </div>\n  );\n};\n","import { combineReducers } from \"redux\";\n\nconst user = (state = { authenticated: null, role: null }, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user,\n});\n","import React from \"react\";\nimport { store } from \"react-notifications-component\";\n\nexport default (msg, type) => {\n  store.addNotification({\n    // title: \"Wonderful!\",\n    message: (\n      <>\n        <br />\n        <p>{msg}</p>\n      </>\n    ),\n    type: type,\n    insert: \"bottom\",\n    container: \"bottom-left\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    dismiss: {\n      duration: 5000,\n      onScreen: true,\n      showIcon: true,\n    },\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri) => {\n  const uri = `http://${host}/${_uri}`;\n\n  console.log(\"uri is :::: \", uri);\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri);\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) {\n          resolve(json);\n        } else {\n          reject(json);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri, data) => {\n  const uri = `http://${host}/${_uri}`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) resolve(json);\n        else reject(json);\n      })\n      .catch((err) => {\n        console.log(\"is errrrrrrror \");\n        reject(err);\n      });\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n} from \"reactstrap\";\n\n// api\nimport readAnimalApi from \"API/readAnimal\";\nimport ApiGet from \"API/get\";\nimport ApiPost from \"API/post\";\n// import putAnimalAPI from \"API/putAnimal\";\n// import getActivePregnancy from \"API/pregnancy/getActive\";\n\nconst formatter = new Intl.NumberFormat(\"sv-SE\", {\n  style: \"decimal\",\n  currency: \"SEK\",\n});\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const [entryType, setEntryType] = useState(0);\n  // const [price, setPrice] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [race, setRace] = useState(\"\");\n  const [fatherKey, setFatherKey] = useState(\"\");\n  const [motherKey, setMotherKey] = useState(\"\");\n  const [gene, setGene] = useState(\"\");\n  const [mother, setMother] = useState();\n\n  // NOTE: 0 is male\n  // NOTE: 1 is female\n  const [sex, setSex] = useState(0);\n\n  const entryDate = momentJalaali();\n  const [birthDate, setBirthDate] = useState(momentJalaali());\n  const [shopDate, setShopDate] = useState();\n\n  const [touched, setTouched] = useState({\n    // price: false,\n    weight: false,\n    key: false,\n    fatherKey: false,\n    motherKey: false,\n  });\n\n  const [errors, setErrors] = useState({\n    // price: {},\n    shopDate: {},\n    weight: {},\n    key: {},\n    fatherKey: {},\n    motherKey: {},\n    type: {},\n    race: {},\n    gene: {},\n  });\n\n  const [fatherOptions, setFatherOptions] = useState([]);\n  const [motherOptions, setMotherOptions] = useState([]);\n  const [pregnancyKey, setPregnancyKey] = useState(\"\");\n  // const [getNewKeyOnProgress, setGetNewKeyOnProgress] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleTouched = (name) => {\n    if (!touched[name]) {\n      const newTouched = {};\n      newTouched[name] = true;\n      setTouched({ ...touched, ...newTouched });\n    }\n  };\n\n  const handleRace = () => {\n    if (type === \"گوسفند\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>افشاری</option>\n          <option>قزل افشاری</option>\n          <option>مهربان</option>\n          <option>رامنی</option>\n          <option>لری</option>\n          <option>شال</option>\n          <option>مغانی</option>\n          <option>رومن</option>\n        </>\n      );\n    }\n    if (type === \"بز\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>ایرانی</option>\n          <option>پاکستانی</option>\n          <option>آلپاین</option>\n          <option>سانن</option>\n        </>\n      );\n    }\n    if (type === \"اسب\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>سلیمی</option>\n          <option>ایرانی</option>\n        </>\n      );\n    }\n    if (type === \"سگ\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>ژرمن</option>\n        </>\n      );\n    }\n    return null;\n  };\n\n  const handleKeyFather = (value) => {\n    setFatherKey(value);\n    readAnimalApi({ key: value, sex: 0, type, limit: 10 })\n      .then((res) => {\n        setFatherOptions(res.results);\n        if (value.length === 6 && res.results[0].key === value) {\n          setFatherOptions([]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleKeyMother = (value) => {\n    setMotherKey(value);\n\n    const q = `limit:10&&sex:1&&key:${value}&&type:${type}&&race:${race}`;\n\n    ApiGet(`api/v0/animal/stock/${q}`)\n      .then((res) => {\n        console.log(\"mother res is :::::::::\", res);\n        if (!res.result.length) {\n          notification(\"دامی پیدا نشد\", \"warning\");\n          if (motherOptions.length) setMotherOptions([]);\n        }\n        //  else if (value.length === 6 && res.result[0].key === value) {\n        //   setMotherOptions([]);\n        // }\n        else {\n          setMotherOptions(res.result);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleFatherKeySelect = (_key) => {\n    setFatherOptions([]);\n    setFatherKey(_key);\n    console.log(_key);\n  };\n  const handleMotherKeySelect = (mother) => {\n    setMotherOptions([]);\n    console.log({ mother });\n    // setMotherKey(mother._key);\n    setMother(mother);\n  };\n\n  useEffect(() => {\n    const newErrors = {};\n\n    /* ------------------------------ fatherKey ------------------------------ */\n    if (\n      !fatherKey.length &&\n      !errors.fatherKey.isRequired &&\n      touched.fatherKey &&\n      entryType === 0\n    ) {\n      const error = \"ورود پلاک پدر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.fatherKey) newErrors.fatherKey = {};\n      newErrors.fatherKey.isRequired = error;\n    }\n    if (fatherKey.length && errors.fatherKey.isRequired) {\n      delete errors.fatherKey.isRequired;\n    }\n    /* ------------------------------ mother key ----------------------------- */\n    if (\n      !motherKey.length &&\n      !errors.motherKey.isRequired &&\n      touched.motherKey &&\n      entryType === 0\n    ) {\n      const error = \"ورود پلاک مادر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.motherKey) newErrors.motherKey = {};\n      newErrors.motherKey.isRequired = error;\n    }\n\n    if (motherKey.length && errors.motherKey.isRequired) {\n      delete errors.motherKey.isRequired;\n    }\n    /* --------------------------------- weight --------------------------------- */\n    if (touched.weight && !weight.length && !errors.weight.isRequired) {\n      const error = \"ورود وزن الزامی است\";\n      if (!newErrors.weight) newErrors.weight = {};\n      newErrors.weight.isRequired = error;\n    }\n    if (weight.length && errors.weight.isRequired) {\n      delete errors.weight.isRequired;\n    }\n\n    /* --------------------------------- key --------------------------------- */\n    if (key.length && errors.key.serverErr) {\n      delete errors.key.serverErr;\n    }\n    // /* ---------------------------------- price --------------------------------- */\n    // if (\n    //   entryType === 1 &&\n    //   touched.price &&\n    //   !price.length &&\n    //   !errors.price.isRequired\n    // ) {\n    //   const error = \"ورود قیمت برای دام خریداری شده الزامی است\";\n    //   if (!newErrors.price) newErrors.price = {};\n    //   newErrors.price.isRequired = error;\n    // }\n    // if (price.length && errors.price.isRequired) {\n    //   delete errors.price.isRequired;\n    // }\n\n    /* ---------------------------------- race ---------------------------------- */\n    if (race.length && errors.race.isRequired) {\n      delete errors.race.isRequired;\n    }\n\n    if (type === \"گاو\" && errors.race.isRequired) {\n      delete errors.race.isRequired;\n    }\n\n    /* ---------------------------------- gene ---------------------------------- */\n    if (type !== \"گوسفند\" && errors.gene.isRequired) {\n      delete errors.race.isRequired;\n    }\n\n    if (type === \"گوسفند\" && gene && errors.gene.isRequired) {\n      delete errors.gene.isRequired;\n    }\n    /* ---------------------------------- type ---------------------------------- */\n    if (type.length && errors.type.isRequired) {\n      delete errors.type.isRequired;\n    }\n\n    /* ----------------------------- changing state ----------------------------- */\n    if (Object.keys(newErrors).length) {\n      setErrors({ ...errors, ...newErrors });\n    }\n  }, [\n    entryType,\n    errors,\n    fatherKey,\n    gene,\n    key,\n    motherKey,\n    race,\n    touched,\n    type,\n    weight,\n  ]);\n\n  // handleFormValidation();\n\n  const formValidationOnSubmit = (cb) => {\n    const newErrors = {};\n\n    /* ------------------------------ fatherKey ------------------------------ */\n    if (!fatherKey.length && !errors.fatherKey.isRequired && entryType === 0) {\n      const error = \"ورود پلاک پدر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.fatherKey) newErrors.fatherKey = {};\n      newErrors.fatherKey.isRequired = error;\n    }\n    /* ------------------------------ mother key ----------------------------- */\n    if (!motherKey.length && !errors.motherKey.isRequired && entryType === 0) {\n      const error = \"ورود پلاک مادر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.motherKey) newErrors.motherKey = {};\n      newErrors.motherKey.isRequired = error;\n    }\n    /* --------------------------------- weight --------------------------------- */\n    if (!weight.length && !errors.weight.isRequired) {\n      const error = \"ورود وزن الزامی است\";\n      if (!newErrors.weight) newErrors.weight = {};\n      newErrors.weight.isRequired = error;\n    }\n\n    /* ---------------------------------- gene ---------------------------------- */\n    if (type === \"گوسفند\" && !gene && !errors.gene.isRequired) {\n      const error = \"ورود ژن برای گوسفند الزامی است\";\n      if (!newErrors.gene) newErrors.gene = {};\n      newErrors.gene.isRequired = error;\n    }\n\n    // /* ---------------------------------- price --------------------------------- */\n    // if (entryType === 1 && !price.length && !errors.price.isRequired) {\n    //   const error = \"ورود قیمت برای دام خریداری شده الزامی است\";\n    //   if (!newErrors.price) newErrors.price = {};\n    //   newErrors.price.isRequired = error;\n    // }\n\n    /* -------------------------------- shop date ------------------------------- */\n    if (entryType === 1 && !shopDate && !errors.shopDate.isGregorian) {\n      const error = \"ورود تاریخ خرید الزامی است\";\n      if (!newErrors.shopDate) newErrors.shopDate = {};\n      newErrors.shopDate.isRequired = error;\n    }\n\n    /* ---------------------------------- race ---------------------------------- */\n    if (!race && type !== \"گاو\") {\n      const error = \"ورود نژاد دام الزامی است\";\n      if (!newErrors.race) newErrors.race = {};\n      newErrors.race.isRequired = error;\n    }\n\n    /* ---------------------------------- type ---------------------------------- */\n    if (!type) {\n      const error = \"ورود نوع دام الزامی است\";\n      if (!newErrors.type) newErrors.type = {};\n      newErrors.type.isRequired = error;\n    }\n    /* ----------------------------- changing state ----------------------------- */\n    return cb(newErrors);\n  };\n\n  const handleFormSubmit = async () => {\n    formValidationOnSubmit((newErrors) => {\n      // const splitEntryDate = entryDate\n      //   .locale('fa')\n      //   .format('jYYYY/jM/jD')\n      //   .split('/');\n\n      //   const splitBirthDate = birthDate\n      //     .locale('fa')\n      if (!Object.keys(newErrors).length) {\n        const data = {\n          animal: {\n            entryType,\n            entryDate,\n            birthDate,\n            // price: Number(price),\n            shopDate,\n            pregnancyKey,\n            weight: Number(weight),\n            key,\n            type,\n            race,\n            sex,\n            fatherKey,\n            motherKey,\n            gene,\n          },\n          token: localStorage.artimal,\n        };\n        ApiPost(\"api/v0/animal/new\", data)\n          .then((res) => {\n            notification(res.result, \"success\");\n\n            props.handleClose();\n            setKey(\"\");\n            // console.log(\".....\", res);\n\n            setEntryType(0);\n            setPregnancyKey(\"\");\n            setWeight(\"\");\n            setKey(\"\");\n            setType(\"\");\n            setRace(\"\");\n            setFatherKey(\"\");\n            setMotherKey(\"\");\n            setTouched({\n              // price: false,\n              weight: false,\n              key: false,\n              fatherKey: false,\n              motherKey: false,\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n            notification(err.error, \"danger\");\n          });\n        console.log(\"sending request\");\n      } else {\n        setErrors({ ...errors, ...newErrors });\n      }\n    });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 conditions                                 */\n  /* -------------------------------------------------------------------------- */\n\n  if (!fatherKey && fatherOptions.length) {\n    setFatherOptions([]);\n  }\n\n  if (!motherKey && motherOptions.length) {\n    setMotherOptions([]);\n  }\n\n  // if (!key && !getNewKeyOnProgress) {\n  //   console.log();\n  //   setGetNewKeyOnProgress(true);\n  //   // let counter = 0;\n\n  //   ApiGet(\"api/v0/animal/newKey\")\n  //     .then((res) => {\n  //       console.log(\"current animal keys\", res);\n  //       const keyString = String(100000 + res.result);\n  //       setGetNewKeyOnProgress(false);\n  //       setKey(keyString);\n  //     })\n  //     .catch((err) => {\n  //       setTimeout(() => {\n  //         setGetNewKeyOnProgress(false);\n  //       }, 3000);\n\n  //       errors.key.serverErr = \"خطای سروی\";\n  //       console.log(err);\n  //     });\n  // }\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n\n  // if (res.details.pregnant !== true) {\n  //   if (!errors.motherKey.isNotPregnant)\n  //     setErrors({\n  //       ...errors,\n  //       motherKey: {\n  //         ...errors.motherKey,\n  //         isNotPregnant: \"دام انتخاب شده بارداری فعالی  ندارد\",\n  //       },\n  //     });\n  // } else {\n  useEffect(() => {\n    // ApiGet(`api/v0/animal/detail/${motherKey}`)\n    //     .then((res) => {\n    //       console.log(\"res is ::: \", res);\n\n    //       ApiGet(`api/v0/animal/pregnancy/${motherKey}`).then((res) => {\n    //         console.log(\"-------------\", res);\n    //         if (!res.result.length) {\n    //           notification(\"بارداری ای برای این دام ثبت نشده هاست\", \"danger\");\n    //           setFatherKey(\"\");\n    //         } else setFatherKey(res.result[0].male._key);\n    //       });\n    //       console.log(\"get father key\");\n    //     })\n    //     .catch((err) => console.log(err));\n\n    if (mother) {\n      ApiGet(`api/v0/animal/pregnancy/${mother.key}`).then((res) => {\n        console.log(\"-------------\", res);\n        if (!res.result.length) {\n          notification(\"بارداری ای برای این دام ثبت نشده هاست\", \"danger\");\n          setFatherKey(\"\");\n        } else {\n          setFatherKey(res.result[0].male._key);\n          setPregnancyKey(res.result[0].pregnancy._key);\n        }\n      });\n    }\n  }, [mother]);\n\n  useEffect(() => {\n    setFatherKey(\"\");\n  }, [motherKey]);\n\n  useEffect(() => {\n    setMother();\n    setMotherKey(\"\");\n  }, [race, type]);\n\n  useEffect(() => {\n    if (entryType !== 1 && errors.shopDate.isRequired)\n      delete errors.shopDate.isRequired;\n  }, [entryType, errors.shopDate.isRequired]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ورود دام جدید\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>نحوه ی ورود</Label>\n              <div style={{ display: \"flex\" }}>\n                <FormGroup check>\n                  <Label check>\n                    <span>تولد</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setEntryType(0)}\n                      checked={entryType === 0}\n                    />\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <span>خرید</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setEntryType(1)}\n                      checked={entryType === 1}\n                    />\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <span>موجودی سابق</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setEntryType(2)}\n                      checked={entryType === 2}\n                    />\n                  </Label>\n                </FormGroup>\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <Label>تاریخ تولد</Label>\n              <FormGroup>\n                <DatePicker\n                  isGregorian={false}\n                  timePicker={false}\n                  value={birthDate}\n                  onChange={(value) => setBirthDate(value)}\n                />\n              </FormGroup>\n            </FormGroup>\n            {entryType === 1 ? (\n              <FormGroup>\n                <Label>تاریخ خرید</Label>\n                <FormGroup>\n                  <DatePicker\n                    isGregorian={false}\n                    timePicker={false}\n                    value={shopDate}\n                    onChange={(value) => setShopDate(value)}\n                  />\n                </FormGroup>\n                {Object.keys(errors.shopDate).map((name, i) => {\n                  return (\n                    <p className=\"error-text-form\" key={`shopDate${i}`}>\n                      {errors.shopDate[name]}\n                    </p>\n                  );\n                })}\n              </FormGroup>\n            ) : null}\n\n            <FormGroup>\n              <Label>جنسیت</Label>\n              <div style={{ display: \"flex\" }}>\n                <FormGroup check>\n                  <Label check>\n                    <span>نر</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setSex(0)}\n                      checked={sex === 0}\n                    />\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <span>ماده</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setSex(1)}\n                      checked={sex === 1}\n                    />\n                  </Label>\n                </FormGroup>\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <Label>نوع</Label>\n              <FormGroup>\n                <Input\n                  className=\"select-input\"\n                  type=\"select\"\n                  onChange={(e) => {\n                    setType(e.target.value);\n                    setRace(\"\");\n                  }}\n                  isValid={type}\n                  // isInvalid={Object.keys(errors.type).length || !type}\n                >\n                  {!type ? <option>نوع دام را انتخاب کنید</option> : null}\n                  <option>گوسفند</option>\n                  <option>بز</option>\n                  <option>اسب</option>\n                  <option>گاو</option>\n                  <option>سگ</option>\n                </Input>\n              </FormGroup>\n              {Object.keys(errors.type).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`type${i}`}>\n                    {errors.type[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n            <FormGroup>\n              <Label>نژاد</Label>\n              <FormGroup>\n                <Input\n                  className=\"select-input\"\n                  type=\"select\"\n                  disabled={!type || type === \"گاو\"}\n                  value={race}\n                  onChange={(e) => setRace(e.target.value)}\n                  isValid={type && race}\n                  // isInvalid={type && (Object.keys(errors.race).length || !race)}\n                >\n                  {handleRace()}\n                </Input>\n              </FormGroup>\n              {Object.keys(errors.race).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`race${i}`}>\n                    {errors.race[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n            {type === \"گوسفند\" ? (\n              <FormGroup>\n                <Label>ژن</Label>\n                <FormGroup>\n                  <Input\n                    className=\"select-input\"\n                    type=\"select\"\n                    value={gene}\n                    onChange={(e) => setGene(e.target.value)}\n                    // isValid={type && race}\n                    // isInvalid={type && (Object.keys(errors.race).length || !race)}\n                  >\n                    {!gene ? <option>ژن دام را انتخاب کنید</option> : null}\n                    <option>معمولی</option>\n                    <option>هترو</option>\n                    <option>همو</option>ٌ\n                  </Input>\n                </FormGroup>\n                {Object.keys(errors.gene).map((name, i) => {\n                  return (\n                    <p className=\"error-text-form\" key={`race${i}`}>\n                      {errors.gene[name]}\n                    </p>\n                  );\n                })}\n              </FormGroup>\n            ) : null}\n\n            {entryType === 0 ? (\n              <>\n                <FormGroup>\n                  <Label>پلاک مادر</Label>\n                  <Input\n                    disabled={!type || (type !== \"گاو\" && !race)}\n                    placeholder=\"پلاک مادر\"\n                    value={motherKey}\n                    onChange={(e) => {\n                      handleKeyMother(e.target.value);\n                      handleTouched(\"motherKey\");\n                    }}\n                    isValid={\n                      type &&\n                      race &&\n                      touched.motherKey &&\n                      !Object.keys(errors.motherKey).length\n                    }\n                    // isInvalid={\n                    //   type &&\n                    //   race &&\n                    //   (Object.keys(errors.motherKey).length || !motherKey)\n                    // }\n                    type=\"text\"\n                  />\n                  {motherOptions.length ? (\n                    <ListGroup className=\"input-options\">\n                      {motherOptions.map((o, i) => {\n                        return (\n                          <ListGroupItem\n                            key={`listItem${i}`}\n                            action\n                            onClick={() => handleMotherKeySelect(o)}\n                            // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                            type=\"button\"\n                          >\n                            <Row>\n                              <Col>{o.key}</Col>\n                              <Col>{o.type}</Col>\n                              <Col>{o.race}</Col>\n                            </Row>\n                          </ListGroupItem>\n                        );\n                      })}\n                    </ListGroup>\n                  ) : null}\n                  {Object.keys(errors.motherKey).map((name, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`motherKey${i}`}>\n                        {errors.motherKey[name]}\n                      </p>\n                    );\n                  })}\n                </FormGroup>\n                <FormGroup>\n                  <Label>پلاک پدر</Label>\n                  <Input\n                    disabled\n                    placeholder=\"پلاک پدر\"\n                    value={fatherKey}\n                    onChange={(e) => {\n                      handleKeyFather(e.target.value);\n                      handleTouched(\"fatherKey\");\n                    }}\n                    isValid={\n                      type &&\n                      race &&\n                      touched.fatherKey &&\n                      !Object.keys(errors.fatherKey).length\n                    }\n                    // isInvalid={\n                    //   type &&\n                    //   race &&\n                    //   (Object.keys(errors.fatherKey).length || !fatherKey)\n                    // }\n                    type=\"text\"\n                  />\n                  {fatherOptions.length ? (\n                    <ListGroup className=\"input-options\">\n                      {fatherOptions.map((o, i) => {\n                        return (\n                          <ListGroupItem\n                            key={`listItem${i}`}\n                            action\n                            onClick={() => handleFatherKeySelect(o.key)}\n                            // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                            type=\"button\"\n                          >\n                            <Row>\n                              <Col>{o.key}</Col>\n                              <Col>{o.type}</Col>\n                              <Col>{o.race}</Col>\n                            </Row>\n                          </ListGroupItem>\n                        );\n                      })}\n                    </ListGroup>\n                  ) : null}\n                  {Object.keys(errors.fatherKey).map((name, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`fatherKey${i}`}>\n                        {errors.fatherKey[name]}\n                      </p>\n                    );\n                  })}\n                </FormGroup>\n              </>\n            ) : null}\n            {/* {entryType === 1 ? (\n              <FormGroup>\n                <Label>قیمت</Label>\n                <FormGroup>\n                  <Input\n                    placeholder=\"به تومان\"\n                    value={formatter.format(price)}\n                    onChange={(e) => {\n                      console.log(\"=====\", e.target.value.replace(/\\s/g, \"\"));\n                      setPrice(e.target.value.replace(/\\s/g, \"\"));\n                      handleTouched(\"price\");\n                    }}\n                    isValid={touched.price && !Object.keys(errors.price).length}\n                    // isInvalid={Object.keys(errors.price).length || !price}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                {Object.keys(errors.price).map((name, i) => {\n                  return (\n                    <p className=\"error-text-form\" key={`price${i}`}>\n                      {errors.price[name]}\n                    </p>\n                  );\n                })}\n              </FormGroup>\n            ) : null} */}\n            <FormGroup>\n              <Label>{entryType === 0 ? \"وزن تولد\" : \"وزن هنگام ورود\"}</Label>\n              <FormGroup>\n                <Input\n                  placeholder=\"به کیلوگرم\"\n                  value={weight}\n                  onChange={(e) => {\n                    console.log(e);\n                    setWeight(e.target.value);\n                    handleTouched(\"weight\");\n                  }}\n                  isValid={touched.weight && !Object.keys(errors.weight).length}\n                  type=\"number\"\n                ></Input>\n              </FormGroup>\n              {Object.keys(errors.weight).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`weight${i}`}>\n                    {errors.weight[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n            <FormGroup>\n              <Label>شماره پلاک</Label>\n              <FormGroup>\n                <Input\n                  type=\"number\"\n                  defaultValue={key}\n                  onChange={(e) => setKey(e.target.value)}\n                />\n              </FormGroup>\n              {Object.keys(errors.key).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`key${i}`}>\n                    {errors.key[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleFormSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (data) => {\n  const uri = `http://${host}/api/v0/animal/read`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        if (res.ok) return resolve(json);\n        reject(json);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import React, { useState, createRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport momentJalaali from \"moment-jalaali\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n} from \"reactstrap\";\n\n// components\nimport AddMewAnimalModal from \"../Modals/newAnimal\";\n\nconst jDate = momentJalaali().format(\"jYYYY/jM/jD\");\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [state, setState] = useState({\n    isOpen: false,\n    dropdownOpen: false,\n    color: \"transparent\",\n  });\n\n  // clock\n  const [time, setTime] = useState(new Date());\n  // modals\n  const [animalModalOpen, setAnimalModalOpen] = useState(false);\n\n  const sidebarToggle = createRef();\n\n  const toggle = () => {\n    if (state.isOpen) {\n      setState({\n        ...state,\n        color: \"transparent\",\n      });\n    } else {\n      setState({\n        ...state,\n        color: \"dark\",\n      });\n    }\n    setState({\n      ...state,\n      isOpen: !state.isOpen,\n    });\n  };\n  const dropdownToggle = () => {\n    setState({\n      ...state,\n      dropdownOpen: !state.dropdownOpen,\n    });\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  // useEffect(() => {\n  //   const updateColor = () => {\n  //     if (window.innerWidth < 993 && state.isOpen) {\n  //       setState({\n  //         ...state,\n  //         color: \"dark\",\n  //       });\n  //     } else {\n  //       setState({\n  //         ...state,\n  //         color: \"transparent\",\n  //       });\n  //     }\n  //   };\n  //   window.addEventListener(\"resize\", updateColor());\n\n  //   function clearEvents() {\n  //     window.removeEventListener(\"resize\", updateColor());\n  //   }\n\n  //   return () => clearEvents();\n  // }, [state]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      props.history.location.pathname !== props.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  });\n\n  const handleNewAnimalModalOpen = () => {\n    // console.log(\"handle modal close\");\n    setAnimalModalOpen(!animalModalOpen);\n  };\n\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <>\n      <Navbar\n        color={\n          props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : state.color\n        }\n        expand=\"lg\"\n        className={\n          props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            {/* <NavbarBrand ></NavbarBrand> */}\n          </div>\n          <NavbarToggler onClick={toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <p>\n              {time.toLocaleTimeString()} ساعت -- {jDate}\n              {/* <InputGroup className=\"no-border\">\n              <Input placeholder=\"Search...\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <i className=\"nc-icon nc-zoom-split\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup> */}\n            </p>\n            <Nav navbar>\n              <NavItem>\n                <Link\n                  className=\"nav-link btn-magnify\"\n                  onClick={handleNewAnimalModalOpen}\n                >\n                  <i className=\"nc-icon nc-simple-add\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={state.dropdownOpen}\n                toggle={(e) => dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <AddMewAnimalModal\n        handleClose={handleNewAnimalModalOpen}\n        isOpen={animalModalOpen}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\n// api\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [type, setType] = useState(\"همه\");\n  const [entryType, setEntryType] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  //   const [selectedAnimal, setSelectedAnimal] = useState({});\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (key === props.selectedAnimal._key) {\n      setOptions([]);\n    } else if (key) {\n      let q = \"limit:10\";\n      if (key) q += `&&key:${key}`;\n      if (sex || sex === 0) q += `&&sex:${sex}`;\n      if (type !== \"همه\") q += `&&type:${type}`;\n      if (entryType) q += `&&entryType:${entryType}`;\n\n      console.log({ q });\n\n      ApiGet(`api/v0/animal/stock/${q}`)\n        .then((res) => {\n          console.log(res);\n          if (!res.result.length) {\n            // TODO: find another way to inform user that no result had beeb found on search\n            // notification(\"دامی پیدا نشد\", \"warning\");\n            setOptions([]);\n          } else {\n            setOptions(res.result);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setOptions([]);\n    }\n  }, [entryType, key, props, sex, type]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleNewEntry = (_key) => {\n    setOptions([]);\n    setKey(_key);\n    props.updateKey(_key);\n    // getAnimalDetailsApi(_key)\n    //   .then((res) => {\n    //     console.log(\"...............\", res);\n    //     // setSelectedAnimal({\n    //     //   key: res.details._key,\n    //     //   type: res.details.type,\n    //     //   race: res.details.race,\n    //     //   ebtryType: res.details.entryType,\n    //     // });\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">جست و جو</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>نوع</Label>\n          <FormGroup>\n            <Input\n              className=\"select-input\"\n              type=\"select\"\n              onChange={(e) => {\n                setType(e.target.value);\n                // setRace(\"\");\n              }}\n              // isValid={type}\n              // isInvalid={Object.keys(errors.type).length || !type}\n            >\n              <option>همه</option>\n              <option>گوسفند</option>\n              <option>بز</option>\n              <option>اسب</option>\n              <option>گاو</option>\n              <option>سگ</option>\n            </Input>\n          </FormGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label>نحوه ی ورود</Label>\n          <div style={{ display: \"flex\" }}>\n            <FormGroup check>\n              <Label check>\n                <span>تولد</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setEntryType(0)}\n                  checked={entryType === 0}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>خرید</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setEntryType(1)}\n                  checked={entryType === 1}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>موجودی سابق</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setEntryType(2)}\n                  checked={entryType === 2}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                className=\"icon-button-round icon-button-danger\"\n                type=\"button\"\n                color=\"danger\"\n                size=\"small\"\n                onClick={() => setEntryType(undefined)}\n              >\n                <i className=\"nc-icon nc-simple-remove text-light\" />\n              </Button>\n            </FormGroup>\n          </div>\n        </FormGroup>\n        <FormGroup>\n          <Label>جنسیت</Label>\n          <div style={{ display: \"flex\" }}>\n            <FormGroup check>\n              <Label check>\n                <span>نر</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setSex(0)}\n                  checked={sex === 0}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>ماده</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setSex(1)}\n                  checked={sex === 1}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                className=\"icon-button-round icon-button-danger\"\n                type=\"button\"\n                color=\"danger\"\n                size=\"small\"\n                onClick={() => setSex(undefined)}\n              >\n                <i className=\"nc-icon nc-simple-remove text-light\" />\n              </Button>\n            </FormGroup>\n          </div>\n        </FormGroup>\n\n        <FormGroup>\n          <Input\n            placeholder=\"پلاک دام را وارد کنید\"\n            value={key}\n            onChange={(e) => setKey(e.target.value)}\n            type=\"text\"\n          />\n          {options.length ? (\n            <ListGroup className=\"input-options\" style={{ top: 45 }}>\n              {options.map((o, i) => {\n                return (\n                  <ListGroupItem\n                    key={`listItem${i}`}\n                    action\n                    onClick={() => handleNewEntry(o.key)}\n                    // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                    type=\"button\"\n                  >\n                    <Row>\n                      <Col>{o.key}</Col>\n                      <Col>{o.type}</Col>\n                      <Col>{o.race}</Col>\n                    </Row>\n                  </ListGroupItem>\n                );\n              })}\n            </ListGroup>\n          ) : undefined}\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  Table,\n  CardFooter,\n} from \"reactstrap\";\n\n// api\n\nexport default (props) => {\n  const handleEntryType = () => {\n    if (props.selectedAnimal.entryType === 0) return \"تولد\";\n    if (props.selectedAnimal.entryType === 1) return \"خرید\";\n    return \"موجودی پیشین\";\n  };\n\n  const handleEntrySex = () => {\n    if (props.selectedAnimal.sex === 0) return \"نر\";\n    return \"ماده\";\n  };\n\n  const handleAge = () => {\n    const start = momentJalaali(new Date());\n    const end = momentJalaali(props.selectedAnimal.birthDate);\n    const duration = momentJalaali.duration(start.diff(end));\n    const months = Math.round(duration.as(\"months\"));\n    if (months >= 1) {\n      return `${months} ماه`;\n    } else {\n      const days = Math.round(duration.as(\"days\"));\n      return `${days} روز`;\n    }\n  };\n\n  console.log(props.selectedAnimal);\n  return (\n    <>\n      {Object.keys(props.selectedAnimal).length ? (\n        <Card className=\"demo-icons\">\n          <CardHeader>\n            <CardTitle tag=\"h6\">\n              {props.selectedAnimal.type} پلاک {props.selectedAnimal._key}\n            </CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>نژاد</th>\n                  <th>جنسیت</th>\n                  <th>نوع ورود</th>\n                  <th>تاریخ ورود</th>\n                  <th>تاریخ تولد</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{props.selectedAnimal.race}</td>\n                  <td>{handleEntrySex()}</td>\n                  <td>{handleEntryType()}</td>\n                  <td>\n                    {momentJalaali(props.selectedAnimal.entryDate).format(\n                      \"jYYYY/jM/jD\"\n                    )}\n                  </td>\n                  <td>\n                    {momentJalaali(props.selectedAnimal.birthDate).format(\n                      \"jYYYY/jM/jD\"\n                    )}\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n            <p>\n              <span>سن : </span>\n              {handleAge()}\n            </p>\n          </CardBody>\n          <CardFooter className=\"button-group\">\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"weight\")}\n            >\n              وزن\n            </Button>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"vaccine\")}\n            >\n              واکسن\n            </Button>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"exit\")}\n            >\n              خروج\n            </Button>\n            <Button\n              type=\"Button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"milk\")}\n            >\n              شیر\n            </Button>\n            {props.selectedAnimal.sex === 1 ? (\n              <Button\n                type=\"Button\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => props.updateTool(\"pregnancy\")}\n              >\n                بارداری\n              </Button>\n            ) : null}\n            <Button\n              type=\"Button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"disease\")}\n            >\n              بیماری\n            </Button>\n          </CardFooter>\n        </Card>\n      ) : null}\n    </>\n  );\n};\n","import React from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport { Line } from \"react-chartjs-2\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\n// api\n\nconst dataset = {\n  label: \"My First dataset\",\n  fill: true,\n  lineTension: 0.1,\n  backgroundColor: \"rgba(75,192,192,1)\",\n  borderColor: \"#255f5f\",\n  borderCapStyle: \"butt\",\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: \"miter\",\n  pointBorderColor: \"#255f5f\",\n  pointBackgroundColor: \"#fff\",\n  pointBorderWidth: 5,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: \"#ffc107\",\n  pointHoverBorderColor: \"rgba(220,220,220,1)\",\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nexport default (props) => {\n  const labels = props.weightArr.map((w) => {\n    return momentJalaali(w.date, \"YYYY-M-DTHH:mm:ss.SSSZ\").format(\"jYY-jM-jD\");\n  });\n\n  console.log(\"wwwwwwwwwwwwwwwwwwww\", props);\n\n  const data = props.weightArr.map((w) => w.value);\n\n  dataset.data = data;\n\n  const weightRecordChart = {\n    labels,\n    datasets: [dataset],\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">نمودار تغییر وزن</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Line data={weightRecordChart} />\n      </CardBody>\n    </Card>\n  );\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri) => {\n  const uri = `http://${host}/${_uri}`;\n\n  console.log(\"uri is :::: \", uri);\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"DELETE\",\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        console.log(res.status);\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) {\n          resolve(json);\n        } else {\n          json.status = res.status;\n          reject(json);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri, data) => {\n  const uri = `http://${host}/${_uri}`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) resolve(json);\n        else reject(json);\n      })\n      .catch((err) => {\n        console.log(\"is errrrrrrror \");\n        reject(err);\n      });\n  });\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n\nimport ApiDelete from \"API/delete\";\nimport ApiPut from \"API/put\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [weight, setWeight] = useState(\"\");\n  const [weightError, setWeightError] = useState(\"\");\n  const [checkboxDisabled, setCheckboxDisabled] = useState(false);\n  const [check, setCheck] = useState(false);\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    const data = {\n      entry: {\n        key: props.selectedItem._key,\n      },\n      token: localStorage.artimal,\n    };\n    console.log(\"remove buttomn clicked :: key is \", data);\n\n    ApiDelete(\n      `api/v0/weight/${localStorage.artimal}/${props.selectedItem._key}/${props.animalKey}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // removeWeightApi(data)\n    //   .then((res) => {\n    //     props.forceUpdate();\n    //     props.handleClose();\n    //     notification(res.result, \"success\");\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  const handleSubmit = () => {\n    console.log(date, weight);\n\n    const data = {\n      entry: {\n        value: weight,\n        date,\n        key: props.selectedItem._key,\n        stopFeedingMilk: check,\n        animalKey: props.animalKey,\n      },\n      token: localStorage.artimal,\n    };\n\n    ApiPut(\"api/v0/weight\", data)\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setWeight(props.selectedItem.value);\n      console.log(\"sendig requeeeeeeeeeeeeeest\");\n      if (props.selectedItem.stopFeedingMilk) {\n        setCheckboxDisabled(false);\n        setCheck(true);\n      } else if (props.stopFeedingMilk) {\n        setCheckboxDisabled(true);\n        setCheck(false);\n      } else {\n        setCheckboxDisabled(false);\n        setCheck(false);\n      }\n    }\n  }, [props]);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <DatePicker\n            isGregorian={false}\n            timePicker={false}\n            value={date}\n            onChange={(value) => setDate(value)}\n          />\n          <Label>وزن</Label>\n          <Input\n            placeholder=\"به کیلوگرم\"\n            value={weight}\n            onChange={(e) => {\n              console.log(e);\n              setWeight(e.target.value);\n            }}\n            type=\"number\"\n          />\n          <p className=\"error-text-form\">{weightError}</p>\n          <div>\n            <Label\n              check\n              style={{\n                position: \"unset\",\n                verticalAlign: \"middle\",\n              }}\n            >\n              <Input\n                disabled={checkboxDisabled}\n                check\n                style={{ marginRight: \"10\" }}\n                type=\"checkbox\"\n                checked={check}\n                onChange={() => setCheck(!check)}\n              />\n              <span style={{ marginRight: 22 }}>گرفتن از شیر</span>\n            </Label>\n          </div>\n          <Button color=\"danger\" onClick={handleRemoveRecord}>\n            پاک کردن\n          </Button>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n// component\nimport WeightEditModal from \"../../components/Modals/weight\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState();\n  const [stopFeedingMilk, setStopFeedingMilk] = useState();\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlders                                 */\n  /* -------------------------------------------------------------------------- */\n  const handleSelectItem = (key) => {\n    const item = props.weightArr.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  useEffect(() => {\n    const findStopFeedingMilk = props.weightArr.filter(\n      (record) => record.stopFeedingMilk\n    );\n    console.log(\":::::\", findStopFeedingMilk);\n\n    if (findStopFeedingMilk.length) {\n      setStopFeedingMilk(true);\n    } else {\n      setStopFeedingMilk(false);\n    }\n  }, [props.weightArr]);\n\n  console.log(\"++++++\", props);\n  const renderBody = () => {\n    const result = props.weightArr.map((w, i) => {\n      const createdAtJdate = momentJalaali(\n        w.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={`weightItem${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{w.value}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", w);\n                handleSelectItem(w._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n          {w.stopFeedingMilk ? <td>گرفتن از شیر</td> : null}\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">جدول وزن</CardHeader>\n        <CardBody>\n          <Table>\n            <thead className=\"text-primary\">\n              <tr>\n                <th>تاریخ</th>\n                <th>وزن</th>\n              </tr>\n            </thead>\n            <tbody>{renderBody()}</tbody>\n          </Table>\n        </CardBody>\n      </Card>\n      <WeightEditModal\n        animalKey={props.animalKey}\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n        stopFeedingMilk={stopFeedingMilk}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notifications from \"../../helpers/notification\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\n// api\nimport ApiPost from \"API/post\";\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [weight, setWeight] = useState(\"\");\n  const [weightError, setWeightError] = useState(\"\");\n  const [stopFeedingMilk, setStopFeedingMilk] = useState();\n  const [check, setCheck] = useState(false);\n\n  useEffect(() => {\n    const findStopFeedingMilk = props.weightArr.filter(\n      (record) => record.stopFeedingMilk\n    );\n    console.log(\":::::\", findStopFeedingMilk);\n\n    if (findStopFeedingMilk.length)\n      setStopFeedingMilk(findStopFeedingMilk[0].stopFeedingMilk);\n  }, [props.weightArr]);\n\n  const handleSubmit = () => {\n    if (weight) {\n      const data = {\n        entry: {\n          date,\n          createdAt: momentJalaali(),\n          value: weight,\n          key: props.animalKey,\n          stopFeedingMilk: check,\n        },\n        token: localStorage.artimal,\n      };\n\n      console.log(data);\n\n      ApiPost(`api/v0/weight/new`, data)\n        .then((res) => {\n          console.log(res);\n          notifications(res.result, \"success\");\n          setWeight(0);\n          setCheck(false);\n          // TODO: froce update\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(err);\n          notifications(err.error, \"danger\");\n        });\n      // putWeightApi(data)\n    } else {\n      setWeightError(\"وزن را وارد کنید\");\n    }\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>وزن</Label>\n          <FormGroup>\n            <Input\n              placeholder=\"به کیلوگرم\"\n              value={weight}\n              onChange={(e) => {\n                setWeight(e.target.value);\n              }}\n              type=\"number\"\n            />\n            <p className=\"error-text-form\">{weightError}</p>\n          </FormGroup>\n        </FormGroup>\n        {!stopFeedingMilk ? (\n          <div>\n            <Label\n              check\n              style={{\n                position: \"unset\",\n                verticalAlign: \"middle\",\n              }}\n            >\n              <Input\n                check\n                style={{ marginRight: \"10\" }}\n                type=\"checkbox\"\n                checked={check}\n                onChange={() => setCheck(!check)}\n              />\n              <span style={{ marginRight: 22 }}>گرفتن از شیر</span>\n            </Label>\n          </div>\n        ) : null}\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\nimport ApiDelete from \"API/delete\";\n// import updateVaccineApi from \"../../API/vaccine/update\";\nimport ApiPut from \"API/put\";\n\n// default values\nconst vaccineOptions = [\n  \"آنتروتوکسمی\",\n  \"تب برفکی\",\n  \"بروسلوز\",\n  \"آگالاکسی\",\n  \"شاربن\",\n  \"آبله\",\n  \"طاعون نشخوار کنندگان\",\n  \"قانقاریا\",\n];\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [vaccine, setVaccine] = useState(\"\");\n  const [vaccineError, setVaccineError] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    ApiDelete(\n      `api/v0/vaccine/${localStorage.artimal}/${props.selectedItem._key}/${props.animalKey}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleSubmit = () => {\n    const data = {\n      entry: {\n        value: vaccine,\n        date,\n        key: props.selectedItem._key,\n        animalKey: props.animalKey,\n      },\n      token: localStorage.artimal,\n    };\n\n    console.log(data);\n\n    ApiPut(`api/v0/vaccine`, data)\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setVaccine(props.selectedItem.value);\n    }\n  }, [props]);\n\n  console.log(\".....................XXXXXX\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <DatePicker\n            isGregorian={false}\n            timePicker={false}\n            value={date}\n            onChange={(value) => setDate(value)}\n          />\n          <Label>واکسن</Label>\n          <Typeahead\n            className=\"typeahead\"\n            id=\"vaccine-typeahead\"\n            labelKey=\"name\"\n            onChange={setVaccine}\n            options={vaccineOptions}\n            placeholder=\"واکسن را انتخاب کنید\"\n            selected={vaccine}\n          />\n          <p className=\"error-text-form\">{vaccineError}</p>\n          <Button color=\"danger\" onClick={handleRemoveRecord}>\n            پاک کردن\n          </Button>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport VaccineEditModal from \"../Modals/vaccine\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [selectedItem, setSelectedItem] = useState();\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelectItem = (key) => {\n    const item = props.vaccineArr.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleBody = () => {\n    const result = props.vaccineArr.map((v, i) => {\n      const createdAtJdate = momentJalaali(\n        v.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={v._key}>\n          <td>{createdAtJdate}</td>\n          <td>{v.value}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(v._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  console.log(\"..............pppppp.\", props);\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">واکسن ها</CardHeader>\n        <CardBody>\n          {props.vaccineArr.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>نوع</th>\n                </tr>\n              </thead>\n              <tbody>{handleBody()}</tbody>\n            </Table>\n          ) : (\n            <p>واکسنی برای این دام ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <VaccineEditModal\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n        animalKey={props.animalKey}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport notification from \"../../helpers/notification\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\n// api\n// import putVaccineApi from \"API/vaccine/put\";\nimport ApiPost from \"API/post\";\n\nconst vaccineOptions = [\n  \"آنتروتوکسمی\",\n  \"تب برفکی\",\n  \"بروسلوز\",\n  \"آگالاکسی\",\n  \"شاربن\",\n  \"آبله\",\n  \"طاعون نشخوار کنندگان\",\n  \"قانقاریا\",\n];\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [selectedVaccine, setSelectedVaccine] = useState(\"\");\n\n  const [errors, setErrors] = useState({});\n\n  const checkForVaccineErrors = () => {\n    console.log(\"start checking for errors\");\n    return new Promise((resolve, reject) => {\n      const newErrors = {};\n      if (!selectedVaccine.length) {\n        newErrors.vaccine = \"انتخاب واکسن الزامی است\";\n      }\n\n      if (!Object.keys(newErrors).length) resolve();\n      else if (Object.keys(newErrors).length) reject(newErrors);\n    });\n  };\n\n  const handleSubmit = () => {\n    checkForVaccineErrors()\n      .then(() => {\n        setErrors({});\n\n        const data = {\n          entry: {\n            date,\n            createdAt: momentJalaali(),\n            vaccine: selectedVaccine,\n            key: props.animalKey,\n          },\n          token: localStorage.artimal,\n        };\n\n        ApiPost(\"api/v0/vaccine\", data)\n          .then((res) => {\n            console.log(res);\n            notification(res.result, \"success\");\n            // TODO:clear vaccine input\n            setSelectedVaccine([\"\"]);\n            props.forceUpdate();\n          })\n          .catch((err) => {\n            console.log(err);\n            notification(err.error, \"danger\");\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrors(err);\n      });\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>واکسن</Label>\n          <Typeahead\n            className=\"typeahead\"\n            id=\"vaccine-typeahead\"\n            labelKey=\"name\"\n            onChange={setSelectedVaccine}\n            options={vaccineOptions}\n            placeholder=\"واکسن را انتخاب کنید\"\n            selected={selectedVaccine}\n          />\n          {errors.vaccine ? (\n            <p className=\"error-text-form\">{errors.vaccine}</p>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ButtonGroup,\n  FormGroup,\n  Button,\n  Label,\n  Input,\n  CardTitle,\n  Alert,\n  Table,\n} from \"reactstrap\";\n\n// api\n// import putDeathApi from \"API/putDeath\";\n// import putAnimalSellApi from \"API/putAnimalSell\";\n// import putSlaughterApi from \"API/putSlaughter\";\n// import getActiveDisease from \"API/disease/getActives\";\n\nimport ApiPost from \"API/post\";\nimport ApiGet from \"API/get\";\n\n// default values\n// const illnessOptions = [\n//   \"سل گاوی\",\n//   \"آنتروتوکسمی\",\n//   \"شاربن\",\n//   \"بروسلوز\",\n//   \"آبله ی گوسفندی\",\n//   \"آگالاکسی\",\n//   \"هاری\",\n//   \"تب برفکی\",\n// ];\n\nconst formatter = new Intl.NumberFormat(\"sv-SE\", {\n  style: \"decimal\",\n  currency: \"SEK\",\n});\n\nexport default (props) => {\n  const [mode, setMode] = useState(0);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  // sell states\n  const [sellDate, setSellDate] = useState(momentJalaali());\n  const [sellPrice, setSellPrice] = useState(\"\");\n  const [sellComment, setSellComment] = useState(\"\");\n  const [sellPriceError, setSellPriceError] = useState(\"\");\n\n  // slaughter states\n  const [slaughterDate, setSlaughterDate] = useState(momentJalaali());\n  const [weight, setWeight] = useState(\"\");\n  const [weightError, setWeightError] = useState(\"\");\n\n  // deatch states\n  const [deathComment, setDeathComment] = useState(\"\");\n  const [deathCommentError, setDeathCommentError] = useState(\"\");\n  const [deathReasonError, setDeathReasonError] = useState(\"\");\n  const [deathDate, setDeathDate] = useState(momentJalaali());\n  const [deathReason, setDeathReason] = useState(\"\");\n\n  const [noDiseaseFound, setNoDiseaseFound] = useState(false);\n  const [diseaseArr, setDiseaseArr] = useState([]);\n  const [selectedDisease, setSelectedDisease] = useState({});\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleDeathSubmit = () => {\n    if (!deathReason) setDeathReasonError(\"دلیل مرگ را مشخص کنید\");\n    else if (deathReason === \"حادثه\" && !deathComment)\n      setDeathCommentError(\"توضیحات مرتبط با حادثه منجر به مرگ الزامی است\");\n    else {\n      const data = {\n        entry: {\n          comment: deathComment,\n          reason: deathReason,\n          createdAt: momentJalaali(),\n          date: deathDate,\n          key: props.animalKey,\n          disease: deathReason === \"بیماری\" ? selectedDisease : undefined,\n        },\n        token: localStorage.artimal,\n      };\n\n      ApiPost(\"api/v0/exit/death\", data)\n        .then((res) => {\n          if (deathReasonError) setDeathReasonError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  };\n\n  const handleSlaughterSubmit = () => {\n    if (!weight) {\n      setWeightError(\"ورود وزن الزامی است\");\n    } else {\n      const data = {\n        entry: {\n          weight: weight,\n          date: deathDate,\n          createdAt: momentJalaali(),\n          key: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      ApiPost(\"api/v0/exit/slaughter\", data)\n        .then((res) => {\n          if (sellPriceError) setSellPriceError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  };\n\n  const handleSellSubmit = () => {\n    if (!sellPrice) {\n      setSellPriceError(\"مبلغ فروش رو وارد کنید\");\n    } else {\n      const data = {\n        entry: {\n          date: sellDate,\n          price: sellPrice,\n          comment: sellComment,\n          key: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      // putAnimalSellApi(data)\n      ApiPost(\"api/v0/exit/sell\", data)\n        .then((res) => {\n          if (sellPriceError) setSellPriceError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  };\n\n  const handleSubmitDisease = (key) => {\n    const item = diseaseArr.filter((obj) => obj._key === key);\n    console.log(\"item is :::\", item);\n\n    setSelectedDisease(item[0]);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    setDeathComment(\"\");\n    setDeathCommentError(\"\");\n  }, [deathReason]);\n\n  useEffect(() => {\n    console.log(\")))))))))))))\", mode);\n    if (mode === 2 && deathReason === \"بیماری\") {\n      console.log(\"now its the time\");\n\n      ApiGet(`api/v0/disease/active/${props.animalKey}`)\n        .then((res) => {\n          // if (sellPriceError) setSellPriceError(\"\");\n          console.log(res);\n          if (!res.result.length && noDiseaseFound === false)\n            setNoDiseaseFound(true);\n          if (res.result.length && noDiseaseFound === true)\n            setNoDiseaseFound(false);\n\n          setDiseaseArr(res.result);\n          // notification(res.result, \"success\");\n          // props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  }, [mode, deathReason, props.animalKey, noDiseaseFound]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag=\"h6\">خروج</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <ButtonGroup>\n          <Button\n            color={mode === 0 ? \"primary\" : \"link\"}\n            type=\"button\"\n            onClick={() => setMode(0)}\n          >\n            فروش\n          </Button>\n          <Button\n            color={mode === 1 ? \"primary\" : \"link\"}\n            type=\"button\"\n            onClick={() => setMode(1)}\n          >\n            ذبح\n          </Button>\n          <Button\n            color={mode === 2 ? \"primary\" : \"link\"}\n            type=\"button\"\n            onClick={() => setMode(2)}\n          >\n            مرگ\n          </Button>\n        </ButtonGroup>\n        <hr />\n\n        {mode === 0 ? (\n          <>\n            <FormGroup>\n              <DatePicker\n                isGregorian={false}\n                timePicker={false}\n                value={sellDate}\n                onChange={(value) => setSellDate(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>مبلغ</Label>\n              <FormGroup>\n                <Input\n                  placeholder=\"به تومان\"\n                  value={formatter.format(sellPrice)}\n                  onChange={(e) => {\n                    setSellPrice(e.target.value.replace(/\\s/g, \"\"));\n                  }}\n                  type=\"number\"\n                />\n              </FormGroup>\n              {sellPriceError ? (\n                <p className=\"error-text-form\">{sellPriceError}</p>\n              ) : null}\n            </FormGroup>\n\n            <FormGroup>\n              <Label for=\"exampleText\">توضیحات</Label>\n              <Input\n                type=\"textarea\"\n                value={sellComment}\n                onChange={(e) => setSellComment(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button type=\"button\" color=\"primary\" onClick={handleSellSubmit}>\n                تایید\n              </Button>\n            </FormGroup>\n          </>\n        ) : null}\n\n        {mode === 1 ? (\n          <>\n            <FormGroup>\n              <FormGroup>\n                <DatePicker\n                  isGregorian={false}\n                  timePicker={false}\n                  value={slaughterDate}\n                  onChange={(value) => setSlaughterDate(value)}\n                />\n              </FormGroup>\n            </FormGroup>\n            <FormGroup>\n              <Label>وزن</Label>\n              <FormGroup>\n                <Input\n                  placeholder=\"کیلوگرم\"\n                  value={weight}\n                  onChange={(e) => {\n                    setWeight(e.target.value);\n                  }}\n                  type=\"number\"\n                />\n              </FormGroup>\n              {weightError ? (\n                <p className=\"error-text-form\">{weightError}</p>\n              ) : null}\n            </FormGroup>\n            <FormGroup>\n              <Button\n                type=\"button\"\n                color=\"primary\"\n                onClick={handleSlaughterSubmit}\n              >\n                تایید\n              </Button>\n            </FormGroup>\n          </>\n        ) : null}\n\n        {mode === 2 ? (\n          <>\n            <FormGroup>\n              <DatePicker\n                isGregorian={false}\n                timePicker={false}\n                value={deathDate}\n                onChange={(value) => setDeathDate(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>دلیل مرگ</Label>\n              <FormGroup>\n                <Input\n                  className=\"select-input\"\n                  type=\"select\"\n                  onChange={(e) => {\n                    setDeathReason(e.target.value);\n                  }}\n                  // isValid={deathReason}\n                >\n                  {!deathReason ? <option>دلیل مرگ</option> : null}\n                  <option>بیماری</option>\n                  <option>حادثه</option>\n                </Input>\n              </FormGroup>\n              <p className=\"error-text-form\">{deathReasonError}</p>\n              {/* </FormGroup>\n            {deathReason === \"بیماری\" ? (\n              <FormGroup>\n                <Label>بیماری</Label>\n                <Typeahead\n                  className=\"typeahead\"\n                  id=\"vaccine-typeahead\"\n                  labelKey=\"name\"\n                  onChange={setIllness}\n                  options={illnessOptions}\n                  placeholder=\"واکسن را انتخاب کنید\"\n                  selected={illness}\n                />\n              </FormGroup>\n            ) : null}\n            <FormGroup> */}\n              {Object.keys(selectedDisease).length ? (\n                <Table>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>تاریخ</th>\n                      <th>بیماری</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        {momentJalaali(\n                          selectedDisease.date,\n                          \"YYYY-M-DTHH:mm:ss.SSSZ\"\n                        ).format(\"jYYYY-jM-jD\")}\n                      </td>\n                      <td>{selectedDisease.value}</td>\n                      <td>\n                        <Button\n                          type=\"button\"\n                          // onClick={() => handleSubmitDisease(obj.d._key)}\n                        >\n                          حذف\n                        </Button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              ) : null}\n              {mode === 2 && deathReason === \"بیماری\" && noDiseaseFound ? (\n                <Alert color=\"danger\">\n                  سابقه ی بیماری فعالی برای این دام یافت نشد. لطفا بیناری را\n                  وارد منید و سپس نسبت به ثبت مرگ در اثر بیمار ی اقدام نمیایید\n                </Alert>\n              ) : null}\n              {diseaseArr.length && !Object.keys(selectedDisease).length ? (\n                <Table>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>تاریخ</th>\n                      <th>بیماری</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {diseaseArr.map((obj, i) => {\n                      const createdAtJdate = momentJalaali(\n                        obj.date,\n                        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n                      ).format(\"jYYYY-jM-jD\");\n                      return (\n                        <tr key={`disease${i}`}>\n                          <td>{createdAtJdate}</td>\n                          <td>{obj.value}</td>\n                          <td>\n                            <Button\n                              type=\"button\"\n                              onClick={() => handleSubmitDisease(obj._key)}\n                            >\n                              تایید\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              ) : null}\n\n              <Label for=\"exampleText\">توضیحات</Label>\n              <Input\n                type=\"textarea\"\n                value={deathComment}\n                onChange={(e) => setDeathComment(e.target.value)}\n                disabled={\n                  mode === 2 && deathReason === \"بیماری\" && noDiseaseFound\n                }\n              />\n              <p className=\"error-text-form\">{deathCommentError}</p>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                type=\"button\"\n                color=\"primary\"\n                onClick={handleDeathSubmit}\n                disabled={\n                  mode === 2 &&\n                  deathReason === \"بیماری\" &&\n                  !Object.keys(selectedDisease).length\n                }\n              >\n                تایید\n              </Button>\n            </FormGroup>\n          </>\n        ) : null}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n} from \"reactstrap\";\n\n// api\n// import readPregnancyDetailsApi from \"../../API/pregnancy/readDetails\";\n// import removePregnancyApi from \"../../API/pregnancy/remove\";\nimport ApiGet from \"API/get\";\nimport ApiDelete from \"API/delete\";\n\nexport default (props) => {\n  const [pregnancyDetails, setPregnancyDetails] = useState([]);\n  const [femaleKey, setFemaleKey] = useState(\"\");\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    console.log(\"deleeeeeeeeeeeeeeeeeeeeeete\", femaleKey);\n    // const data = {\n    //   entry: {\n    //     key: props.selectedItem.pregnancy._key,\n    //     femaleKey: femaleKey,\n    //   },\n    //   token: localStorage.artimal,\n    // };\n\n    ApiDelete(\n      `api/v0/pregnancy/${localStorage.artimal}/${props.selectedItem.pregnancy._key}`\n    )\n      .then((res) => {\n        console.log(\"------------\", res);\n        notification(res.result, \"success\");\n        props.forceUpdate();\n        props.handleClose();\n      })\n      .catch((err) => {\n        if (err.error) {\n          console.log(err);\n          notification(err.error, \"danger\");\n        } else notification(\"خطا در برقراری ارتباط\", \"danger\");\n      });\n\n    // removePregnancyApi(data)\n    //   .then((res) => {\n    //     console.log(\"------------\", res);\n    //     notification(res.result, \"success\");\n    //     props.forceUpdate();\n    //     props.handleClose();\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //     notification(err.error, \"danger\");\n    //   });\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                                  */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    console.log(\"========================\", props);\n    if (props.isOpen) {\n      ApiGet(`api/v0/pregnancy/details/${props.selectedItem.pregnancy._key}`)\n        .then((res) => {\n          console.log(\"------------\", res);\n          setPregnancyDetails(res.result);\n          // notification(res.result, \"success\");\n          // props.forceUpdate();\n          // props.handleClose();\n        })\n        .catch((err) => {\n          if (err.error) {\n            console.log(err);\n            notification(err.error, \"danger\");\n          } else {\n            notification(\"خطا در برقراری ارتباط\", \"danger\");\n          }\n        });\n    }\n  }, [props]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                                 */\n  /* -------------------------------------------------------------------------- */\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        handlePopOverTo={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // handlePopOverTo={handlePopOverTo}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          {/* {handleBody()} */}\n          <h5>نتیجه</h5>\n          {pregnancyDetails.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>جنسیت</th>\n                  <th>پلاک</th>\n                  <th>وزن زمان تولد</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pregnancyDetails.map((element, i) => {\n                  console.log(\"iiiiiiiiii :::::::\", i);\n                  return (\n                    <tr key={element._id + i}>\n                      <td>{element.sex === 0 ? \"نر\" : \"ماده\"}</td>\n                      <td>{element._key}</td>\n                      <td>{element.weight.value}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          ) : (\n            <p>برای این بارداری نتیجه ای ثبت نشده است</p>\n          )}\n\n          <h5>پارامترها</h5>\n\n          <Button\n            color=\"danger\"\n            onClick={handleRemoveRecord}\n            // disabled\n            onMouseEnter={() => pregnancyDetails.length && setPopoverOpen(true)}\n            onMouseLeave={() =>\n              pregnancyDetails.length && setPopoverOpen(false)\n            }\n            id=\"Popover1\"\n          >\n            پاک کردن\n          </Button>\n          <Popover\n            placement=\"bottom\"\n            isOpen={popoverOpen}\n            target=\"Popover1\"\n            className=\"popover-danger\"\n          >\n            <PopoverHeader>اخطار</PopoverHeader>\n            <PopoverBody>\n              پاک کردن این رکورد دام هایی که نتیجه ی این بارداری بوده اند را\n              دچار مشکل میکند. در صورتی که راهی جز پاک کردن این رکورد وجود ندارد\n              لطفا با مراجعه به بخش ارورها نسبت به رفع مشکلاتی که متعاقبا به\n              وجود خواهد آمد اقدام کنید\n            </PopoverBody>\n          </Popover>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\">\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport PegnancyEditModal from \"../Modals/pregnancy\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  // const [itemKey, setItemKey] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState();\n\n  const handleEditModalOpen = () => {\n    // console.log(\"handle modal close\");\n    setEditModalOpen(!editModalOpen);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelectItem = (key) => {\n    const item = props.pregnancyRecords.filter((i) => i.pregnancy._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const renderBody = () => {\n    const createdAtJdate = momentJalaali(\n      props.exit.date,\n      \"YYYY-M-DTHH:mm:ss.SSSZ\"\n    ).format(\"jYYYY-jM-jD\");\n\n    return (\n      <tr>\n        <td>{createdAtJdate}</td>\n        {props.exit.type === \"sell\" ? <td>فروش</td> : null}\n        {props.exit.type === \"slaughter\" ? <td>ذبح</td> : null}\n        {props.exit.type === \"death\" ? <td>{props.exit.reason}</td> : null}\n\n        {/* <td>{w.male._key}</td> */}\n        {/* <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", w.pregnancy._key);\n                handleSelectItem(w.pregnancy._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td> */}\n      </tr>\n    );\n\n    // return null;\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">تاریخچه بارداری</CardHeader>\n        <CardBody>\n          {props.exit ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>نحوه ی خروج</th>\n                </tr>\n              </thead>\n              <tbody>{renderBody()}</tbody>\n            </Table>\n          ) : (\n            <p>رکوردی ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <PegnancyEditModal\n        handleClose={handleEditModalOpen}\n        isOpen={editModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  Col,\n  Row,\n} from \"reactstrap\";\n\n// api\n// import putPregnancyApi from \"API/pregnancy/put\";\nimport ApiPost from \"API/post\";\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [maleKey, setMaleKey] = useState(\"\");\n  const [maleKeyError, setMaleKeyError] = useState(\"\");\n  const [maleOptions, setMaleOptions] = useState([]);\n  //   const [error, setError] = useState(\"\");\n\n  const checkForErrors = () => {\n    console.log(\"start checking for errors\");\n    return new Promise((resolve, reject) => {\n      if (!maleKey) {\n        reject(\"ورود کد دام نر برای بارداری الزامی است\");\n      } else {\n        resolve();\n      }\n    });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleFatherKeySelect = (_key) => {\n    setMaleOptions([]);\n    setMaleKey(_key);\n    console.log(_key);\n  };\n\n  const handleFatherKeyChange = (value) => {\n    setMaleKey(value);\n\n    // console.log(\n    //   \"=============\",\n    //   `api/v0/animal/stock/10/${value}/0/${props.selectedAnimal.type}/${props.selectedAnimal.race}`\n    // );\n\n    const q = `limit:10&&key:${value}&&type:${props.selectedAnimal.type}&&race:${props.selectedAnimal.race}`;\n    ApiGet(`api/v0/animal/stock/${q}`)\n      .then((res) => {\n        if (!res.result.length) notification(\"نتیجه ای پیدا نشد\", \"warning\");\n        setMaleOptions(res.result);\n        if (value.length === 6 && res.results[0].key === value) {\n          setMaleOptions([]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   submit                                   */\n  /* -------------------------------------------------------------------------- */\n  const handleSubmit = () => {\n    checkForErrors()\n      .then(() => {\n        const data = {\n          entry: {\n            createdAt: momentJalaali(),\n            date,\n            maleKey,\n            femaleKey: props.selectedAnimal._key,\n          },\n          token: localStorage.artimal,\n        };\n\n        ApiPost(\"api/v0/pregnancy/new\", data)\n          .then((res) => {\n            console.log(res);\n            notification(res.result, \"success\");\n            props.forceUpdate();\n          })\n          .catch((err) => {\n            console.log(err);\n            notification(err.error, \"danger\");\n          });\n      })\n      .catch((err) => {\n        setMaleKeyError(err);\n      });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 conditions                                 */\n  /* -------------------------------------------------------------------------- */\n  if (!maleKey && maleOptions.length) {\n    setMaleOptions([]);\n  }\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>پلاک پدر</Label>\n          <Input\n            placeholder=\"پلاک پدر\"\n            value={maleKey}\n            onChange={(e) => {\n              handleFatherKeyChange(e.target.value);\n            }}\n            type=\"text\"\n          />\n          {maleOptions.length ? (\n            <ListGroup className=\"input-options\">\n              {maleOptions.map((o, i) => {\n                return (\n                  <ListGroupItem\n                    key={`listItem${i}`}\n                    action\n                    onClick={() => handleFatherKeySelect(o.key)}\n                    // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                    type=\"button\"\n                  >\n                    <Row>\n                      <Col>{o.key}</Col>\n                      <Col>{o.type}</Col>\n                      <Col>{o.race}</Col>\n                    </Row>\n                  </ListGroupItem>\n                );\n              })}\n            </ListGroup>\n          ) : null}\n          {maleKeyError ? (\n            <p className=\"error-text-form\">{maleKeyError}</p>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          {/* {error ? <p className=\"error-text-form\">{error}</p> : null} */}\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport PegnancyEditModal from \"../Modals/pregnancy\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  // const [itemKey, setItemKey] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState();\n\n  const handleEditModalOpen = () => {\n    // console.log(\"handle modal close\");\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleSelectItem = (key) => {\n    const item = props.pregnancyRecords.filter((i) => i.pregnancy._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const renderBody = () => {\n    console.log(\"----\", props.pregnancyRecords);\n\n    const result = props.pregnancyRecords.map((w, i) => {\n      console.log(i);\n      const createdAtJdate = momentJalaali(\n        w.pregnancy.startedAt,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n\n      const finishedAt = () => {\n        if (w.pregnancy.finishedAt) {\n          momentJalaali(\n            w.pregnancy.finishedAt,\n            \"YYYY-M-DTHH:mm:ss.SSSZ\"\n          ).format(\"jYYYY-jM-jD\");\n        } else {\n          return \"در جریان\";\n        }\n      };\n      return (\n        <tr key={`item${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{finishedAt()}</td>\n          <td>{w.male._key}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", w.pregnancy._key);\n                handleSelectItem(w.pregnancy._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    console.log(result);\n\n    return result;\n\n    // return null;\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">تاریخچه بارداری</CardHeader>\n        <CardBody>\n          {props.pregnancyRecords.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>شروع</th>\n                  <th>پایان</th>\n                  <th>کد نر</th>\n                </tr>\n              </thead>\n              <tbody>{renderBody()}</tbody>\n            </Table>\n          ) : (\n            <p>رکوردی ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <PegnancyEditModal\n        handleClose={handleEditModalOpen}\n        isOpen={editModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notifications from \"helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\n// api\n// import createDiseaseApi from \"API/disease/create\";\nimport ApiPost from \"API/post\";\n\n// default values\nconst diseaseOptions = [\n  \"سل گاوی\",\n  \"آنتروتوکسمی\",\n  \"شاربن\",\n  \"بروسلوز\",\n  \"آبله ی گوسفندی\",\n  \"آگالاکسی\",\n  \"هاری\",\n  \"تب برفکی\",\n];\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const [date, setDate] = useState(momentJalaali());\n  const [disease, setDisease] = useState([]);\n  const [diseaseError, setDiseaseError] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  //   const [commentError, setCommentError] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlres                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSubmit = () => {\n    if (disease.length) {\n      const data = {\n        entry: {\n          date,\n          createdAt: momentJalaali(),\n          value: disease,\n          key: props.animalKey,\n          comment,\n        },\n        token: localStorage.artimal,\n      };\n\n      console.log(data);\n      // createDiseaseApi(data)\n      ApiPost(\"api/v0/disease\", data)\n        .then((res) => {\n          console.log(res);\n          notifications(res.result, \"success\");\n          setDisease([]);\n          setComment(\"\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(err);\n          notifications(err.error, \"danger\");\n        });\n    } else {\n      setDiseaseError(\"ورود بیماری الزامی است\");\n    }\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>بیماری</Label>\n          <Typeahead\n            className=\"typeahead\"\n            id=\"vaccine-typeahead\"\n            labelKey=\"name\"\n            onChange={setDisease}\n            options={diseaseOptions}\n            placeholder=\"بیماری را انتخاب کنید\"\n            selected={disease}\n          />\n          <p className=\"error-text-form\">{diseaseError}</p>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleText\">توضیحات</Label>\n          <Input\n            type=\"textarea\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          {/* <p className=\"error-text-form\">{deathCommentError}</p> */}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n// import removeDiseaseApi from \"../../API/disease/remove\";\n// import updateDiseaseApi from \"../../API/disease/update\";\nimport ApiPut from \"API/put\";\nimport ApiDelete from \"API/delete\";\n\n// default values\nconst diseaseOptions = [\n  \"سل گاوی\",\n  \"آنتروتوکسمی\",\n  \"شاربن\",\n  \"بروسلوز\",\n  \"آبله ی گوسفندی\",\n  \"آگالاکسی\",\n  \"هاری\",\n  \"تب برفکی\",\n];\n\nconst drugOptions = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst effectOptions = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\nexport default (props) => {\n  console.log(\"+++++++++++++++++++++++++++++\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [disease, setDisease] = useState(\"\");\n  const [diseaseError, setDiseaseError] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  // new step\n  const [newStep, setNewStep] = useState(false);\n  const [drugs, setDrugs] = useState([]);\n  const [effects, setEffects] = useState([]);\n  const [treatment, setTreatment] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = (confirmToDeleteOut) => {\n    // const data = {\n    //   entry: {\n    //     key: props.selectedItem._key,\n    //   },\n    //   confirmToDeleteOut,\n    //   token: localStorage.artimal,\n    // };\n    // console.log(\"remove button clicked :: key is \", data);\n\n    ApiDelete(\n      `api/v0/disease/${localStorage.artimal}/${props.selectedItem._key}/${props.animalKey}/${confirmToDeleteOut}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(\"errrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\");\n        console.log(err.status);\n        if (err.status && err.status === 403) {\n          alert(err.error);\n          const res = window.confirm(err.error);\n\n          // console.log(res);\n          if (res === true) {\n            handleRemoveRecord(true);\n          }\n        } else {\n          notification(err.error, \"danger\");\n        }\n      });\n\n    // removeDiseaseApi(data)\n  };\n\n  const handleSubmit = () => {\n    const data = {\n      entry: {\n        value: disease,\n        date,\n        key: props.selectedItem._key,\n        animalKey: props.animalKey,\n        comment,\n      },\n      token: localStorage.artimal,\n    };\n\n    console.log(data);\n\n    ApiPut(\"api/v0/disease\", data)\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const handleNewStep = () => {\n  //   setNewStep(true);\n  // };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setDisease([props.selectedItem.value]);\n      setComment(props.selectedItem.comment);\n    }\n  }, [props]);\n\n  // useEffect(() => {\n  //   if (props.isOpen === false) setNewStep(false);\n  // }, [props.isOpen]);\n\n  // console.log(\".....................XXXXXX\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n            <Label>بیماری</Label>\n            <Typeahead\n              className=\"typeahead\"\n              id=\"vaccine-typeahead\"\n              labelKey=\"name\"\n              onChange={setDisease}\n              options={diseaseOptions}\n              placeholder=\"واکسن را انتخاب کنید\"\n              selected={disease}\n            />\n            <p className=\"error-text-form\">{diseaseError}</p>\n            <Label for=\"exampleText\">توضیحات</Label>\n            <Input\n              type=\"textarea\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            {/* <p className=\"error-text-form\">{deathCommentError}</p> */}\n\n            <Button color=\"danger\" onClick={() => handleRemoveRecord(false)}>\n              پاک کردن\n            </Button>\n          </>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n// import createDiseaseRelatedApi from \"../../API/disease/createRelated\";\n// import updateVaccineApi from \"../../API/vaccine/update\";\nimport ApiPost from \"API/post\";\n\n// default values\nconst drugOptions = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst effectOptions = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState(momentJalaali());\n  const [comment, setComment] = useState(\"\");\n\n  // new step\n  const [drugs, setDrugs] = useState([]);\n  const [effects, setEffects] = useState([]);\n  const [treatment, setTreatment] = useState(\"\");\n  const [isCured, setIsCured] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    // const data = {\n    //   entry: {\n    //     key: props.selectedItem.vaccine._key,\n    //   },\n    //   token: localStorage.artimal,\n    // };\n    // console.log(\"remove buttomn clicked :: key is \", data);\n    // removeVaccineApi(data)\n    //   .then((res) => {\n    //     props.forceUpdate();\n    //     props.handleClose();\n    //     notification(res.result, \"success\");\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  const handleSubmit = () => {\n    if (\n      !comment &&\n      !drugs.length &&\n      !treatment &&\n      !effects.length &&\n      !isCured\n    ) {\n      notification(\"همه ی فیلدها خالی است\", \"danger\");\n    } else {\n      const data = {\n        entry: {\n          drugs,\n          effects,\n          key: props.selectedItem._key,\n          animalKey: props.animalKey,\n          date,\n          treatment,\n          comment,\n          isCured,\n        },\n        token: localStorage.artimal,\n      };\n      console.log(data);\n      ApiPost(\"api/v0/disease/step\", data)\n        .then((res) => {\n          props.forceUpdate();\n          props.handleClose();\n          notification(res.result, \"success\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n            <Label for=\"exampleText\">توضیحات</Label>\n            <Input\n              type=\"textarea\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            {/* <p className=\"error-text-form\">{deathCommentError}</p> */}\n            <Label>داروها</Label>\n            <Typeahead\n              clearButton\n              // defaultSelected={drugOptions.slice(0, 5)}\n              id=\"selections-example\"\n              labelKey=\"name\"\n              multiple\n              options={drugOptions}\n              onChange={setDrugs}\n              value={drugs}\n              placeholder=\"Choose a state...\"\n            />\n            <Label>اقدامات درمانی</Label>\n            <Input\n              type=\"textarea\"\n              value={treatment}\n              onChange={(e) => setTreatment(e.target.value)}\n            />\n            <Label>عوارض بیماری</Label>\n            <Typeahead\n              clearButton\n              // defaultSelected={drugOptions.slice(0, 5)}\n              id=\"selections-example\"\n              labelKey=\"name\"\n              multiple\n              options={effectOptions}\n              onChange={setEffects}\n              value={effects}\n              placeholder=\"Choose a state...\"\n            />\n            <div>\n              <Label\n                check\n                style={{\n                  position: \"unset\",\n                  verticalAlign: \"middle\",\n                }}\n              >\n                <Input\n                  check\n                  style={{ marginRight: \"10\" }}\n                  type=\"checkbox\"\n                  checked={isCured}\n                  onChange={() => setIsCured(!isCured)}\n                />\n                <span style={{ marginRight: 22 }}>درمان</span>\n              </Label>\n            </div>\n          </>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// import DatePicker from \"react-datepicker2\";\n// import notification from \"../../helpers/notification\";\n// import { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { Timeline, TimelineEvent } from \"react-event-timeline\";\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Badge,\n  Alert,\n} from \"reactstrap\";\n\n// api\n// import getDetailsApi from \"API/disease/getDetails\";\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [details, setDetails] = useState([]);\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      // console.log(\"ooooooooooooooooooooooooo\", props.selectedItem._key);\n      // getDetailsApi(props.selectedItem._key)\n      ApiGet(`api/v0/disease/step/${props.selectedItem._key}`)\n        .then((res) => {\n          console.log(\"<<<<<<<<<<<<<\", res);\n          // props.forceUpdate();\n          // props.handleClose();\n          // notification(res.result, \"success\");\n          setDetails(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [props.selectedItem]);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          {props.selectedItem ? props.selectedItem.value : null}\n        </ModalHeader>\n        <ModalBody>\n          <Timeline className=\"timeline\">\n            {details.map((step) => {\n              return (\n                <TimelineEvent\n                  className=\"timeline-event\"\n                  // title={props.selectedItem.value}\n                  createdAt={momentJalaali(\n                    step.date,\n                    \"YYYY-M-DTHH:mm:ss.SSSZ\"\n                  ).format(\"jYYYY-jM-jD\")}\n                >\n                  {step.drugs && step.drugs.length ? (\n                    <>\n                      <h6>داروها</h6>\n                      {step.drugs.map((drug) => (\n                        <p>{drug}</p>\n                      ))}\n                    </>\n                  ) : null}\n                  {step.effects && step.effects.length ? (\n                    <>\n                      <h6>عوارض</h6>\n                      {step.effects.map((effect) => (\n                        <p>{effect}</p>\n                      ))}\n                    </>\n                  ) : null}\n                  {step.comment && step.comment ? (\n                    <>\n                      <h6>کامنت</h6>\n                      <p>{step.comment}</p>\n                    </>\n                  ) : null}\n                  {step.treatment ? (\n                    <>\n                      <h6>اقدامات درمانی</h6>\n                      <p>{step.treatment}</p>\n                    </>\n                  ) : null}\n                  {step.isCured ? (\n                    <h4>\n                      <Badge color=\"success\" style={{ padding: 10 }}>\n                        درمان\n                      </Badge>\n                    </h4>\n                  ) : null}\n                  {step.died ? (\n                    <h4>\n                      <Badge color=\"danger\" style={{ padding: 10 }}>\n                        مرگ\n                      </Badge>\n                    </h4>\n                  ) : null}\n                </TimelineEvent>\n              );\n            })}\n          </Timeline>\n          {!details.length ? (\n            <Alert color=\"danger\">تایخچه ای برای این بیماری ثبت نشده است</Alert>\n          ) : null}\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button> */}\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport EditModal from \"../../Modals/disease\";\nimport NewStatus from \"../../Modals/newStatusDisease\";\nimport DetailsModal from \"../../Modals/diseaseDetails\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [selectedItem, setSelectedItem] = useState();\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [newStatusModalOpen, setNewStatusModalOpen] = useState(false);\n  const [detailsModalOpen, setDetailsModalOpen] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelectItem = (key) => {\n    // console.log(\"XXXXXXXXXXXXXXXXXXX\", props.diseaseArr[0].d);\n    const item = props.diseaseArr.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleNewStatusModalOpen = () => {\n    setNewStatusModalOpen(!newStatusModalOpen);\n  };\n\n  const handleDetailsModalOpen = () => {\n    setDetailsModalOpen(!detailsModalOpen);\n  };\n\n  const handleBody = () => {\n    const result = props.diseaseArr.map((disease, i) => {\n      const createdAtJdate = momentJalaali(\n        disease.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={`weightItem${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{disease.value}</td>\n          <td>{disease.active ? \"فعال\" : \"غیرفعال\"}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(disease._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(disease._key);\n                handleNewStatusModalOpen();\n              }}\n              disabled={!disease.active}\n            >\n              وضعیت جدید\n            </Button>\n          </td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(disease._key);\n                handleDetailsModalOpen();\n              }}\n            >\n              جزئیات\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  console.log(\"..............pppppp.\", props);\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">بیماری ها</CardHeader>\n        <CardBody>\n          {props.diseaseArr.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>بیماری</th>\n                  <th>وضعیت</th>\n                </tr>\n              </thead>\n              <tbody>{handleBody()}</tbody>\n            </Table>\n          ) : (\n            <p>بیماری ای برای این دام ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <EditModal\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n        animalKey={props.animalKey}\n      />\n      <NewStatus\n        isOpen={newStatusModalOpen}\n        handleClose={handleNewStatusModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n        animalKey={props.animalKey}\n      />\n      <DetailsModal\n        isOpen={detailsModalOpen}\n        handleClose={handleDetailsModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Button,\n  Label,\n  Input,\n  CardTitle,\n  CardFooter,\n} from \"reactstrap\";\n\n// api\nimport ApiPost from \"API/post\";\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [milkWeight, setMilkWeight] = useState(\"\");\n  const [milkWeightError, setMilkWeightError] = useState(\"\");\n\n  const handleSubmit = () => {\n    console.log(\"clicked\");\n    if (!milkWeight) {\n      setMilkWeightError(\"ورود وزن شیر  دوشیده شده الزامی است\");\n    } else {\n      const data = {\n        entry: {\n          value: milkWeight,\n          date: date,\n          key: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      ApiPost(\"api/v0/milk\", data)\n        .then((res) => {\n          if (milkWeightError) setMilkWeightError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          if (err.error) {\n            notification(err.error, \"danger\");\n          } else {\n            notification(\"خطا در برقراری ارتباط\", \"danger\");\n          }\n        });\n\n      console.log(data);\n    }\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">شیر</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <DatePicker\n            isGregorian={false}\n            timePicker={false}\n            value={date}\n            onChange={(value) => setDate(value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>وزن</Label>\n          <FormGroup>\n            <Input\n              placeholder=\"کیلوگرم\"\n              value={milkWeight}\n              onChange={(e) => {\n                setMilkWeight(e.target.value);\n              }}\n              type=\"number\"\n            />\n          </FormGroup>\n          {milkWeightError ? (\n            <p className=\"error-text-form\">{milkWeightError}</p>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n\n      <CardFooter className=\"button-group\"></CardFooter>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n\nimport ApiDelete from \"API/delete\";\nimport ApiPut from \"API/put\";\n\nexport default (props) => {\n  console.log(\"--___-___-_----_\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [value, setValue] = useState(\"\");\n  const [valueError, setValueError] = useState(\"\");\n  const [dateError, setDateError] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    const data = {\n      entry: {\n        key: props.selectedItem._key,\n      },\n      token: localStorage.artimal,\n    };\n    console.log(\"remove buttomn clicked :: key is \", data);\n\n    ApiDelete(\n      `api/v0/milk/${localStorage.artimal}/${props.selectedItem._key}/${props.animalKey}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        if (err.error) {\n          notification(err.error);\n        } else {\n          notification(\"خطا در برقراری ارتباط\", \"danger\");\n        }\n      });\n  };\n\n  const handleSubmit = () => {\n    setValueError(\"\");\n    setDateError(\"\");\n    if (!value) {\n      setValueError(\"ورود وزن شیر الزامی است\");\n    }\n    if (!date) {\n      setDateError(\"ورود تاریخ الزامی است\");\n    }\n\n    if (!dateError && !valueError) {\n      const data = {\n        entry: {\n          value,\n          date,\n          key: props.selectedItem._key,\n          animalKey: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      ApiPut(\"api/v0/milk\", data)\n        .then((res) => {\n          props.forceUpdate();\n          props.handleClose();\n          notification(res.result, \"success\");\n        })\n        .catch((err) => {\n          if (err.error) {\n            notification(err.error);\n          } else {\n            notification(\"خطا در برقراری ارتباط\", \"danger\");\n          }\n        });\n    }\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setValue(props.selectedItem.value);\n      console.log(\"sendig requeeeeeeeeeeeeeest\");\n    }\n  }, [props]);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <DatePicker\n            isGregorian={false}\n            timePicker={false}\n            value={date}\n            onChange={(value) => setDate(value)}\n          />\n          <p className=\"error-text-form\">{dateError}</p>\n\n          <Label>وزن</Label>\n          <Input\n            placeholder=\"به کیلوگرم\"\n            value={value}\n            onChange={(e) => {\n              console.log(e);\n              setValue(e.target.value);\n            }}\n            type=\"number\"\n          />\n          <p className=\"error-text-form\">{valueError}</p>\n\n          <Button color=\"danger\" onClick={handleRemoveRecord}>\n            پاک کردن\n          </Button>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n// component\nimport EditModal from \"./editModal\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState();\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlders                                 */\n  /* -------------------------------------------------------------------------- */\n  const handleSelectItem = (key) => {\n    const item = props.milkRecords.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  console.log(\"++++++\", props);\n  const renderBody = () => {\n    const result = props.milkRecords.map((m, i) => {\n      const createdAtJdate = momentJalaali(\n        m.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={`weightItem${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{m.value}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", m);\n                handleSelectItem(m._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">جدول شیردهی</CardHeader>\n        <CardBody>\n          {props.milkRecords.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>وزن</th>\n                </tr>\n              </thead>\n              <tbody>{renderBody()}</tbody>\n            </Table>\n          ) : (\n            <p>رکوردی ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <EditModal\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Spinner,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\n// api\nimport ApiPost from \"API/post\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [role, setRole] = useState();\n  const [roleError, setRoleError] = useState(\"\");\n\n  const [username, setUsername] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const [onHold, setOnHold] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  functions                                 */\n  /* -------------------------------------------------------------------------- */\n  const validate = () => {\n    return new Promise((resolve, reject) => {\n      const errors = [];\n      if (!role) {\n        errors.push({\n          role: \"ورود نقش کاربر برای ثبت کابر جدید الزامی است\",\n        });\n      }\n\n      if (!username) {\n        errors.push({\n          username: \"ورود نام کاربری برای ثبت کاربر جدید الزامی است\",\n        });\n      } else if (username.length < 4) {\n        errors.push({\n          username: \"نام کاربری باید حداقل ۵ کاراکتر داشته باشد\",\n        });\n      }\n\n      if (!password) {\n        errors.push({\n          password: \"ورود پسورد برای ثبت کاربر جدید الزامی است\",\n        });\n      } else if (password.length < 4) {\n        errors.push({\n          password: \"پسورد باید حداقل ۵ کاراکتر داشته باشد\",\n        });\n      }\n\n      if (errors.length) reject(errors);\n      resolve();\n    });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleSubmit = () => {\n    setOnHold(true);\n    setRoleError(\"\");\n    setUsernameError(\"\");\n    setPasswordError(\"\");\n    validate()\n      .then(() => {\n        const data = {\n          entry: {\n            role,\n            username,\n            password,\n          },\n          token: localStorage.artimal,\n        };\n\n        ApiPost(\"api/v0/user\", data)\n          .then((res) => {\n            console.log(res);\n            notification(res.result, \"success\");\n          })\n          .catch((err) => {\n            console.log(err);\n            if (err.error && err.error.username) {\n              setUsernameError(err.error.username);\n            } else if (err.error) {\n              notification(err.error, \"danger\");\n            } else {\n              notification(\"سرور در دسترس نمیباشد\", \"danger\");\n            }\n          })\n          .finally(() => {\n            setOnHold(false);\n          });\n      })\n      .catch((errors) => {\n        errors.forEach((err) => {\n          const key = Object.keys(err)[0];\n          if (key === \"role\") setRoleError(err.role);\n          if (key === \"username\") setUsernameError(err.username);\n          if (key === \"password\") setPasswordError(err.password);\n        });\n      });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">ایجاد کاربر جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>نقش</Label>\n          <div style={{ display: \"flex\" }}>\n            <FormGroup check>\n              <Label check>\n                <span>ادمین</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setRole(1)}\n                  checked={role === 1}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>کابر</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setRole(2)}\n                  checked={role === 2}\n                />\n              </Label>\n            </FormGroup>\n          </div>\n          <p className=\"error-text-form\">{roleError}</p>\n        </FormGroup>\n        <FormGroup>\n          <Label>نام کاربری</Label>\n          <Input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            type=\"text\"\n          />\n          <p className=\"error-text-form\">{usernameError}</p>\n        </FormGroup>\n\n        <FormGroup>\n          <Label>پسورد</Label>\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <p className=\"error-text-form\">{passwordError}</p>\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            {onHold ? <Spinner size=\"sm\" color=\"light\" /> : \"تایید\"}\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\nimport Search from \"views/Search.jsx\";\nimport Errors from \"views/Errors.jsx\";\nimport Logs from \"views/Logs.jsx\";\nimport User from \"views/User.jsx\";\nimport Stock from \"views/Stock.jsx\";\nimport Incomes from \"views/Incomes.jsx\";\nimport Expenses from \"views/Expenses.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"داشبورد\",\n    icon: \"nc-icon nc-paper\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/addRecord\",\n    name: \"رکورد جدید\",\n    icon: \"nc-icon nc-simple-add\",\n    component: Search,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/logs\",\n    name: \"لاگ ها\",\n    icon: \"nc-icon nc-paper\",\n    component: Logs,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user\",\n    name: \"کاربران\",\n    icon: \"nc-icon nc-single-02\",\n    component: User,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/errors\",\n    name: \"ارورها\",\n    icon: \"nc-icon nc-alert-circle-i\",\n    component: Errors,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/stock\",\n    name: \"موجودی\",\n    icon: \"nc-icon nc-bell-55\",\n    component: Stock,\n    layout: \"/admin\",\n  },\n\n  {\n    path: \"/expenses\",\n    name: \"هزینه ها\",\n    icon: \"nc-icon nc-basket\",\n    component: Expenses,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/incomes\",\n    name: \"درآمدها\",\n    icon: \"nc-icon nc-shop\",\n    component: Incomes,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","import React, { useState, useEffect } from \"react\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// moment-jalaali\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Spinner,\n} from \"reactstrap\";\n// core components\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart,\n} from \"variables/charts.jsx\";\n\n// api\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [totalAnimal, setTotalAnimal] = useState(\"\");\n  const [thisMonthExpense, setThisMonthExpense] = useState(\"\");\n\n  useEffect(() => {\n    ApiGet(\"api/v0/animal/total\")\n      .then((res) => {\n        setTotalAnimal(res.result);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    const currnetYM = momentJalaali().format(\"jYYYY/jM\");\n    console.log(\"......^^^^^^^^^.........\");\n    const firstDayOfMonth = currnetYM + \"/1 00:00\";\n\n    // TODO: create from dynamic\n    // const from = `${momentJalaali(\"1399/2/1 00:00\", \"jYYYY/jM/jD HH:mm\").format(\n    //   \"YYYY-M-DTHH:mm:ss.SSS\"\n    // )}Z`;\n\n    const from = `${momentJalaali(firstDayOfMonth, \"jYYYY/jM/jD HH:mm\").format(\n      \"YYYY-M-DTHH:mm:ss.SSS\"\n    )}Z`;\n\n    const to = `${momentJalaali().format(\"YYYY-M-DTHH:mm:ss.SSS\")}Z`;\n    ApiGet(`api/v0/expenses/${from}/${to}`)\n      .then((res) => {\n        console.log(\"--------\", res);\n        setThisMonthExpense(res.result);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">تعداد کل دام ها</p>\n                      <CardTitle tag=\"p\">\n                        {totalAnimal ? (\n                          totalAnimal\n                        ) : (\n                          <Spinner type=\"grow\" color=\"secondary\" />\n                        )}\n                      </CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fas fa-sync-alt\" /> Update Now\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">هزینه ها</p>\n                      <CardTitle tag=\"p\">\n                        {\" \"}\n                        {thisMonthExpense ? (\n                          thisMonthExpense\n                        ) : (\n                          <Spinner type=\"grow\" color=\"secondary\" />\n                        )}\n                      </CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"far fa-calendar\" /> ماه جاری\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"far fa-clock\" /> In the last hour\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fas fa-sync-alt\" /> موجوودی کنونی\n                </div>\n              </CardFooter>\n            </Card>\n          </Col> */}\n        </Row>\n        {/* <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h5\">Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fa fa-history\" /> Updated 3 minutes ago\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        */}\n        {/* <Row>\n          <Col md=\"4\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fa fa-calendar\" /> Number of emails sent\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col md=\"8\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart with Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <div className=\"card-stats\">\n                  <i className=\"fa fa-check\" /> Data information certified\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      */}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport { Row, Col } from \"reactstrap\";\n\n// components\nimport Search from \"components/Search/search\";\nimport Details from \"components/Search/details\";\nimport WeightRecord from \"components/Search/weightRecord\";\nimport WeightTable from \"components/Search/weightTable\";\nimport NewWeight from \"components/Search/newWeight\";\nimport VaccineTable from \"components/Search/vaccineTable\";\nimport NewVaccine from \"components/Search/newVaccine\";\nimport Out from \"components/Search/out\";\nimport OutHistory from \"components/Search/outHistory\";\n\nimport NewPregnancy from \"components/Search/newPregnancy\";\nimport HistoryPregnany from \"components/Search/historyPregnancy\";\n// disease\nimport NewDisease from \"components/Search/disease/new\";\nimport HistoryDisease from \"components/Search/disease/history\";\n// milk\nimport Milk from \"components/Search/milk/new\";\nimport MilkTable from \"components/Search/milk/tables\";\n\n//api\n// import readVaccineApi from \"API/vaccine/read\";\n// import readDiseaseApi from \"API/disease/read\";\n// import getOutApi from \"API/out/get\";\nimport ApiGet from \"API/get\";\n\nexport default () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [key, setKey] = useState(\"\");\n  const [tool, setTool] = useState(\"\");\n  const [weight, setWeight] = useState([]);\n  const [vaccine, setVaccine] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [selectedAnimal, setSelectedAnimal] = useState({});\n  const [disease, setDisease] = useState([]);\n  const [exit, setExit] = useState();\n  // pregnancy\n  const [pregnancyRecords, setPregnancyRecords] = useState([]);\n\n  const [milkRecords, setMilkRecords] = useState([]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleUpdateKey = (_key) => {\n    console.log(_key);\n    setKey(_key);\n  };\n\n  const handleUpdateTool = (_tool) => {\n    console.log(\"new tool is :\", _tool);\n    setTool(_tool);\n  };\n\n  const handleUpdate = () => {\n    setUpdate(true);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 conditions                                 */\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    console.log(\"forceUpdate worked\", tool);\n    if (update === true) setUpdate(false);\n\n    const getWeightRecords = () => {\n      ApiGet(`api/v0/weight/${key}`)\n        .then((res) => {\n          setWeight(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    const getVaccineRecords = () => {\n      ApiGet(`api/v0/animal/vaccine/${key}`)\n        .then((res) => {\n          console.log(\"------------\", res);\n          setVaccine(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    const getPregnancyRecords = () => {\n      ApiGet(`api/v0/animal/pregnancy/${key}`)\n        .then((res) => {\n          console.log(\"#################\", res);\n          if (res.result) setPregnancyRecords(res.result);\n          else setPregnancyRecords([]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    const getDiseaseHistory = () => {\n      console.log(\"get disease history \");\n      ApiGet(`api/v0/disease/${key}`)\n        .then((res) => {\n          setDisease(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    const getMilkHistory = () => {\n      ApiGet(`api/v0/milk/${key}`)\n        .then((res) => {\n          console.log(\"res is for milk :: \", res);\n          setMilkRecords(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    if (tool === \"weight\") {\n      getWeightRecords();\n    }\n    if (tool === \"vaccine\") {\n      getVaccineRecords();\n    }\n    if (tool === \"pregnancy\") {\n      getPregnancyRecords();\n    }\n    if (tool === \"disease\") {\n      getDiseaseHistory();\n    }\n    if (tool === \"milk\") {\n      getMilkHistory();\n    }\n    if (tool === \"exit\" && selectedAnimal.exit) {\n      // getOutApi(selectedAnimal._key)\n      ApiGet(`api/v0/exit/${selectedAnimal._key}`)\n        .then((res) => {\n          console.log(\"exit history is :::: \", res);\n          setExit(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [key, selectedAnimal, tool, update]);\n\n  useEffect(() => {\n    if (key) {\n      console.log(\"+++++++++++==================++++++++++++++++++++======\");\n      ApiGet(`api/v0/animal/detail/${key}`)\n        .then((res) => {\n          console.log(\"...............\", res);\n          setSelectedAnimal(res.details);\n          // key: res.details._key,\n          // type: res.details.type,\n          // race: res.details.race,\n          // entryType: res.details.entryType,\n          // entryDate: res.details.entryDate,\n          // birthDate: res.details.birthDate,\n          // sex: res.details.sex,\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [key, update]);\n\n  console.log(\"sellected animal is ::: \", selectedAnimal);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"6\">\n          <Search\n            updateKey={handleUpdateKey}\n            updateSelectedAnimal={setSelectedAnimal}\n            selectedAnimal={selectedAnimal}\n          />\n          <Details\n            selectedAnimal={selectedAnimal}\n            updateTool={handleUpdateTool}\n          />\n        </Col>\n        <Col md=\"6\">\n          {tool === \"weight\" ? (\n            <>\n              <WeightRecord weightArr={weight} />\n              <WeightTable\n                weightArr={weight}\n                forceUpdate={handleUpdate}\n                animalKey={key}\n              />\n              {selectedAnimal.exit ? null : (\n                <NewWeight\n                  animalKey={key}\n                  weightArr={weight}\n                  forceUpdate={handleUpdate}\n                />\n              )}\n            </>\n          ) : null}\n          {tool === \"vaccine\" ? (\n            <>\n              <VaccineTable\n                vaccineArr={vaccine}\n                forceUpdate={handleUpdate}\n                animalKey={key}\n              />\n              {selectedAnimal.exit ? null : (\n                <NewVaccine animalKey={key} forceUpdate={handleUpdate} />\n              )}\n            </>\n          ) : null}\n          {tool === \"exit\" ? (\n            <>\n              {selectedAnimal.exit ? (\n                <OutHistory exit={exit} forceUpdate={handleUpdate} />\n              ) : (\n                <Out animalKey={key} forceUpdate={handleUpdate} />\n              )}\n            </>\n          ) : null}\n          {tool === \"milk\" ? (\n            <>\n              {selectedAnimal.out ? null : (\n                <>\n                  <MilkTable\n                    animalKey={key}\n                    milkRecords={milkRecords}\n                    forceUpdate={handleUpdate}\n                  />\n                  <Milk animalKey={key} forceUpdate={handleUpdate} />\n                </>\n              )}\n            </>\n          ) : null}\n          {tool === \"disease\" ? (\n            <>\n              {selectedAnimal.exit ? (\n                <HistoryDisease\n                  diseaseArr={disease}\n                  forceUpdate={handleUpdate}\n                  animalKey={key}\n                />\n              ) : (\n                <>\n                  <HistoryDisease\n                    diseaseArr={disease}\n                    forceUpdate={handleUpdate}\n                    animalKey={key}\n                  />\n                  <NewDisease animalKey={key} forceUpdate={handleUpdate} />\n                </>\n              )}\n            </>\n          ) : null}\n          {tool === \"pregnancy\" ? (\n            <>\n              <HistoryPregnany\n                pregnancyRecords={pregnancyRecords}\n                forceUpdate={handleUpdate}\n              />\n              {selectedAnimal.pregnant !== true ||\n              selectedAnimal.exit !== undefined ? (\n                <NewPregnancy\n                  selectedAnimal={selectedAnimal}\n                  forceUpdate={handleUpdate}\n                />\n              ) : null}\n            </>\n          ) : null}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\n/* <HistoryPregnancy animalKey={key} /> */\n","import React, { useEffect, useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Table, Row, Col, Button, FormGroup, Label, Input } from \"reactstrap\";\n\n// API\nimport ApiGet from \"API/get\";\n\nexport default () => {\n  const [logs, setLogs] = useState([]);\n  const [page, setpage] = useState();\n  const [uri, setUri] = useState(\"\");\n  const [animalKey, setAnimalKey] = useState(\"\");\n\n  // const [key, setKey] = useState(\"\");\n  const [value, setValue] = useState(\"همه\");\n  const [collection, setCollection] = useState(\"همه\");\n\n  if (typeof page !== \"number\") setpage(0);\n\n  useEffect(() => {\n    console.log(\"send request\");\n    ApiGet(uri)\n      .then((res) => {\n        console.log(\"..........\", res);\n        setLogs(res.result);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [uri]);\n\n  useEffect(() => {\n    const _collection = () => {\n      switch (collection) {\n        case \"همه\":\n          return \"\";\n        case \"وزن\":\n          return \"weight\";\n        case \"شیر\":\n          return \"milk\";\n        case \"بیماری\":\n          return \"disease\";\n        case \"درآمد\":\n          return \"income\";\n        case \"واکسن\":\n          return \"vaccine\";\n        case \"بارداری\":\n          return \"pregnancy\";\n        case \"مخارج\":\n          return \"expense\";\n        default:\n          return \"\";\n      }\n    };\n    // <option>ساخت</option>\n    // <option>بروزرسانی</option>\n    // <option>پاک کردن</option>\n\n    const _value = () => {\n      switch (value) {\n        case \"همه\":\n          return \"\";\n        case \"ساخت\":\n          return \"create\";\n        case \"بروزرسانی\":\n          return \"update\";\n        case \"پاک کردن\":\n          return \"delete\";\n        default:\n          return \"\";\n      }\n    };\n\n    console.log(\n      \"000000000000000000000000\",\n      typeof _collection(),\n      _collection()\n    );\n\n    let query = `${_collection() ? `collection:${_collection()}` : \"\"}${\n      _value() ? `&&value:${_value()}` : \"\"\n    }${animalKey ? `&&animalKey:${animalKey}` : \"\"}`;\n\n    console.log(\"=======================\", query, typeof query);\n\n    setUri(`api/v0/logs/pagination/20/${page}/${query}`);\n  }, [page, collection, value, animalKey]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleBody = () => {\n    return logs.map((log) => {\n      const createdAtJdate = momentJalaali(log.createdAt).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={log._key}>\n          <td>{createdAtJdate}</td>\n          <td>{log.value}</td>\n          <td>{log.type}</td>\n          <td>{log.entryId}</td>\n          <td>{log.userId}</td>\n          <td>{log.animalId}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"4\">\n          <FormGroup>\n            <Label>کالکشن</Label>\n            <FormGroup>\n              <Input\n                className=\"select-input\"\n                type=\"select\"\n                value={collection}\n                onChange={(e) => setCollection(e.target.value)}\n              >\n                <option>همه</option>\n                <option>وزن</option>\n                <option>شیر</option>\n                <option>بیماری</option>\n                <option>درآمد</option>\n                <option>واکسن</option>\n                <option>بارداری</option>\n                <option>مخارج</option>\n              </Input>\n            </FormGroup>\n          </FormGroup>\n        </Col>\n        <Col md=\"4\">\n          <FormGroup>\n            <Label>اقدام</Label>\n            <FormGroup>\n              <Input\n                className=\"select-input\"\n                type=\"select\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n              >\n                <option>همه</option>\n                <option>ساخت</option>\n                <option>بروزرسانی</option>\n                <option>پاک کردن</option>\n              </Input>\n            </FormGroup>\n          </FormGroup>\n        </Col>\n        <Col md=\"4\">\n          <FormGroup>\n            <Label for=\"exampleText\">پلاک دام</Label>\n            <Input\n              type=\"text\"\n              value={animalKey}\n              onChange={(e) => setAnimalKey(e.target.value)}\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"12\">\n          {logs.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>نوع</th>\n                  <th>مجموعه</th>\n                  <th>کد دیتای وارد شده</th>\n                  <th>توسط</th>\n                  <th>کد دام</th>\n                </tr>\n              </thead>\n              <tbody>{handleBody()}</tbody>\n            </Table>\n          ) : null}\n          <p>{page}</p>\n        </Col>\n        <Col md=\"12\">\n          <Button\n            type=\"button\"\n            onClick={() => setpage(page + 1)}\n            color=\"primary\"\n          >\n            بعدی\n          </Button>\n          {page >= 1 ? (\n            <Button\n              type=\"button\"\n              onClick={() => setpage(page - 1)}\n              color=\"secondary\"\n            >\n              قبلی\n            </Button>\n          ) : null}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nimport CreateNewUser from \"components/user/newUser\";\n\nexport default () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"6\">\n          <CreateNewUser />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Row, Col, Table } from \"reactstrap\";\n\n// api\nimport ApiGet from \"API/get\";\n\n//\nimport notification from \"../helpers/notification\";\n\nexport default () => {\n  const [uri, setUri] = useState(\"\");\n  const [page, setpage] = useState(0);\n  const [results, setResults] = useState([]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (uri) {\n      ApiGet(uri)\n        .then((res) => {\n          console.log(\"error get by pagination response\", res);\n          setResults(res.result);\n        })\n        .catch((err) => {\n          if (err.error) {\n            notification(err.error, \"danger\");\n          } else notification(\"خطا در برقراری ارتباط\", \"danger\");\n        });\n    }\n  }, [uri]);\n\n  useEffect(() => {\n    setUri(`api/v0/errors/pagination/20/${page}`);\n  }, [page]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleBody = () => {\n    return results.map((el) => {\n      const createdAtJdate = momentJalaali(el.createdAt).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={el._key}>\n          <td>{createdAtJdate}</td>\n          <td>{el.type}</td>\n          <td>{el.entryId}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            {results.length ? (\n              <Table>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>تاریخ</th>\n                    <th>نوع خطا</th>\n                    <th>کد دام</th>\n                  </tr>\n                </thead>\n                <tbody>{handleBody()}</tbody>\n              </Table>\n            ) : null}\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport { Row, Col, Table } from \"reactstrap\";\n\n// api\nimport ApiGet from \"API/get\";\n\n// components\nimport notification from \"../helpers/notification\";\n\nexport default () => {\n  const [stock, setStock] = useState({});\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    ApiGet(\"api/v0/animal/count\")\n      .then((res) => {\n        console.log(\"counting stock result :::: \", res);\n        const mergeObject = {};\n        res.result.forEach((el) => {\n          if (!mergeObject[el.type + el.race]) {\n            mergeObject[el.type + el.race] = {};\n            mergeObject[el.type + el.race].type = el.type;\n            mergeObject[el.type + el.race].race = el.race;\n            mergeObject[el.type + el.race][el.sex] = el.countType;\n          } else {\n            mergeObject[el.type + el.race][el.sex] = el.countType;\n          }\n        });\n        setStock(mergeObject);\n      })\n      .catch((err) => {\n        console.log(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\", err);\n        if (err.error) {\n          notification(err.error, \"danger\");\n        } else notification(\"خطا در برقراری ارتباط\", \"danger\");\n      });\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleBody = () => {\n    console.log(\"+==+=+++=+\", Object.entries(stock));\n    return Object.entries(stock).map(([key, value], i) => {\n      console.log(\"========================\", value);\n      // return null;\n      return (\n        <tr key={value.countType + i}>\n          <td>{value.type}</td>\n          <td>{value.race}</td>\n          <td>{value[\"0\"] ? value[\"0\"] : 0}</td>\n          <td>{value[\"1\"] ? value[\"1\"] : 0}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Table>\n            <thead className=\"text-primary\">\n              <tr>\n                <th>نوع</th>\n                <th>نژاد</th>\n                <th>تعداد نر</th>\n                <th>نعداد ماده</th>\n              </tr>\n            </thead>\n            <tbody>{handleBody()}</tbody>\n          </Table>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\n// reactstrap components\nimport { Row, Col, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nexport default () => {\n  const [type, setType] = useState();\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <p>مخارج</p>\n\n        {/* <Form>\n          <FormGroup>\n            <Label>نوع</Label>\n            <FormGroup>\n              <Input\n                className=\"select-input\"\n                type=\"select\"\n                onChange={(e) => {\n                  setType(e.target.value);\n                }}\n                isValid={type}\n                // isInvalid={Object.keys(errors.type).length || !type}\n              >\n                {!type ? <option>نوع دام را انتخاب کنید</option> : null}\n                <option>خ</option>\n                <option>بز</option>\n                <option>اسب</option>\n                <option>گاو</option>\n                <option>سگ</option>\n              </Input>\n            </FormGroup>\n          </FormGroup>\n        </Form> */}\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\n\n// reactstrap components\nimport { Row, Col } from \"reactstrap\";\n\nexport default () => {\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <p>Incomes</p>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","export const userAction = payload => {\n  return {\n    type: 'SET_USER',\n    payload\n  };\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userAction } from \"../redux/actions\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n//import signinApi from \"../API/signin\";\nimport ApiPost from \"API/post\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [usernameErrors, setUsernameErrors] = useState({});\n  const [passwordErrors, setPasswordErrors] = useState({});\n\n  const [otherError, setOtherError] = useState(\"\");\n\n  const [touched, setTouched] = useState({\n    username: false,\n    password: false,\n  });\n\n  const [serverError, setServerError] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleSubmit = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n\n    if (!username.length && !usernameErrors.isRequired) {\n      usernameErr.isRequired = \"ورود نام کاربری الزامی است\";\n    }\n    if (username.length && usernameErrors.isRequired) {\n      delete usernameErrors.isRequired;\n    }\n\n    if (!password.length && !passwordErrors.isRequired) {\n      passwordErr.isRequired = \"ورود پسورد الزامی است\";\n    }\n    if (password.length && passwordErrors.isRequired) {\n      delete passwordErrors.isRequired;\n    }\n\n    if (Object.keys(usernameErr).length) setUsernameErrors({ ...usernameErr });\n    if (Object.keys(passwordErr).length) setPasswordErrors({ ...passwordErr });\n    if (!Object.keys(usernameErr).length && !Object.keys(passwordErr).length) {\n      const data = { username, password };\n      ApiPost(\"api/v0/user/login\", data)\n        .then((res) => {\n          console.log(res);\n          localStorage.setItem(\"artimal\", res.token);\n          dispatch(userAction({ authenticated: true }));\n        })\n        .catch((e) => {\n          console.log(\"error is :: \", e);\n          if (e.hasOwnProperty(\"error\")) {\n            setServerError(e.error);\n            setOtherError(\"\");\n          } else {\n            setOtherError(\"خطا در برقراری ارتباط با سرور\");\n          }\n        });\n      // TODO: send request to server and get new tokens\n      // TODO: set global user to true\n    }\n  };\n\n  const handleErrors = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n\n    if (touched.username && !username.length && !usernameErrors.isRequired) {\n      usernameErr.isRequired = \"ورود نام کاربری الزامی است\";\n    }\n    if (username.length && usernameErrors.isRequired) {\n      delete usernameErrors.isRequired;\n    }\n\n    if (touched.password && !password.length && !passwordErrors.isRequired) {\n      passwordErr.isRequired = \"ورود پسورد الزامی است\";\n    }\n    if (password.length && passwordErrors.isRequired) {\n      delete passwordErrors.isRequired;\n    }\n\n    if (Object.keys(usernameErr).length) setUsernameErrors({ ...usernameErr });\n    if (Object.keys(passwordErr).length) setPasswordErrors({ ...passwordErr });\n  };\n\n  handleErrors();\n\n  return (\n    <>\n      <div className=\"container login-page-c\">\n        <Card className=\"card-user\">\n          <CardHeader>\n            <CardTitle tag=\"h5\">ورود</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <Row>\n                <Col className=\"px-1\">\n                  <FormGroup>\n                    <label>نام کاربری</label>\n                    <Input\n                      placeholder=\"نام کاربری خود را وارد کنید\"\n                      type=\"text\"\n                      value={username}\n                      onChange={(e) => {\n                        if (!touched.username) {\n                          setTouched({ ...touched, username: true });\n                        }\n                        setUsername(e.target.value);\n                      }}\n                    />\n                  </FormGroup>\n                  {Object.keys(usernameErrors).map((v, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`username${i}`}>\n                        {usernameErrors[v]}\n                      </p>\n                    );\n                  })}\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"px-1\">\n                  <FormGroup>\n                    <label htmlFor=\"exampleInputEmail1\">پسورد</label>\n                    <Input\n                      placeholder=\"پسورد خود را وارد کنید\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => {\n                        if (!touched.password) {\n                          setTouched({ ...touched, password: true });\n                        }\n                        setPassword(e.target.value);\n                      }}\n                    />\n                  </FormGroup>\n                  {Object.keys(passwordErrors).map((v, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`password${i}`}>\n                        {passwordErrors[v]}\n                      </p>\n                    );\n                  })}\n                </Col>\n              </Row>\n\n              <Row>\n                <div className=\"update ml-auto mr-auto\">\n                  <Button\n                    className=\"btn-wd\"\n                    color=\"primary\"\n                    type=\"button\"\n                    onClick={handleSubmit}\n                  >\n                    تایید\n                  </Button>\n                </div>\n              </Row>\n              <Row>\n                <p className=\"error-text-form\">{serverError}</p>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactNotification from \"react-notifications-component\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Login from \"views/Login.jsx\";\n\n// api\n// import isVerifiedApi from \"./API/verify\";\nimport ApiGet from \"API/get\";\n\n// actions\nimport { userAction } from \"./redux/actions\";\n\nconst hist = createBrowserHistory();\n\nexport default () => {\n  const dispatch = useDispatch();\n  const userReducer = useSelector((global) => global.user);\n  console.log(userReducer);\n\n  useEffect(() => {\n    if ((userReducer.authenticated === null, localStorage.artimal)) {\n      ApiGet(`api/v0/user/token/${localStorage.artimal}`)\n        .then((user) => {\n          dispatch(userAction({ authenticated: true, role: user.result.role }));\n          // TODO: show error somewhere on app\n        })\n        .catch((err) => {\n          // TODO: show error somewhere on app\n          console.log(err);\n          dispatch(userAction({ authenticated: false }));\n        });\n    } else {\n      dispatch(userAction({ authenticated: false }));\n    }\n  }, [dispatch, userReducer.authenticated]);\n\n  return (\n    <>\n      <ReactNotification />\n      {userReducer.authenticated === null ? null : (\n        <Router history={hist}>\n          {!userReducer.authenticated ? (\n            <Login />\n          ) : (\n            <>\n              <Switch>\n                <Route\n                  path=\"/admin\"\n                  render={(props) => <AdminLayout {...props} />}\n                />\n                <Redirect to=\"/admin/dashboard\" />\n              </Switch>\n            </>\n          )}\n        </Router>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducers from \"./redux/reducers\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\n\nimport App from \"./app\";\n\nconsole.log(\"----------------------\", process.env, process.env.REACT_APP_ENV);\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}