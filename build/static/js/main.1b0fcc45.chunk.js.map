{"version":3,"sources":["logo.svg","variables/charts.jsx","components/Sidebar/Sidebar.jsx","layouts/Admin.jsx","redux/reducers.js","helpers/notification.js","API/get.js","API/post.js","components/Modals/newAnimal.jsx","API/readAnimal.js","components/Navbars/DemoNavbar.jsx","components/Search/search.jsx","views/Notifications.jsx","components/Search/details.jsx","components/Search/weightRecord.jsx","API/delete.js","API/put.js","components/Modals/weight.jsx","components/Search/weightTable.jsx","components/Search/newWeight.jsx","components/Modals/vaccine.jsx","components/Search/vaccineTable.jsx","components/Search/newVaccine.jsx","components/Search/out.jsx","components/Modals/pregnancy.jsx","API/pregnancy/readDetails.js","API/pregnancy/remove.js","components/Search/outHistory.jsx","components/Search/newPregnancy.jsx","components/Search/historyPregnancy.jsx","components/Search/disease/new.jsx","components/Modals/disease.jsx","components/Modals/newStatusDisease.jsx","components/Modals/diseaseDetails.jsx","components/Search/disease/history.jsx","components/user/newUser.jsx","views/Typography.jsx","views/Tables.jsx","routes.js","views/Upgrade.jsx","views/Dashboard.jsx","views/Search.jsx","views/Logs.jsx","views/User.jsx","redux/actions.js","views/Login.jsx","app.js","index.js"],"names":["module","exports","__webpack_require__","p","dashboard24HoursPerformanceChart","data","canvas","labels","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","dashboardEmailStatisticsChart","label","pieceLabel","render","precision","dashboardNASDAQChart","fill","pointBorderColor","pointBorderWidth","position","ps","combineReducers","user","state","arguments","length","undefined","authenticated","role","action","type","Object","objectSpread2","payload","notification","msg","store","addNotification","message","react_default","a","createElement","Fragment","insert","container","animationIn","animationOut","dismiss","duration","onScreen","showIcon","get","_uri","uri","concat","console","log","Headers","append","req","Request","Promise","resolve","reject","fetch","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","json","wrap","_context","prev","next","sent","ok","stop","_x","apply","this","catch","err","post","h","method","body","JSON","stringify","mode","headers","formatter","Intl","NumberFormat","style","currency","newAnimal","props","_useState","useState","_useState2","slicedToArray","entryType","setEntryType","_useState3","_useState4","price","setPrice","_useState5","_useState6","weight","setWeight","_useState7","_useState8","key","setKey","_useState9","_useState10","setType","_useState11","_useState12","race","setRace","_useState13","_useState14","fatherKey","setFatherKey","_useState15","_useState16","motherKey","setMotherKey","_useState17","_useState18","gene","setGene","_useState19","_useState20","_useState21","_useState22","sex","setSex","entryDate","momentJalaali","_useState23","_useState24","birthDate","setBirthDate","_useState25","_useState26","touched","setTouched","_useState27","_useState28","errors","setErrors","_useState29","_useState30","fatherOptions","setFatherOptions","_useState31","_useState32","motherOptions","setMotherOptions","_useState33","_useState34","getNewKeyOnProgress","setGetNewKeyOnProgress","handleTouched","name","newTouched","handleKeyFather","value","abrupt","readAnimalApi","limit","results","useEffect","newErrors","isRequired","serverErr","keys","formValidationOnSubmit","cb","handleFormSubmit","animal","Number","token","localStorage","artimal","ApiPost","result","handleClose","ApiGet","keyString","String","setTimeout","male","_key","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","Label","Input","className","onChange","e","target","isValid","map","i","disabled","check","checked","dist_es","isGregorian","timePicker","placeholder","ListGroup","o","ListGroupItem","onClick","Row","Col","format","replace","readOnly","defaultValue","ModalFooter","Button","jDate","DemoNavbar","dropdownOpen","setState","Date","time","setTime","animalModalOpen","setAnimalModalOpen","sidebarToggle","createRef","interval","setInterval","clearInterval","window","innerWidth","history","location","pathname","document","documentElement","indexOf","classList","current","handleNewAnimalModalOpen","Navbar","expand","Container","fluid","ref","NavbarToggler","Collapse","navbar","toLocaleTimeString","Nav","NavItem","react_router_dom","Dropdown","nav","DropdownToggle","caret","DropdownMenu","right","DropdownItem","tag","to","Sidebar","_this","classCallCheck","_super","call","activeRoute","bind","assertThisInitialized","sidebar","React","routeName","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","_this2","data-color","bgColor","data-active-color","activeColor","href","routes","prop","path","pro","layout","activeClassName","icon","Component","search","setOptions","_type","_sex","_entryType","updateKey","updateSelectedAnimal","Card","CardHeader","CardTitle","CardBody","size","top","Search_details","selectedAnimal","Table","start","end","diff","months","Math","round","as","days","handleAge","CardFooter","updateTool","dataset","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHitRadius","weightRecord","weightArr","w","date","weightRecordChart","react_chartjs_2_es","API_delete","status","put","Modals_weight","setDate","weightError","selectedItem","entry","ApiDelete","forceUpdate","ApiPut","weightTable","editModalOpen","setEditModalOpen","setSelectedItem","handleEditModalOpen","createdAtJdate","item","filter","handleSelectItem","newWeight","setWeightError","createdAt","animalKey","notifications","error","vaccineOptions","Modals_vaccine","vaccine","setVaccine","vaccineError","react_bootstrap_typeahead_es","id","labelKey","selected","vaccineTable","vaccineArr","v","newVaccine","selectedVaccine","setSelectedVaccine","out","setMode","sellDate","setSellDate","sellPrice","setSellPrice","sellComment","setSellComment","sellPriceError","setSellPriceError","slaughterDate","setSlaughterDate","deathComment","setDeathComment","deathCommentError","setDeathCommentError","deathReasonError","setDeathReasonError","deathDate","setDeathDate","deathReason","setDeathReason","noDiseaseFound","setNoDiseaseFound","diseaseArr","setDiseaseArr","selectedDisease","setSelectedDisease","ButtonGroup","for","comment","Alert","obj","handleSubmitDisease","reason","disease","pregnancy","pregnancyDetails","setPregnancyDetails","femaleKey","setFemaleKey","readPregnancyDetailsApi","artiman","female","parent","startedAt","FemaleCard","MaleCard","DetailCard","finishedAt","handleBody","removePregnancyApi","outHistory","exit","renderBody","newPregnancy","maleKey","setMaleKey","maleKeyError","setMaleKeyError","maleOptions","setMaleOptions","historyPregnancy","pregnancyRecords","diseaseOptions","disease_new","setDisease","diseaseError","setDiseaseError","setComment","Modals_disease","handleRemoveRecord","confirmToDeleteOut","alert","confirm","drugOptions","effectOptions","newStatusDisease","drugs","setDrugs","effects","setEffects","treatment","setTreatment","isCured","setIsCured","clearButton","multiple","verticalAlign","marginRight","diseaseDetails","details","setDetails","react_event_timeline_dist","step","drug","effect","Badge","died","disease_history","newStatusModalOpen","setNewStatusModalOpen","detailsModalOpen","setDetailsModalOpen","handleNewStatusModalOpen","handleDetailsModalOpen","active","newUser","setRole","roleError","setRoleError","username","setUsername","usernameError","setUsernameError","password","setPassword","passwordError","setPasswordError","onHold","setOnHold","push","finally","forEach","Spinner","component","totalAnimal","setTotalAnimal","thisMonthExpense","setThisMonthExpense","currnetYM","firstDayOfMonth","from","lg","md","sm","xs","tool","setTool","update","setUpdate","setSelectedAnimal","setExit","setPregnancyRecords","handleUpdate","_tool","pregnant","logs","setLogs","page","setpage","setUri","entryId","userId","Admin","mainPanel","scrollTop","scrollingElement","components_Sidebar_Sidebar","assign","react_router","userAction","Login","dispatch","useDispatch","usernameErrors","setUsernameErrors","passwordErrors","setPasswordErrors","setOtherError","serverError","setServerError","usernameErr","passwordErr","handleErrors","htmlFor","setItem","hasOwnProperty","hist","createBrowserHistory","app","userReducer","useSelector","global","dist_default","process","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","getElementById"],"mappings":"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","file":"static/js/main.1b0fcc45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n    this.sidebar = React.createRef();\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.sidebar.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          {/* <a\n            href=\"https://www.creative-tim.com\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a> */}\n          <a\n            href=\"https://www.creative-tim.com\"\n            className=\"simple-text logo-normal\"\n          >\n            آرتمیان\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref={this.sidebar}>\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect, createRef } from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\n// import Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nexport default (props) => {\n  console.log(\".....................\", props);\n  const [state, setState] = useState({\n    backgroundColor: \"black\",\n    activeColor: \"info\",\n  });\n\n  const mainPanel = createRef();\n\n  useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }, [mainPanel]);\n\n  useEffect(() => {\n    return () => {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (props.history.action === \"PUSH\") {\n      mainPanel.current.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  });\n\n  // const handleActiveClick = (color) => {\n  //   setState({ ...state, activeColor: color });\n  // };\n  // const handleBgClick = (color) => {\n  //   setState({ ...state, backgroundColor: color });\n  // };\n\n  return (\n    <div className=\"wrapper\">\n      <Sidebar\n        {...props}\n        routes={routes}\n        bgColor={state.backgroundColor}\n        activeColor={state.activeColor}\n      />\n      <div className=\"main-panel\" ref={mainPanel}>\n        <DemoNavbar {...props} />\n        <Switch>\n          {routes.map((prop, key) => {\n            return (\n              <Route\n                path={prop.layout + prop.path}\n                component={prop.component}\n                key={key}\n              />\n            );\n          })}\n        </Switch>\n        {/* <Footer fluid /> */}\n      </div>\n      {/* <FixedPlugin\n        bgColor={state.backgroundColor}\n        activeColor={state.activeColor}\n        handleActiveClick={handleActiveClick}\n        handleBgClick={handleBgClick}\n      /> */}\n    </div>\n  );\n};\n","import { combineReducers } from \"redux\";\n\nconst user = (state = { authenticated: null, role: null }, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user,\n});\n","import React from \"react\";\nimport { store } from \"react-notifications-component\";\n\nexport default (msg, type) => {\n  store.addNotification({\n    // title: \"Wonderful!\",\n    message: (\n      <>\n        <br />\n        <p>{msg}</p>\n      </>\n    ),\n    type: type,\n    insert: \"bottom\",\n    container: \"bottom-left\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    dismiss: {\n      duration: 5000,\n      onScreen: true,\n      showIcon: true,\n    },\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri) => {\n  const uri = `http://${host}/${_uri}`;\n\n  console.log(\"uri is :::: \", uri);\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri);\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) {\n          resolve(json);\n        } else {\n          reject(json);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri, data) => {\n  const uri = `http://${host}/${_uri}`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) resolve(json);\n        else reject(json);\n      })\n      .catch((err) => {\n        console.log(\"is errrrrrrror \");\n        reject(err);\n      });\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n} from \"reactstrap\";\n\n// api\nimport readAnimalApi from \"API/readAnimal\";\nimport ApiGet from \"API/get\";\nimport ApiPost from \"API/post\";\n// import putAnimalAPI from \"API/putAnimal\";\n// import getActivePregnancy from \"API/pregnancy/getActive\";\n\nconst formatter = new Intl.NumberFormat(\"sv-SE\", {\n  style: \"decimal\",\n  currency: \"SEK\",\n});\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const [entryType, setEntryType] = useState(0);\n  const [price, setPrice] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [race, setRace] = useState(\"\");\n  const [fatherKey, setFatherKey] = useState(\"\");\n  const [motherKey, setMotherKey] = useState(\"\");\n  const [gene, setGene] = useState(\"\");\n  const [mother, setMother] = useState();\n\n  // NOTE: 0 is male\n  // NOTE: 1 is female\n  const [sex, setSex] = useState(0);\n\n  const entryDate = momentJalaali();\n  const [birthDate, setBirthDate] = useState(momentJalaali());\n\n  const [touched, setTouched] = useState({\n    price: false,\n    weight: false,\n    key: false,\n    fatherKey: false,\n    motherKey: false,\n  });\n\n  const [errors, setErrors] = useState({\n    price: {},\n    weight: {},\n    key: {},\n    fatherKey: {},\n    motherKey: {},\n    type: {},\n    race: {},\n    gene: {},\n  });\n\n  const [fatherOptions, setFatherOptions] = useState([]);\n  const [motherOptions, setMotherOptions] = useState([]);\n\n  const [getNewKeyOnProgress, setGetNewKeyOnProgress] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleTouched = (name) => {\n    if (!touched[name]) {\n      const newTouched = {};\n      newTouched[name] = true;\n      setTouched({ ...touched, ...newTouched });\n    }\n  };\n\n  const handleRace = () => {\n    if (type === \"گوسفند\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>افشاری</option>\n          <option>قزل افشاری</option>\n          <option>مهربان</option>\n          <option>رامنی</option>\n          <option>لری</option>\n          <option>شال</option>\n          <option>مغانی</option>\n          <option>رومانف</option>\n        </>\n      );\n    }\n    if (type === \"بز\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>ایرانی</option>\n          <option>پاکستانی</option>\n          <option>آلپاین</option>\n        </>\n      );\n    }\n    if (type === \"اسب\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>سلیمی</option>\n          <option>ایرانی</option>\n        </>\n      );\n    }\n    if (type === \"سگ\") {\n      return (\n        <>\n          {!race ? <option>نژاد دام را انتخاب کنید</option> : null}\n          <option>ژرمن</option>\n        </>\n      );\n    }\n    return null;\n  };\n\n  const handleKeyFather = (value) => {\n    setFatherKey(value);\n    readAnimalApi({ key: value, sex: 0, type, limit: 10 })\n      .then((res) => {\n        setFatherOptions(res.results);\n        if (value.length === 6 && res.results[0].key === value) {\n          setFatherOptions([]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleKeyMother = (value) => {\n    setMotherKey(value);\n    ApiGet(`api/v0/animal/stock/10/${value}/1/${type}/${race}`)\n      .then((res) => {\n        console.log(\"mother res is :::::::::\", res);\n        if (!res.result.length) {\n          notification(\"دامی پیدا نشد\", \"warning\");\n          if (motherOptions.length) setMotherOptions([]);\n        } else if (value.length === 6 && res.result[0].key === value) {\n          setMotherOptions([]);\n        } else {\n          setMotherOptions(res.result);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleFatherKeySelect = (_key) => {\n    setFatherOptions([]);\n    setFatherKey(_key);\n    console.log(_key);\n  };\n  const handleMotherKeySelect = (_key) => {\n    setMotherOptions([]);\n    setMotherKey(_key);\n    console.log(_key);\n  };\n\n  useEffect(() => {\n    const newErrors = {};\n\n    /* ------------------------------ fatherKey ------------------------------ */\n    if (\n      !fatherKey.length &&\n      !errors.fatherKey.isRequired &&\n      touched.fatherKey &&\n      entryType === 0\n    ) {\n      const error = \"ورود پلاک پدر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.fatherKey) newErrors.fatherKey = {};\n      newErrors.fatherKey.isRequired = error;\n    }\n    if (fatherKey.length && errors.fatherKey.isRequired) {\n      delete errors.fatherKey.isRequired;\n    }\n    /* ------------------------------ mother key ----------------------------- */\n    if (\n      !motherKey.length &&\n      !errors.motherKey.isRequired &&\n      touched.motherKey &&\n      entryType === 0\n    ) {\n      const error = \"ورود پلاک مادر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.motherKey) newErrors.motherKey = {};\n      newErrors.motherKey.isRequired = error;\n    }\n\n    if (motherKey.length && errors.motherKey.isRequired) {\n      delete errors.motherKey.isRequired;\n    }\n    /* --------------------------------- weight --------------------------------- */\n    if (touched.weight && !weight.length && !errors.weight.isRequired) {\n      const error = \"ورود وزن الزامی است\";\n      if (!newErrors.weight) newErrors.weight = {};\n      newErrors.weight.isRequired = error;\n    }\n    if (weight.length && errors.weight.isRequired) {\n      delete errors.weight.isRequired;\n    }\n\n    /* --------------------------------- key --------------------------------- */\n    if (key.length && errors.key.serverErr) {\n      delete errors.key.serverErr;\n    }\n    /* ---------------------------------- price --------------------------------- */\n    if (\n      entryType === 1 &&\n      touched.price &&\n      !price.length &&\n      !errors.price.isRequired\n    ) {\n      const error = \"ورود قیمت برای دام خریداری شده الزامی است\";\n      if (!newErrors.price) newErrors.price = {};\n      newErrors.price.isRequired = error;\n    }\n    if (price.length && errors.price.isRequired) {\n      delete errors.price.isRequired;\n    }\n\n    /* ---------------------------------- race ---------------------------------- */\n    if (race.length && errors.race.isRequired) {\n      delete errors.race.isRequired;\n    }\n\n    if (type === \"گاو\" && errors.race.isRequired) {\n      delete errors.race.isRequired;\n    }\n\n    /* ---------------------------------- gene ---------------------------------- */\n    if (type !== \"گوسفند\" && errors.gene.isRequired) {\n      delete errors.race.isRequired;\n    }\n\n    if (type === \"گوسفند\" && gene && errors.gene.isRequired) {\n      delete errors.gene.isRequired;\n    }\n    /* ---------------------------------- type ---------------------------------- */\n    if (type.length && errors.type.isRequired) {\n      delete errors.type.isRequired;\n    }\n\n    /* ----------------------------- changing state ----------------------------- */\n    if (Object.keys(newErrors).length) {\n      setErrors({ ...errors, ...newErrors });\n    }\n  }, [\n    entryType,\n    errors,\n    fatherKey,\n    gene,\n    key,\n    motherKey,\n    price,\n    race,\n    touched,\n    type,\n    weight,\n  ]);\n\n  // handleFormValidation();\n\n  const formValidationOnSubmit = (cb) => {\n    const newErrors = {};\n\n    /* ------------------------------ fatherKey ------------------------------ */\n    if (!fatherKey.length && !errors.fatherKey.isRequired && entryType === 0) {\n      const error = \"ورود پلاک پدر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.fatherKey) newErrors.fatherKey = {};\n      newErrors.fatherKey.isRequired = error;\n    }\n    /* ------------------------------ mother key ----------------------------- */\n    if (!motherKey.length && !errors.motherKey.isRequired && entryType === 0) {\n      const error = \"ورود پلاک مادر برای دامهای متولد شده الزامی است\";\n      if (!newErrors.motherKey) newErrors.motherKey = {};\n      newErrors.motherKey.isRequired = error;\n    }\n    /* --------------------------------- weight --------------------------------- */\n    if (!weight.length && !errors.weight.isRequired) {\n      const error = \"ورود وزن الزامی است\";\n      if (!newErrors.weight) newErrors.weight = {};\n      newErrors.weight.isRequired = error;\n    }\n\n    /* ---------------------------------- gene ---------------------------------- */\n    if (type === \"گوسفند\" && !gene && !errors.gene.isRequired) {\n      const error = \"ورود ژن برای گوسفند الزامی است\";\n      if (!newErrors.gene) newErrors.gene = {};\n      newErrors.gene.isRequired = error;\n    }\n\n    /* ---------------------------------- price --------------------------------- */\n    if (entryType === 1 && !price.length && !errors.price.isRequired) {\n      const error = \"ورود قیمت برای دام خریداری شده الزامی است\";\n      if (!newErrors.price) newErrors.price = {};\n      newErrors.price.isRequired = error;\n    }\n\n    /* ---------------------------------- race ---------------------------------- */\n    if (!race && type !== \"گاو\") {\n      const error = \"ورود نژاد دام الزامی است\";\n      if (!newErrors.race) newErrors.race = {};\n      newErrors.race.isRequired = error;\n    }\n\n    /* ---------------------------------- type ---------------------------------- */\n    if (!type) {\n      const error = \"ورود نوع دام الزامی است\";\n      if (!newErrors.type) newErrors.type = {};\n      newErrors.type.isRequired = error;\n    }\n    /* ----------------------------- changing state ----------------------------- */\n    return cb(newErrors);\n  };\n\n  const handleFormSubmit = async () => {\n    formValidationOnSubmit((newErrors) => {\n      // const splitEntryDate = entryDate\n      //   .locale('fa')\n      //   .format('jYYYY/jM/jD')\n      //   .split('/');\n\n      //   const splitBirthDate = birthDate\n      //     .locale('fa')\n      if (!Object.keys(newErrors).length) {\n        const data = {\n          animal: {\n            entryType,\n            entryDate,\n            birthDate,\n            price: Number(price),\n            weight: Number(weight),\n            key,\n            type,\n            race,\n            sex,\n            fatherKey,\n            motherKey,\n            gene,\n          },\n          token: localStorage.artimal,\n        };\n        ApiPost(\"api/v0/animal/new\", data)\n          .then((res) => {\n            notification(res.result, \"success\");\n\n            props.handleClose();\n            setKey(\"\");\n            // console.log(\".....\", res);\n\n            setEntryType(0);\n            setPrice(\"\");\n            setWeight(\"\");\n            setKey(\"\");\n            setType(\"\");\n            setRace(\"\");\n            setFatherKey(\"\");\n            setMotherKey(\"\");\n            setTouched({\n              price: false,\n              weight: false,\n              key: false,\n              fatherKey: false,\n              motherKey: false,\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n        console.log(\"sending request\");\n      } else {\n        setErrors({ ...errors, ...newErrors });\n      }\n    });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 conditions                                 */\n  /* -------------------------------------------------------------------------- */\n\n  if (!fatherKey && fatherOptions.length) {\n    setFatherOptions([]);\n  }\n\n  if (!motherKey && motherOptions.length) {\n    setMotherOptions([]);\n  }\n\n  if (!key && !getNewKeyOnProgress) {\n    console.log();\n    setGetNewKeyOnProgress(true);\n    // let counter = 0;\n\n    ApiGet(\"api/v0/animal/newKey\")\n      .then((res) => {\n        console.log(\"current animal keys\", res);\n        const keyString = String(100000 + res.result);\n        setGetNewKeyOnProgress(false);\n        setKey(keyString);\n      })\n      .catch((err) => {\n        setTimeout(() => {\n          setGetNewKeyOnProgress(false);\n        }, 3000);\n\n        errors.key.serverErr = \"خطای سروی\";\n        console.log(err);\n      });\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n\n  // if (res.details.pregnant !== true) {\n  //   if (!errors.motherKey.isNotPregnant)\n  //     setErrors({\n  //       ...errors,\n  //       motherKey: {\n  //         ...errors.motherKey,\n  //         isNotPregnant: \"دام انتخاب شده بارداری فعالی  ندارد\",\n  //       },\n  //     });\n  // } else {\n  useEffect(() => {\n    if (motherKey.length === 6) {\n      ApiGet(`api/v0/animal/detail/${motherKey}`)\n        .then((res) => {\n          console.log(\"res is ::: \", res);\n\n          ApiGet(`api/v0/animal/pregnancy/${motherKey}`).then((res) => {\n            console.log(\"-------------\", res);\n            if (!res.result.length) {\n              notification(\"بارداری ای برای این دام ثبت نشده هاست\", \"danger\");\n              setFatherKey(\"\");\n            } else setFatherKey(res.result[0].male._key);\n          });\n          console.log(\"get father key\");\n        })\n        .catch((err) => console.log(err));\n      // getActivePregnancy(motherKey)\n      //   .then((res) => {\n      //     console.log(res.result);\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //   });\n      // console.log(\n      //   \"get pregnancy active record and fill fa ther key\",\n      //   motherKey\n      // );\n    }\n  }, [errors, motherKey]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ورود دام جدید\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>نوع</Label>\n              <FormGroup>\n                <Input\n                  className=\"select-input\"\n                  type=\"select\"\n                  onChange={(e) => {\n                    setType(e.target.value);\n                    setRace(\"\");\n                  }}\n                  isValid={type}\n                  // isInvalid={Object.keys(errors.type).length || !type}\n                >\n                  {!type ? <option>نوع دام را انتخاب کنید</option> : null}\n                  <option>گوسفند</option>\n                  <option>بز</option>\n                  <option>اسب</option>\n                  <option>گاو</option>\n                  <option>سگ</option>\n                </Input>\n              </FormGroup>\n              {Object.keys(errors.type).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`type${i}`}>\n                    {errors.type[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n            <FormGroup>\n              <Label>نژاد</Label>\n              <FormGroup>\n                <Input\n                  className=\"select-input\"\n                  type=\"select\"\n                  disabled={!type || type === \"گاو\"}\n                  value={race}\n                  onChange={(e) => setRace(e.target.value)}\n                  isValid={type && race}\n                  // isInvalid={type && (Object.keys(errors.race).length || !race)}\n                >\n                  {handleRace()}\n                </Input>\n              </FormGroup>\n              {Object.keys(errors.race).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`race${i}`}>\n                    {errors.race[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n            <FormGroup>\n              <Label>نحوه ی ورود</Label>\n              <div style={{ display: \"flex\" }}>\n                <FormGroup check>\n                  <Label check>\n                    <span>تولد</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setEntryType(0)}\n                      checked={entryType === 0}\n                    />\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <span>خرید</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setEntryType(1)}\n                      checked={entryType === 1}\n                    />\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <span>موجودی سابق</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setEntryType(2)}\n                      checked={entryType === 2}\n                    />\n                  </Label>\n                </FormGroup>\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <Label>جنسیت</Label>\n              <div style={{ display: \"flex\" }}>\n                <FormGroup check>\n                  <Label check>\n                    <span>نر</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setSex(0)}\n                      checked={sex === 0}\n                    />\n                  </Label>\n                </FormGroup>\n                <FormGroup check>\n                  <Label check>\n                    <span>ماده</span>\n                    <Input\n                      type=\"radio\"\n                      onChange={() => setSex(1)}\n                      checked={sex === 1}\n                    />\n                  </Label>\n                </FormGroup>\n              </div>\n            </FormGroup>\n\n            {type === \"گوسفند\" ? (\n              <FormGroup>\n                <Label>ژن</Label>\n                <FormGroup>\n                  <Input\n                    className=\"select-input\"\n                    type=\"select\"\n                    value={gene}\n                    onChange={(e) => setGene(e.target.value)}\n                    // isValid={type && race}\n                    // isInvalid={type && (Object.keys(errors.race).length || !race)}\n                  >\n                    {!gene ? <option>ژن دام را انتخاب کنید</option> : null}\n                    <option>معمولی</option>\n                    <option>هترو</option>\n                    <option>همو</option>ٌ\n                  </Input>\n                </FormGroup>\n                {Object.keys(errors.gene).map((name, i) => {\n                  return (\n                    <p className=\"error-text-form\" key={`race${i}`}>\n                      {errors.gene[name]}\n                    </p>\n                  );\n                })}\n              </FormGroup>\n            ) : null}\n            <FormGroup>\n              <Label>\"تاریخ تولد\"</Label>\n              <FormGroup>\n                <DatePicker\n                  isGregorian={false}\n                  timePicker={false}\n                  value={birthDate}\n                  onChange={(value) => setBirthDate(value)}\n                />\n              </FormGroup>\n            </FormGroup>\n            {entryType === 0 ? (\n              <>\n                <FormGroup>\n                  <Label>پلاک مادر</Label>\n                  <Input\n                    disabled={!type || (type !== \"گاو\" && !race)}\n                    placeholder=\"پلاک مادر\"\n                    value={motherKey}\n                    onChange={(e) => {\n                      handleKeyMother(e.target.value);\n                      handleTouched(\"motherKey\");\n                    }}\n                    isValid={\n                      type &&\n                      race &&\n                      touched.motherKey &&\n                      !Object.keys(errors.motherKey).length\n                    }\n                    // isInvalid={\n                    //   type &&\n                    //   race &&\n                    //   (Object.keys(errors.motherKey).length || !motherKey)\n                    // }\n                    type=\"text\"\n                  />\n                  {motherOptions.length ? (\n                    <ListGroup className=\"input-options\">\n                      {motherOptions.map((o, i) => {\n                        return (\n                          <ListGroupItem\n                            key={`listItem${i}`}\n                            action\n                            onClick={() => handleMotherKeySelect(o.key)}\n                            // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                            type=\"button\"\n                          >\n                            <Row>\n                              <Col>{o.key}</Col>\n                              <Col>{o.type}</Col>\n                              <Col>{o.race}</Col>\n                            </Row>\n                          </ListGroupItem>\n                        );\n                      })}\n                    </ListGroup>\n                  ) : null}\n                  {Object.keys(errors.motherKey).map((name, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`motherKey${i}`}>\n                        {errors.motherKey[name]}\n                      </p>\n                    );\n                  })}\n                </FormGroup>\n                <FormGroup>\n                  <Label>پلاک پدر</Label>\n                  <Input\n                    disabled\n                    placeholder=\"پلاک پدر\"\n                    value={fatherKey}\n                    onChange={(e) => {\n                      handleKeyFather(e.target.value);\n                      handleTouched(\"fatherKey\");\n                    }}\n                    isValid={\n                      type &&\n                      race &&\n                      touched.fatherKey &&\n                      !Object.keys(errors.fatherKey).length\n                    }\n                    // isInvalid={\n                    //   type &&\n                    //   race &&\n                    //   (Object.keys(errors.fatherKey).length || !fatherKey)\n                    // }\n                    type=\"text\"\n                  />\n                  {fatherOptions.length ? (\n                    <ListGroup className=\"input-options\">\n                      {fatherOptions.map((o, i) => {\n                        return (\n                          <ListGroupItem\n                            key={`listItem${i}`}\n                            action\n                            onClick={() => handleFatherKeySelect(o.key)}\n                            // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                            type=\"button\"\n                          >\n                            <Row>\n                              <Col>{o.key}</Col>\n                              <Col>{o.type}</Col>\n                              <Col>{o.race}</Col>\n                            </Row>\n                          </ListGroupItem>\n                        );\n                      })}\n                    </ListGroup>\n                  ) : null}\n                  {Object.keys(errors.fatherKey).map((name, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`fatherKey${i}`}>\n                        {errors.fatherKey[name]}\n                      </p>\n                    );\n                  })}\n                </FormGroup>\n              </>\n            ) : null}\n            {entryType === 1 ? (\n              <FormGroup>\n                <Label>قیمت</Label>\n                <FormGroup>\n                  <Input\n                    placeholder=\"به تومان\"\n                    value={formatter.format(price)}\n                    onChange={(e) => {\n                      console.log(\"=====\", e.target.value.replace(/\\s/g, \"\"));\n                      setPrice(e.target.value.replace(/\\s/g, \"\"));\n                      handleTouched(\"price\");\n                    }}\n                    isValid={touched.price && !Object.keys(errors.price).length}\n                    // isInvalid={Object.keys(errors.price).length || !price}\n                    type=\"text\"\n                  />\n                </FormGroup>\n                {Object.keys(errors.price).map((name, i) => {\n                  return (\n                    <p className=\"error-text-form\" key={`price${i}`}>\n                      {errors.price[name]}\n                    </p>\n                  );\n                })}\n              </FormGroup>\n            ) : null}\n            <FormGroup>\n              <Label>{entryType === 0 ? \"وزن تولد\" : \"وزن هنگام ورود\"}</Label>\n              <FormGroup>\n                <Input\n                  placeholder=\"به کیلوگرم\"\n                  value={weight}\n                  onChange={(e) => {\n                    console.log(e);\n                    setWeight(e.target.value);\n                    handleTouched(\"weight\");\n                  }}\n                  isValid={touched.weight && !Object.keys(errors.weight).length}\n                  type=\"number\"\n                ></Input>\n              </FormGroup>\n              {Object.keys(errors.weight).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`weight${i}`}>\n                    {errors.weight[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n            <FormGroup>\n              <Label>شماره پلاک</Label>\n              <FormGroup>\n                <Input readOnly defaultValue={key} disabled />\n              </FormGroup>\n              {Object.keys(errors.key).map((name, i) => {\n                return (\n                  <p className=\"error-text-form\" key={`key${i}`}>\n                    {errors.key[name]}\n                  </p>\n                );\n              })}\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleFormSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (data) => {\n  const uri = `http://${host}/api/v0/animal/read`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        if (res.ok) return resolve(json);\n        reject(json);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import React, { useState, createRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport momentJalaali from \"moment-jalaali\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n} from \"reactstrap\";\n\n// components\nimport AddMewAnimalModal from \"../Modals/newAnimal\";\n\nconst jDate = momentJalaali().format(\"jYYYY/jM/jD\");\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [state, setState] = useState({\n    isOpen: false,\n    dropdownOpen: false,\n    color: \"transparent\",\n  });\n\n  // clock\n  const [time, setTime] = useState(new Date());\n  // modals\n  const [animalModalOpen, setAnimalModalOpen] = useState(false);\n\n  const sidebarToggle = createRef();\n\n  const toggle = () => {\n    if (state.isOpen) {\n      setState({\n        ...state,\n        color: \"transparent\",\n      });\n    } else {\n      setState({\n        ...state,\n        color: \"dark\",\n      });\n    }\n    setState({\n      ...state,\n      isOpen: !state.isOpen,\n    });\n  };\n  const dropdownToggle = () => {\n    setState({\n      ...state,\n      dropdownOpen: !state.dropdownOpen,\n    });\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  // useEffect(() => {\n  //   const updateColor = () => {\n  //     if (window.innerWidth < 993 && state.isOpen) {\n  //       setState({\n  //         ...state,\n  //         color: \"dark\",\n  //       });\n  //     } else {\n  //       setState({\n  //         ...state,\n  //         color: \"transparent\",\n  //       });\n  //     }\n  //   };\n  //   window.addEventListener(\"resize\", updateColor());\n\n  //   function clearEvents() {\n  //     window.removeEventListener(\"resize\", updateColor());\n  //   }\n\n  //   return () => clearEvents();\n  // }, [state]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      props.history.location.pathname !== props.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  });\n\n  const handleNewAnimalModalOpen = () => {\n    // console.log(\"handle modal close\");\n    setAnimalModalOpen(!animalModalOpen);\n  };\n\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <>\n      <Navbar\n        color={\n          props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : state.color\n        }\n        expand=\"lg\"\n        className={\n          props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            {/* <NavbarBrand ></NavbarBrand> */}\n          </div>\n          <NavbarToggler onClick={toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <p>\n              {time.toLocaleTimeString()} ساعت -- {jDate}\n              {/* <InputGroup className=\"no-border\">\n              <Input placeholder=\"Search...\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <i className=\"nc-icon nc-zoom-split\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup> */}\n            </p>\n            <Nav navbar>\n              <NavItem>\n                <Link\n                  className=\"nav-link btn-magnify\"\n                  onClick={handleNewAnimalModalOpen}\n                >\n                  <i className=\"nc-icon nc-simple-add\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Stats</span>\n                  </p>\n                </Link>\n              </NavItem>\n              <Dropdown\n                nav\n                isOpen={state.dropdownOpen}\n                toggle={(e) => dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-bell-55\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag=\"a\">Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                  <DropdownItem tag=\"a\">Something else here</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n              <NavItem>\n                <Link to=\"#pablo\" className=\"nav-link btn-rotate\">\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n      <AddMewAnimalModal\n        handleClose={handleNewAnimalModalOpen}\n        isOpen={animalModalOpen}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\n// api\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [type, setType] = useState(\"همه\");\n  const [entryType, setEntryType] = useState(\"\");\n  const [sex, setSex] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  //   const [selectedAnimal, setSelectedAnimal] = useState({});\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    const _type = type !== \"همه\" ? type : \"_\";\n    const _sex = sex ? sex : \"_\";\n    const _entryType = entryType ? entryType : \"_\";\n\n    console.log({ _type, _sex, _entryType });\n\n    console.log(\"key length is ::: \", key.length);\n    if (key.length > 5) {\n      console.log(\"get the animal \");\n      ApiGet(`api/v0/animal/stock/1/${key}/${_sex}/${_type}/${_entryType}`)\n        .then((res) => {\n          if (!res.result.length) {\n            notification(\"دامی با این پلاک پیدا نشد\", \"warning\");\n            props.updateKey(\"\");\n            props.updateSelectedAnimal({});\n          } else {\n            console.log(\"__--__--__--__\", res.result[0], { res });\n            setOptions([]);\n            setKey(res.result[0].key);\n            props.updateKey(res.result[0].key);\n          }\n        })\n        .catch((err) => {\n          console.log(\"__--__--__--__\", { err });\n        });\n    } else {\n      ApiGet(`api/v0/animal/stock/10/${key}/${_sex}/${_type}/${_entryType}`)\n        .then((res) => {\n          console.log(res);\n          if (!res.result.length) {\n            notification(\"دامی پیدا نشد\", \"warning\");\n            setOptions([]);\n          } else {\n            setOptions(res.result);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [entryType, key, props, sex, type]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleNewEntry = (_key) => {\n    setOptions([]);\n    setKey(_key);\n    props.updateKey(_key);\n    // getAnimalDetailsApi(_key)\n    //   .then((res) => {\n    //     console.log(\"...............\", res);\n    //     // setSelectedAnimal({\n    //     //   key: res.details._key,\n    //     //   type: res.details.type,\n    //     //   race: res.details.race,\n    //     //   ebtryType: res.details.entryType,\n    //     // });\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">جست و جو</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>نوع</Label>\n          <FormGroup>\n            <Input\n              className=\"select-input\"\n              type=\"select\"\n              onChange={(e) => {\n                setType(e.target.value);\n                // setRace(\"\");\n              }}\n              isValid={type}\n              // isInvalid={Object.keys(errors.type).length || !type}\n            >\n              <option>همه</option>\n              <option>گوسفند</option>\n              <option>بز</option>\n              <option>اسب</option>\n              <option>گاو</option>\n              <option>سگ</option>\n            </Input>\n          </FormGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label>نحوه ی ورود</Label>\n          <div style={{ display: \"flex\" }}>\n            <FormGroup check>\n              <Label check>\n                <span>تولد</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setEntryType(0)}\n                  checked={entryType === 0}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>خرید</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setEntryType(1)}\n                  checked={entryType === 1}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>موجودی سابق</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setEntryType(2)}\n                  checked={entryType === 2}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                className=\"icon-button-round icon-button-danger\"\n                type=\"button\"\n                color=\"danger\"\n                size=\"small\"\n                onClick={() => setEntryType(undefined)}\n              >\n                <i className=\"nc-icon nc-simple-remove text-light\" />\n              </Button>\n            </FormGroup>\n          </div>\n        </FormGroup>\n        <FormGroup>\n          <Label>جنسیت</Label>\n          <div style={{ display: \"flex\" }}>\n            <FormGroup check>\n              <Label check>\n                <span>نر</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setSex(0)}\n                  checked={sex === 0}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>ماده</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setSex(1)}\n                  checked={sex === 1}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                className=\"icon-button-round icon-button-danger\"\n                type=\"button\"\n                color=\"danger\"\n                size=\"small\"\n                onClick={() => setSex(undefined)}\n              >\n                <i className=\"nc-icon nc-simple-remove text-light\" />\n              </Button>\n            </FormGroup>\n          </div>\n        </FormGroup>\n\n        <FormGroup>\n          <Input\n            placeholder=\"پلاک دام را وارد کنید\"\n            value={key}\n            onChange={(e) => setKey(e.target.value)}\n            type=\"text\"\n          />\n          {options.length ? (\n            <ListGroup className=\"input-options\" style={{ top: 45 }}>\n              {options.map((o, i) => {\n                return (\n                  <ListGroupItem\n                    key={`listItem${i}`}\n                    action\n                    onClick={() => handleNewEntry(o.key)}\n                    // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                    type=\"button\"\n                  >\n                    <Row>\n                      <Col>{o.key}</Col>\n                      <Col>{o.type}</Col>\n                      <Col>{o.race}</Col>\n                    </Row>\n                  </ListGroupItem>\n                );\n              })}\n            </ListGroup>\n          ) : undefined}\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\n// reactstrap components\nimport {\n  UncontrolledAlert,\n  Alert,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass Notifications extends React.Component {\n  state = {\n    visible: true,\n  };\n  notificationAlert = React.createRef();\n  notify(place) {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n    switch (color) {\n      case 1:\n        type = \"primary\";\n        break;\n      case 2:\n        type = \"success\";\n        break;\n      case 3:\n        type = \"danger\";\n        break;\n      case 4:\n        type = \"warning\";\n        break;\n      case 5:\n        type = \"info\";\n        break;\n      default:\n        break;\n    }\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Paper Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"nc-icon nc-bell-55\",\n      autoDismiss: 7,\n    };\n    console.log(\"*********\", this.notificationAlertz);\n    this.notificationAlert.current.notificationAlert(options);\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <NotificationAlert ref={this.notificationAlert} />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Notifications</CardTitle>\n                  <p className=\"card-category\">\n                    Handcrafted by our colleague{\" \"}\n                    <a\n                      // target=\"_blank\"\n                      href=\"https://www.instagram.com/manu.nazare/\"\n                    >\n                      Nazare Emanuel-Ioan (Manu)\n                    </a>\n                    . Please checkout the{\" \"}\n                    <a\n                      href=\"https://github.com/creativetimofficial/react-notification-alert\"\n                      // target=\"_blank\"\n                    >\n                      full documentation.\n                    </a>\n                  </p>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      <Card className=\"card-plain\">\n                        <CardHeader>\n                          <CardTitle tag=\"h5\">Notifications Style</CardTitle>\n                        </CardHeader>\n                        <CardBody>\n                          <Alert color=\"info\">\n                            <span>This is a plain notification</span>\n                          </Alert>\n                          <UncontrolledAlert color=\"info\" fade={false}>\n                            <span>\n                              This is a notification with close button.\n                            </span>\n                          </UncontrolledAlert>\n                          <UncontrolledAlert\n                            className=\"alert-with-icon\"\n                            color=\"info\"\n                            fade={false}\n                          >\n                            <span\n                              data-notify=\"icon\"\n                              className=\"nc-icon nc-bell-55\"\n                            />\n                            <span data-notify=\"message\">\n                              This is a notification with close button and icon.\n                            </span>\n                          </UncontrolledAlert>\n                          <UncontrolledAlert\n                            className=\"alert-with-icon\"\n                            color=\"info\"\n                            fade={false}\n                          >\n                            <span\n                              data-notify=\"icon\"\n                              className=\"nc-icon nc-chart-pie-36\"\n                            />\n                            <span data-notify=\"message\">\n                              This is a notification with close button and icon\n                              and have many lines. You can see that the icon and\n                              the close button are always vertically aligned.\n                              This is a beautiful notification. So you don't\n                              have to worry about the style.\n                            </span>\n                          </UncontrolledAlert>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col md=\"6\">\n                      <Card className=\"card-plain\">\n                        <CardHeader>\n                          <CardTitle tag=\"h5\">Notification states</CardTitle>\n                        </CardHeader>\n                        <CardBody>\n                          <UncontrolledAlert color=\"primary\" fade={false}>\n                            <span>\n                              <b>Primary - </b>\n                              This is a regular notification made with\n                              color=\"primary\"\n                            </span>\n                          </UncontrolledAlert>\n                          <UncontrolledAlert color=\"info\" fade={false}>\n                            <span>\n                              <b>Info - </b>\n                              This is a regular notification made with\n                              color=\"info\"\n                            </span>\n                          </UncontrolledAlert>\n                          <UncontrolledAlert color=\"success\" fade={false}>\n                            <span>\n                              <b>Success - </b>\n                              This is a regular notification made with\n                              color=\"success\"\n                            </span>\n                          </UncontrolledAlert>\n                          <UncontrolledAlert color=\"warning\" fade={false}>\n                            <span>\n                              <b>Warning - </b>\n                              This is a regular notification made with\n                              color=\"warning\"\n                            </span>\n                          </UncontrolledAlert>\n                          <UncontrolledAlert color=\"danger\" fade={false}>\n                            <span>\n                              <b>Danger - </b>\n                              This is a regular notification made with\n                              color=\"danger\"\n                            </span>\n                          </UncontrolledAlert>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardBody>\n                  <div className=\"places-buttons\">\n                    <Row>\n                      <Col className=\"ml-auto mr-auto text-center\" md=\"6\">\n                        <CardTitle tag=\"h4\">Notifications Places</CardTitle>\n                        <p className=\"category\">Click to view notifications</p>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                        <Row>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tl\")}\n                            >\n                              Top Left\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tc\")}\n                            >\n                              Top Center\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tr\")}\n                            >\n                              Top Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                        <Row>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"bl\")}\n                            >\n                              Bottom Left\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"bc\")}\n                            >\n                              Bottom Center\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"br\")}\n                            >\n                              Bottom Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Notifications;\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  Table,\n  CardFooter,\n} from \"reactstrap\";\n\n// api\n\nexport default (props) => {\n  const handleEntryType = () => {\n    if (props.selectedAnimal.entryType === 0) return \"تولد\";\n    if (props.selectedAnimal.entryType === 1) return \"خرید\";\n    return \"موجودی پیشین\";\n  };\n\n  const handleEntrySex = () => {\n    if (props.selectedAnimal.sex === 0) return \"نر\";\n    return \"ماده\";\n  };\n\n  const handleAge = () => {\n    const start = momentJalaali(new Date());\n    const end = momentJalaali(props.selectedAnimal.birthDate);\n    const duration = momentJalaali.duration(start.diff(end));\n    const months = Math.round(duration.as(\"months\"));\n    if (months >= 1) {\n      return `${months} ماه`;\n    } else {\n      const days = Math.round(duration.as(\"days\"));\n      return `${days} روز`;\n    }\n  };\n\n  console.log(props.selectedAnimal);\n  return (\n    <>\n      {Object.keys(props.selectedAnimal).length ? (\n        <Card className=\"demo-icons\">\n          <CardHeader>\n            <CardTitle tag=\"h6\">\n              {props.selectedAnimal.type} پلاک {props.selectedAnimal._key}\n            </CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>نژاد</th>\n                  <th>جنسیت</th>\n                  <th>نوع ورود</th>\n                  <th>تاریخ ورود</th>\n                  <th>تاریخ تولد</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{props.selectedAnimal.race}</td>\n                  <td>{handleEntrySex()}</td>\n                  <td>{handleEntryType()}</td>\n                  <td>\n                    {momentJalaali(props.selectedAnimal.entryDate).format(\n                      \"jYYYY/jM/jD\"\n                    )}\n                  </td>\n                  <td>\n                    {momentJalaali(props.selectedAnimal.birthDate).format(\n                      \"jYYYY/jM/jD\"\n                    )}\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n            <p>\n              <span>سن : </span>\n              {handleAge()}\n            </p>\n          </CardBody>\n          <CardFooter className=\"button-group\">\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"weight\")}\n            >\n              وزن\n            </Button>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"vaccine\")}\n            >\n              واکسن\n            </Button>\n            <Button\n              type=\"button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"exit\")}\n            >\n              خروج\n            </Button>\n            {/* <Button\n              type=\"Button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"milk\")}\n            >\n              شیر\n            </Button> */}\n            {props.selectedAnimal.sex === 1 ? (\n              <Button\n                type=\"Button\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => props.updateTool(\"pregnancy\")}\n              >\n                بارداری\n              </Button>\n            ) : null}\n            <Button\n              type=\"Button\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={() => props.updateTool(\"disease\")}\n            >\n              بیماری\n            </Button>\n          </CardFooter>\n        </Card>\n      ) : null}\n    </>\n  );\n};\n","import React from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport { Line } from \"react-chartjs-2\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\n// api\n\nconst dataset = {\n  label: \"My First dataset\",\n  fill: true,\n  lineTension: 0.1,\n  backgroundColor: \"rgba(75,192,192,1)\",\n  borderColor: \"rgba(75,192,192,1)\",\n  borderCapStyle: \"butt\",\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: \"miter\",\n  pointBorderColor: \"rgba(75,192,192,1)\",\n  pointBackgroundColor: \"#fff\",\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n  pointHoverBorderColor: \"rgba(220,220,220,1)\",\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nexport default (props) => {\n  const labels = props.weightArr.map((w) => {\n    return momentJalaali(w.date, \"YYYY-M-DTHH:mm:ss.SSSZ\").format(\"jYY-jM-jD\");\n  });\n\n  console.log(\"wwwwwwwwwwwwwwwwwwww\", props);\n\n  const data = props.weightArr.map((w) => w.value);\n\n  dataset.data = data;\n\n  const weightRecordChart = {\n    labels,\n    datasets: [dataset],\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">نمودار تغییر وزن</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Line data={weightRecordChart} />\n      </CardBody>\n    </Card>\n  );\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri) => {\n  const uri = `http://${host}/${_uri}`;\n\n  console.log(\"uri is :::: \", uri);\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"DELETE\",\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        console.log(res.status);\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) {\n          resolve(json);\n        } else {\n          json.status = res.status;\n          reject(json);\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (_uri, data) => {\n  const uri = `http://${host}/${_uri}`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        console.log(json);\n        if (res.ok) resolve(json);\n        else reject(json);\n      })\n      .catch((err) => {\n        console.log(\"is errrrrrrror \");\n        reject(err);\n      });\n  });\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n\nimport ApiDelete from \"API/delete\";\nimport ApiPut from \"API/put\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [weight, setWeight] = useState(\"\");\n  const [weightError, setWeightError] = useState(\"\");\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    const data = {\n      entry: {\n        key: props.selectedItem._key,\n      },\n      token: localStorage.artimal,\n    };\n    console.log(\"remove buttomn clicked :: key is \", data);\n\n    ApiDelete(\n      `api/v0/weight/${localStorage.artimal}/${props.selectedItem._key}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // removeWeightApi(data)\n    //   .then((res) => {\n    //     props.forceUpdate();\n    //     props.handleClose();\n    //     notification(res.result, \"success\");\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  const handleSubmit = () => {\n    console.log(date, weight);\n\n    const data = {\n      entry: {\n        value: weight,\n        date,\n        key: props.selectedItem._key,\n      },\n      token: localStorage.artimal,\n    };\n\n    ApiPut(\"api/v0/weight\", data)\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setWeight(props.selectedItem.value);\n      console.log(\"sendig requeeeeeeeeeeeeeest\");\n    }\n  }, [props]);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <DatePicker\n            isGregorian={false}\n            timePicker={false}\n            value={date}\n            onChange={(value) => setDate(value)}\n          />\n          <Label>وزن</Label>\n          <Input\n            placeholder=\"به کیلوگرم\"\n            value={weight}\n            onChange={(e) => {\n              console.log(e);\n              setWeight(e.target.value);\n            }}\n            type=\"number\"\n          />\n          <p className=\"error-text-form\">{weightError}</p>\n          <Button color=\"danger\" onClick={handleRemoveRecord}>\n            پاک کردن\n          </Button>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n// component\nimport WeightEditModal from \"../../components/Modals/weight\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState();\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlders                                 */\n  /* -------------------------------------------------------------------------- */\n  const handleSelectItem = (key) => {\n    const item = props.weightArr.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  console.log(\"++++++\", props);\n  const renderBody = () => {\n    const result = props.weightArr.map((w, i) => {\n      const createdAtJdate = momentJalaali(\n        w.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={`weightItem${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{w.value}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", w);\n                handleSelectItem(w._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">جدول وزن</CardHeader>\n        <CardBody>\n          <Table>\n            <thead className=\"text-primary\">\n              <tr>\n                <th>تاریخ</th>\n                <th>وزن</th>\n              </tr>\n            </thead>\n            <tbody>{renderBody()}</tbody>\n          </Table>\n        </CardBody>\n      </Card>\n      <WeightEditModal\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notifications from \"../../helpers/notification\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\n// api\nimport ApiPost from \"API/post\";\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [weight, setWeight] = useState(\"\");\n  const [weightError, setWeightError] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (weight) {\n      const data = {\n        entry: {\n          date,\n          createdAt: momentJalaali(),\n          value: weight,\n          key: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      console.log(data);\n\n      ApiPost(`api/v0/weight/new`, data)\n        .then((res) => {\n          console.log(res);\n          notifications(res.result, \"success\");\n          setWeight(null);\n          // TODO: froce update\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(err);\n          notifications(err.error, \"danger\");\n        });\n      // putWeightApi(data)\n    } else {\n      setWeightError(\"وزن را وارد کنید\");\n    }\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>وزن</Label>\n          <FormGroup>\n            <Input\n              placeholder=\"به کیلوگرم\"\n              value={weight}\n              onChange={(e) => {\n                setWeight(e.target.value);\n              }}\n              type=\"number\"\n            />\n            <p className=\"error-text-form\">{weightError}</p>\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\nimport ApiDelete from \"API/delete\";\n// import updateVaccineApi from \"../../API/vaccine/update\";\nimport ApiPut from \"API/put\";\n\n// default values\nconst vaccineOptions = [\n  \"آنتروتوکسمی\",\n  \"تب برفکی\",\n  \"بروسلوز\",\n  \"آگالاکسی\",\n  \"شاربن\",\n  \"آبله\",\n  \"طاعون نشخوار کنندگان\",\n  \"قانقاریا\",\n];\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [vaccine, setVaccine] = useState(\"\");\n  const [vaccineError, setVaccineError] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    ApiDelete(\n      `api/v0/vaccine/${localStorage.artimal}/${props.selectedItem._key}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleSubmit = () => {\n    const data = {\n      entry: {\n        value: vaccine,\n        date,\n        key: props.selectedItem._key,\n      },\n      token: localStorage.artimal,\n    };\n\n    console.log(data);\n\n    ApiPut(`api/v0/vaccine`, data)\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setVaccine(props.selectedItem.value);\n    }\n  }, [props]);\n\n  console.log(\".....................XXXXXX\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <DatePicker\n            isGregorian={false}\n            timePicker={false}\n            value={date}\n            onChange={(value) => setDate(value)}\n          />\n          <Label>واکسن</Label>\n          <Typeahead\n            className=\"typeahead\"\n            id=\"vaccine-typeahead\"\n            labelKey=\"name\"\n            onChange={setVaccine}\n            options={vaccineOptions}\n            placeholder=\"واکسن را انتخاب کنید\"\n            selected={vaccine}\n          />\n          <p className=\"error-text-form\">{vaccineError}</p>\n          <Button color=\"danger\" onClick={handleRemoveRecord}>\n            پاک کردن\n          </Button>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport VaccineEditModal from \"../Modals/vaccine\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [selectedItem, setSelectedItem] = useState();\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelectItem = (key) => {\n    const item = props.vaccineArr.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleBody = () => {\n    const result = props.vaccineArr.map((v, i) => {\n      const createdAtJdate = momentJalaali(\n        v.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={v._key}>\n          <td>{createdAtJdate}</td>\n          <td>{v.value}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(v._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  console.log(\"..............pppppp.\", props);\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">واکسن ها</CardHeader>\n        <CardBody>\n          {props.vaccineArr.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>نوع</th>\n                </tr>\n              </thead>\n              <tbody>{handleBody()}</tbody>\n            </Table>\n          ) : (\n            <p>واکسنی برای این دام ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <VaccineEditModal\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport notification from \"../../helpers/notification\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\n// api\n// import putVaccineApi from \"API/vaccine/put\";\nimport ApiPost from \"API/post\";\n\nconst vaccineOptions = [\n  \"آنتروتوکسمی\",\n  \"تب برفکی\",\n  \"بروسلوز\",\n  \"آگالاکسی\",\n  \"شاربن\",\n  \"آبله\",\n  \"طاعون نشخوار کنندگان\",\n  \"قانقاریا\",\n];\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [selectedVaccine, setSelectedVaccine] = useState(\"\");\n\n  const [errors, setErrors] = useState({});\n\n  const checkForVaccineErrors = () => {\n    console.log(\"start checking for errors\");\n    return new Promise((resolve, reject) => {\n      const newErrors = {};\n      if (!selectedVaccine.length) {\n        newErrors.vaccine = \"انتخاب واکسن الزامی است\";\n      }\n\n      if (!Object.keys(newErrors).length) resolve();\n      else if (Object.keys(newErrors).length) reject(newErrors);\n    });\n  };\n\n  const handleSubmit = () => {\n    checkForVaccineErrors()\n      .then(() => {\n        setErrors({});\n\n        const data = {\n          entry: {\n            date,\n            createdAt: momentJalaali(),\n            vaccine: selectedVaccine,\n            key: props.animalKey,\n          },\n          token: localStorage.artimal,\n        };\n\n        ApiPost(\"api/v0/vaccine\", data)\n          .then((res) => {\n            console.log(res);\n            notification(res.result, \"success\");\n            // TODO:clear vaccine input\n            setSelectedVaccine([\"\"]);\n            props.forceUpdate();\n          })\n          .catch((err) => {\n            console.log(err);\n            notification(err.error, \"danger\");\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrors(err);\n      });\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>واکسن</Label>\n          <Typeahead\n            className=\"typeahead\"\n            id=\"vaccine-typeahead\"\n            labelKey=\"name\"\n            onChange={setSelectedVaccine}\n            options={vaccineOptions}\n            placeholder=\"واکسن را انتخاب کنید\"\n            selected={selectedVaccine}\n          />\n          {errors.vaccine ? (\n            <p className=\"error-text-form\">{errors.vaccine}</p>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ButtonGroup,\n  FormGroup,\n  Button,\n  Label,\n  Input,\n  CardTitle,\n  Alert,\n  Table,\n} from \"reactstrap\";\n\n// api\n// import putDeathApi from \"API/putDeath\";\n// import putAnimalSellApi from \"API/putAnimalSell\";\n// import putSlaughterApi from \"API/putSlaughter\";\n// import getActiveDisease from \"API/disease/getActives\";\n\nimport ApiPost from \"API/post\";\nimport ApiGet from \"API/get\";\n\n// default values\n// const illnessOptions = [\n//   \"سل گاوی\",\n//   \"آنتروتوکسمی\",\n//   \"شاربن\",\n//   \"بروسلوز\",\n//   \"آبله ی گوسفندی\",\n//   \"آگالاکسی\",\n//   \"هاری\",\n//   \"تب برفکی\",\n// ];\n\nconst formatter = new Intl.NumberFormat(\"sv-SE\", {\n  style: \"decimal\",\n  currency: \"SEK\",\n});\n\nexport default (props) => {\n  const [mode, setMode] = useState(0);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  // sell states\n  const [sellDate, setSellDate] = useState(momentJalaali());\n  const [sellPrice, setSellPrice] = useState(\"\");\n  const [sellComment, setSellComment] = useState(\"\");\n  const [sellPriceError, setSellPriceError] = useState(\"\");\n\n  // slaughter states\n  const [slaughterDate, setSlaughterDate] = useState(momentJalaali());\n  const [weight, setWeight] = useState(\"\");\n  const [weightError, setWeightError] = useState(\"\");\n\n  // deatch states\n  const [deathComment, setDeathComment] = useState(\"\");\n  const [deathCommentError, setDeathCommentError] = useState(\"\");\n  const [deathReasonError, setDeathReasonError] = useState(\"\");\n  const [deathDate, setDeathDate] = useState(momentJalaali());\n  const [deathReason, setDeathReason] = useState(\"\");\n\n  const [noDiseaseFound, setNoDiseaseFound] = useState(false);\n  const [diseaseArr, setDiseaseArr] = useState([]);\n  const [selectedDisease, setSelectedDisease] = useState({});\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleDeathSubmit = () => {\n    if (!deathReason) setDeathReasonError(\"دلیل مرگ را مشخص کنید\");\n    else if (deathReason === \"حادثه\" && !deathComment)\n      setDeathCommentError(\"توضیحات مرتبط با حادثه منجر به مرگ الزامی است\");\n    else {\n      const data = {\n        entry: {\n          comment: deathComment,\n          reason: deathReason,\n          createdAt: momentJalaali(),\n          date: deathDate,\n          key: props.animalKey,\n          disease: deathReason === \"بیماری\" ? selectedDisease : undefined,\n        },\n        token: localStorage.artimal,\n      };\n\n      ApiPost(\"api/v0/exit/death\", data)\n        .then((res) => {\n          if (deathReasonError) setDeathReasonError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  };\n\n  const handleSlaughterSubmit = () => {\n    if (!weight) {\n      setWeightError(\"ورود وزن الزامی است\");\n    } else {\n      const data = {\n        entry: {\n          weight: weight,\n          date: deathDate,\n          createdAt: momentJalaali(),\n          key: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      ApiPost(\"api/v0/exit/slaughter\", data)\n        .then((res) => {\n          if (sellPriceError) setSellPriceError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  };\n\n  const handleSellSubmit = () => {\n    if (!sellPrice) {\n      setSellPriceError(\"مبلغ فروش رو وارد کنید\");\n    } else {\n      const data = {\n        entry: {\n          date: sellDate,\n          price: sellPrice,\n          comment: sellComment,\n          key: props.animalKey,\n        },\n        token: localStorage.artimal,\n      };\n\n      // putAnimalSellApi(data)\n      ApiPost(\"api/v0/exit/sell\", data)\n        .then((res) => {\n          if (sellPriceError) setSellPriceError(\"\");\n          console.log(res);\n          notification(res.result, \"success\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  };\n\n  const handleSubmitDisease = (key) => {\n    const item = diseaseArr.filter((obj) => obj._key === key);\n    console.log(\"item is :::\", item);\n\n    setSelectedDisease(item[0]);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    setDeathComment(\"\");\n    setDeathCommentError(\"\");\n  }, [deathReason]);\n\n  useEffect(() => {\n    console.log(\")))))))))))))\", mode);\n    if (mode === 2 && deathReason === \"بیماری\") {\n      console.log(\"now its the time\");\n\n      ApiGet(`api/v0/disease/active/${props.animalKey}`)\n        .then((res) => {\n          // if (sellPriceError) setSellPriceError(\"\");\n          console.log(res);\n          if (!res.result.length && noDiseaseFound === false)\n            setNoDiseaseFound(true);\n          if (res.result.length && noDiseaseFound === true)\n            setNoDiseaseFound(false);\n\n          setDiseaseArr(res.result);\n          // notification(res.result, \"success\");\n          // props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(\"errrrrrrrrrrr\", err);\n          notification(err.error, \"danger\");\n        });\n    }\n  }, [mode, deathReason, props.animalKey, noDiseaseFound]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag=\"h6\">خروج</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <ButtonGroup>\n          <Button\n            color={mode === 0 ? \"primary\" : \"link\"}\n            type=\"button\"\n            onClick={() => setMode(0)}\n          >\n            فروش\n          </Button>\n          <Button\n            color={mode === 1 ? \"primary\" : \"link\"}\n            type=\"button\"\n            onClick={() => setMode(1)}\n          >\n            ذبح\n          </Button>\n          <Button\n            color={mode === 2 ? \"primary\" : \"link\"}\n            type=\"button\"\n            onClick={() => setMode(2)}\n          >\n            مرگ\n          </Button>\n        </ButtonGroup>\n        <hr />\n\n        {mode === 0 ? (\n          <>\n            <FormGroup>\n              <DatePicker\n                isGregorian={false}\n                timePicker={false}\n                value={sellDate}\n                onChange={(value) => setSellDate(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>مبلغ</Label>\n              <FormGroup>\n                <Input\n                  placeholder=\"به تومان\"\n                  value={formatter.format(sellPrice)}\n                  onChange={(e) => {\n                    setSellPrice(e.target.value.replace(/\\s/g, \"\"));\n                  }}\n                  type=\"number\"\n                />\n              </FormGroup>\n              {sellPriceError ? (\n                <p className=\"error-text-form\">{sellPriceError}</p>\n              ) : null}\n            </FormGroup>\n\n            <FormGroup>\n              <Label for=\"exampleText\">توضیحات</Label>\n              <Input\n                type=\"textarea\"\n                value={sellComment}\n                onChange={(e) => setSellComment(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button type=\"button\" color=\"primary\" onClick={handleSellSubmit}>\n                تایید\n              </Button>\n            </FormGroup>\n          </>\n        ) : null}\n\n        {mode === 1 ? (\n          <>\n            <FormGroup>\n              <FormGroup>\n                <DatePicker\n                  isGregorian={false}\n                  timePicker={false}\n                  value={slaughterDate}\n                  onChange={(value) => setSlaughterDate(value)}\n                />\n              </FormGroup>\n            </FormGroup>\n            <FormGroup>\n              <Label>وزن</Label>\n              <FormGroup>\n                <Input\n                  placeholder=\"کیلوگرم\"\n                  value={weight}\n                  onChange={(e) => {\n                    setWeight(e.target.value);\n                  }}\n                  type=\"number\"\n                />\n              </FormGroup>\n              {weightError ? (\n                <p className=\"error-text-form\">{weightError}</p>\n              ) : null}\n            </FormGroup>\n            <FormGroup>\n              <Button\n                type=\"button\"\n                color=\"primary\"\n                onClick={handleSlaughterSubmit}\n              >\n                تایید\n              </Button>\n            </FormGroup>\n          </>\n        ) : null}\n\n        {mode === 2 ? (\n          <>\n            <FormGroup>\n              <DatePicker\n                isGregorian={false}\n                timePicker={false}\n                value={deathDate}\n                onChange={(value) => setDeathDate(value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>دلیل مرگ</Label>\n              <FormGroup>\n                <Input\n                  className=\"select-input\"\n                  type=\"select\"\n                  onChange={(e) => {\n                    setDeathReason(e.target.value);\n                  }}\n                  // isValid={deathReason}\n                >\n                  {!deathReason ? <option>دلیل مرگ</option> : null}\n                  <option>بیماری</option>\n                  <option>حادثه</option>\n                </Input>\n              </FormGroup>\n              <p className=\"error-text-form\">{deathReasonError}</p>\n              {/* </FormGroup>\n            {deathReason === \"بیماری\" ? (\n              <FormGroup>\n                <Label>بیماری</Label>\n                <Typeahead\n                  className=\"typeahead\"\n                  id=\"vaccine-typeahead\"\n                  labelKey=\"name\"\n                  onChange={setIllness}\n                  options={illnessOptions}\n                  placeholder=\"واکسن را انتخاب کنید\"\n                  selected={illness}\n                />\n              </FormGroup>\n            ) : null}\n            <FormGroup> */}\n              {Object.keys(selectedDisease).length ? (\n                <Table>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>تاریخ</th>\n                      <th>بیماری</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        {momentJalaali(\n                          selectedDisease.date,\n                          \"YYYY-M-DTHH:mm:ss.SSSZ\"\n                        ).format(\"jYYYY-jM-jD\")}\n                      </td>\n                      <td>{selectedDisease.value}</td>\n                      <td>\n                        <Button\n                          type=\"button\"\n                          // onClick={() => handleSubmitDisease(obj.d._key)}\n                        >\n                          حذف\n                        </Button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              ) : null}\n              {noDiseaseFound ? (\n                <Alert color=\"danger\">\n                  سابقه ی بیماری فعالی برای این دام یافت نشد. لطفا بیناری را\n                  وارد منید و سپس نسبت به ثبت مرگ در اثر بیمار ی اقدام نمیایید\n                </Alert>\n              ) : null}\n              {diseaseArr.length && !Object.keys(selectedDisease).length ? (\n                <Table>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>تاریخ</th>\n                      <th>بیماری</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {diseaseArr.map((obj, i) => {\n                      const createdAtJdate = momentJalaali(\n                        obj.date,\n                        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n                      ).format(\"jYYYY-jM-jD\");\n                      return (\n                        <tr key={`disease${i}`}>\n                          <td>{createdAtJdate}</td>\n                          <td>{obj.value}</td>\n                          <td>\n                            <Button\n                              type=\"button\"\n                              onClick={() => handleSubmitDisease(obj._key)}\n                            >\n                              تایید\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              ) : null}\n\n              <Label for=\"exampleText\">توضیحات</Label>\n              <Input\n                type=\"textarea\"\n                value={deathComment}\n                onChange={(e) => setDeathComment(e.target.value)}\n                disabled={\n                  mode === 2 && deathReason === \"بیماری\" && noDiseaseFound\n                }\n              />\n              <p className=\"error-text-form\">{deathCommentError}</p>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                type=\"button\"\n                color=\"primary\"\n                onClick={handleDeathSubmit}\n                disabled={\n                  mode === 2 &&\n                  deathReason === \"بیماری\" &&\n                  !Object.keys(selectedDisease).length\n                }\n              >\n                تایید\n              </Button>\n            </FormGroup>\n          </>\n        ) : null}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Table,\n} from \"reactstrap\";\n\n// api\nimport readPregnancyDetailsApi from \"../../API/pregnancy/readDetails\";\nimport removePregnancyApi from \"../../API/pregnancy/remove\";\n\nexport default (props) => {\n  const [pregnancyDetails, setPregnancyDetails] = useState();\n  const [femaleKey, setFemaleKey] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleBody = () => {\n    if (pregnancyDetails) {\n      const female = pregnancyDetails.filter((e) => e.parent.sex === 1);\n      console.log(\"------------\", female);\n      if (femaleKey !== female[0].parent._key)\n        setFemaleKey(female[0].parent._key);\n\n      const male = pregnancyDetails.filter((e) => e.parent.sex === 0);\n      console.log(\"male\", male, \"female\", female);\n\n      const createdAtJdate = momentJalaali(\n        props.selectedItem.pregnancy.startedAt,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n\n      const finishedAt = () => {\n        if (props.selectedItem.pregnancy.finishedAt) {\n          momentJalaali(\n            props.selectedItem.pregnancy.finishedAt,\n            \"YYYY-M-DTHH:mm:ss.SSSZ\"\n          ).format(\"jYYYY-jM-jD\");\n        } else {\n          return \"در جریان\";\n        }\n      };\n\n      const FemaleCard = (\n        <Card className=\"demo-icons\">\n          <CardHeader>\n            <CardTitle tag=\"h6\">ماده</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>پلاک</th>\n                  <th>نوع</th>\n                  <th>نژاد</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\" \"}\n                <tr>\n                  <td>{female[0].parent._key}</td>\n                  <td>{female[0].parent.type}</td>\n                  <td>{female[0].parent.race}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      );\n\n      const MaleCard = (\n        <Card className=\"demo-icons\">\n          <CardHeader>\n            <CardTitle tag=\"h6\">نر</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>پلاک</th>\n                  <th>نوع</th>\n                  <th>نژاد</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\" \"}\n                <tr>\n                  <td>{male[0].parent._key}</td>\n                  <td>{male[0].parent.type}</td>\n                  <td>{male[0].parent.race}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      );\n\n      const DetailCard = (\n        <Card>\n          <CardHeader as=\"h5\">جدول وزن</CardHeader>\n          <CardBody>\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>شروع</th>\n                  <th>پایان</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{createdAtJdate}</td>\n                  <td>{finishedAt()}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      );\n\n      return (\n        <>\n          {DetailCard}\n          {FemaleCard}\n          {MaleCard}\n        </>\n      );\n    } else {\n      return null;\n    }\n\n    // return body;\n  };\n\n  const handleRemoveRecord = () => {\n    console.log(\"deleeeeeeeeeeeeeeeeeeeeeete\", femaleKey);\n    const data = {\n      entry: {\n        key: props.selectedItem.pregnancy._key,\n        femaleKey: femaleKey,\n      },\n      token: localStorage.artimal,\n    };\n\n    removePregnancyApi(data)\n      .then((res) => {\n        console.log(\"------------\", res);\n        notification(res.result, \"success\");\n        props.forceUpdate();\n        props.handleClose();\n      })\n      .catch((err) => {\n        console.log(err);\n        notification(err.error, \"danger\");\n      });\n  };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    console.log(props);\n    if (props.selectedItem && Object.keys(props.selectedItem)) {\n      console.log(\"sendig requeeeeeeeeeeeeeest\");\n      const data = {\n        entry: {\n          key: props.selectedItem.pregnancy._key,\n        },\n        token: localStorage.artiman,\n      };\n\n      readPregnancyDetailsApi(data)\n        .then((res) => {\n          console.log(\"------------\", res);\n          setPregnancyDetails(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [props]);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          {handleBody()}\n\n          <Button color=\"danger\" onClick={handleRemoveRecord}>\n            پاک کردن\n          </Button>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\">\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (data) => {\n  const uri = `http://${host}/api/v0/pregnancy/readDetails`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        if (res.ok) return resolve(json);\n        reject(json);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","const host =\n  process.env.REACT_APP_ENV === \"dev\" ? \"localhost:4000\" : \"194.5.175.201\";\n\nexport default (data) => {\n  const uri = `http://${host}/api/v0/pregnancy/remove`;\n\n  const h = new Headers();\n  h.append(\"Content-Type\", \"application/json\");\n  const req = new Request(uri, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    mode: \"cors\",\n    headers: h,\n  });\n\n  return new Promise((resolve, reject) => {\n    fetch(req)\n      .then(async (res) => {\n        const json = await res.json();\n        if (res.ok) return resolve(json);\n        reject(json);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport PegnancyEditModal from \"../Modals/pregnancy\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  // const [itemKey, setItemKey] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState();\n\n  const handleEditModalOpen = () => {\n    // console.log(\"handle modal close\");\n    setEditModalOpen(!editModalOpen);\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelectItem = (key) => {\n    const item = props.pregnancyRecords.filter((i) => i.pregnancy._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const renderBody = () => {\n    const createdAtJdate = momentJalaali(\n      props.exit.date,\n      \"YYYY-M-DTHH:mm:ss.SSSZ\"\n    ).format(\"jYYYY-jM-jD\");\n\n    return (\n      <tr>\n        <td>{createdAtJdate}</td>\n        {props.exit.type === \"sell\" ? <td>فروش</td> : null}\n        {props.exit.type === \"slaughter\" ? <td>ذبح</td> : null}\n        {props.exit.type === \"death\" ? <td>{props.exit.reason}</td> : null}\n\n        {/* <td>{w.male._key}</td> */}\n        {/* <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", w.pregnancy._key);\n                handleSelectItem(w.pregnancy._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td> */}\n      </tr>\n    );\n\n    // return null;\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">تاریخچه بارداری</CardHeader>\n        <CardBody>\n          {props.exit ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>نحوه ی خروج</th>\n                </tr>\n              </thead>\n              <tbody>{renderBody()}</tbody>\n            </Table>\n          ) : (\n            <p>رکوردی ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <PegnancyEditModal\n        handleClose={handleEditModalOpen}\n        isOpen={editModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  Col,\n  Row,\n} from \"reactstrap\";\n\n// api\n// import putPregnancyApi from \"API/pregnancy/put\";\nimport ApiPost from \"API/post\";\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  const [date, setDate] = useState(momentJalaali());\n  const [maleKey, setMaleKey] = useState(\"\");\n  const [maleKeyError, setMaleKeyError] = useState(\"\");\n  const [maleOptions, setMaleOptions] = useState([]);\n  //   const [error, setError] = useState(\"\");\n\n  const checkForErrors = () => {\n    console.log(\"start checking for errors\");\n    return new Promise((resolve, reject) => {\n      if (!maleKey) {\n        reject(\"ورود کد دام نر برای بارداری الزامی است\");\n      } else {\n        resolve();\n      }\n    });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleFatherKeySelect = (_key) => {\n    setMaleOptions([]);\n    setMaleKey(_key);\n    console.log(_key);\n  };\n\n  const handleFatherKeyChange = (value) => {\n    setMaleKey(value);\n\n    console.log(\n      \"=============\",\n      `api/v0/animal/stock/10/${value}/0/${props.selectedAnimal.type}/${props.selectedAnimal.race}`\n    );\n    ApiGet(\n      `api/v0/animal/stock/10/${value}/0/${props.selectedAnimal.type}/${props.selectedAnimal.race}`\n    )\n      .then((res) => {\n        if (!res.result.length) notification(\"نتیجه ای پیدا نشد\", \"warning\");\n        setMaleOptions(res.result);\n        if (value.length === 6 && res.results[0].key === value) {\n          setMaleOptions([]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   submit                                   */\n  /* -------------------------------------------------------------------------- */\n  const handleSubmit = () => {\n    checkForErrors()\n      .then(() => {\n        const data = {\n          entry: {\n            createdAt: momentJalaali(),\n            date,\n            maleKey,\n            femaleKey: props.selectedAnimal._key,\n          },\n          token: localStorage.artimal,\n        };\n\n        ApiPost(\"api/v0/pregnancy/new\", data)\n          .then((res) => {\n            console.log(res);\n            notification(res.result, \"success\");\n            props.forceUpdate();\n          })\n          .catch((err) => {\n            console.log(err);\n            notification(err.error, \"danger\");\n          });\n      })\n      .catch((err) => {\n        setMaleKeyError(err);\n      });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 conditions                                 */\n  /* -------------------------------------------------------------------------- */\n  if (!maleKey && maleOptions.length) {\n    setMaleOptions([]);\n  }\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>پلاک پدر</Label>\n          <Input\n            placeholder=\"پلاک پدر\"\n            value={maleKey}\n            onChange={(e) => {\n              handleFatherKeyChange(e.target.value);\n            }}\n            type=\"text\"\n          />\n          {maleOptions.length ? (\n            <ListGroup className=\"input-options\">\n              {maleOptions.map((o, i) => {\n                return (\n                  <ListGroupItem\n                    key={`listItem${i}`}\n                    action\n                    onClick={() => handleFatherKeySelect(o.key)}\n                    // variant={i % 2 === 0 ? \"info\" : \"primary\"}\n                    type=\"button\"\n                  >\n                    <Row>\n                      <Col>{o.key}</Col>\n                      <Col>{o.type}</Col>\n                      <Col>{o.race}</Col>\n                    </Row>\n                  </ListGroupItem>\n                );\n              })}\n            </ListGroup>\n          ) : null}\n          {maleKeyError ? (\n            <p className=\"error-text-form\">{maleKeyError}</p>\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          {/* {error ? <p className=\"error-text-form\">{error}</p> : null} */}\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport PegnancyEditModal from \"../Modals/pregnancy\";\n\nexport default (props) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  // const [itemKey, setItemKey] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState();\n\n  const handleEditModalOpen = () => {\n    // console.log(\"handle modal close\");\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleSelectItem = (key) => {\n    const item = props.pregnancyRecords.filter((i) => i.pregnancy._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const renderBody = () => {\n    console.log(\"----\", props.pregnancyRecords);\n\n    const result = props.pregnancyRecords.map((w, i) => {\n      console.log(i);\n      const createdAtJdate = momentJalaali(\n        w.pregnancy.startedAt,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n\n      const finishedAt = () => {\n        if (w.pregnancy.finishedAt) {\n          momentJalaali(\n            w.pregnancy.finishedAt,\n            \"YYYY-M-DTHH:mm:ss.SSSZ\"\n          ).format(\"jYYYY-jM-jD\");\n        } else {\n          return \"در جریان\";\n        }\n      };\n      return (\n        <tr key={`item${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{finishedAt()}</td>\n          <td>{w.male._key}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                console.log(\"clickeeeeeeeeeeeeeeeeeeeeeeeed\", w.pregnancy._key);\n                handleSelectItem(w.pregnancy._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    console.log(result);\n\n    return result;\n\n    // return null;\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">تاریخچه بارداری</CardHeader>\n        <CardBody>\n          {props.pregnancyRecords.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>شروع</th>\n                  <th>پایان</th>\n                  <th>نر</th>\n                </tr>\n              </thead>\n              <tbody>{renderBody()}</tbody>\n            </Table>\n          ) : (\n            <p>رکوردی ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <PegnancyEditModal\n        handleClose={handleEditModalOpen}\n        isOpen={editModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notifications from \"helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\n// api\n// import createDiseaseApi from \"API/disease/create\";\nimport ApiPost from \"API/post\";\n\n// default values\nconst diseaseOptions = [\n  \"سل گاوی\",\n  \"آنتروتوکسمی\",\n  \"شاربن\",\n  \"بروسلوز\",\n  \"آبله ی گوسفندی\",\n  \"آگالاکسی\",\n  \"هاری\",\n  \"تب برفکی\",\n];\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  const [date, setDate] = useState(momentJalaali());\n  const [disease, setDisease] = useState([]);\n  const [diseaseError, setDiseaseError] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  //   const [commentError, setCommentError] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlres                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSubmit = () => {\n    if (disease.length) {\n      const data = {\n        entry: {\n          date,\n          createdAt: momentJalaali(),\n          value: disease,\n          key: props.animalKey,\n          comment,\n        },\n        token: localStorage.artimal,\n      };\n\n      console.log(data);\n      // createDiseaseApi(data)\n      ApiPost(\"api/v0/disease\", data)\n        .then((res) => {\n          console.log(res);\n          notifications(res.result, \"success\");\n          setDisease([]);\n          setComment(\"\");\n          props.forceUpdate();\n        })\n        .catch((err) => {\n          console.log(err);\n          notifications(err.error, \"danger\");\n        });\n    } else {\n      setDiseaseError(\"ورود بیماری الزامی است\");\n    }\n  };\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">اضافه کردن رکورد جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>تاریخ</Label>\n          <FormGroup>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n          </FormGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label>بیماری</Label>\n          <Typeahead\n            className=\"typeahead\"\n            id=\"vaccine-typeahead\"\n            labelKey=\"name\"\n            onChange={setDisease}\n            options={diseaseOptions}\n            placeholder=\"بیماری را انتخاب کنید\"\n            selected={disease}\n          />\n          <p className=\"error-text-form\">{diseaseError}</p>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleText\">توضیحات</Label>\n          <Input\n            type=\"textarea\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          {/* <p className=\"error-text-form\">{deathCommentError}</p> */}\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            تایید\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n// import removeDiseaseApi from \"../../API/disease/remove\";\n// import updateDiseaseApi from \"../../API/disease/update\";\nimport ApiPut from \"API/put\";\nimport ApiDelete from \"API/delete\";\n\n// default values\nconst diseaseOptions = [\n  \"سل گاوی\",\n  \"آنتروتوکسمی\",\n  \"شاربن\",\n  \"بروسلوز\",\n  \"آبله ی گوسفندی\",\n  \"آگالاکسی\",\n  \"هاری\",\n  \"تب برفکی\",\n];\n\nconst drugOptions = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst effectOptions = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\nexport default (props) => {\n  console.log(\"+++++++++++++++++++++++++++++\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState();\n  const [disease, setDisease] = useState(\"\");\n  const [diseaseError, setDiseaseError] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  // new step\n  const [newStep, setNewStep] = useState(false);\n  const [drugs, setDrugs] = useState([]);\n  const [effects, setEffects] = useState([]);\n  const [treatment, setTreatment] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = (confirmToDeleteOut) => {\n    // const data = {\n    //   entry: {\n    //     key: props.selectedItem._key,\n    //   },\n    //   confirmToDeleteOut,\n    //   token: localStorage.artimal,\n    // };\n    // console.log(\"remove button clicked :: key is \", data);\n\n    ApiDelete(\n      `api/v0/disease/${localStorage.artimal}/${props.selectedItem._key}/${props.animalKey}/${confirmToDeleteOut}`\n    )\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(\"errrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\");\n        console.log(err.status);\n        if (err.status && err.status === 403) {\n          alert(err.error);\n          const res = window.confirm(err.error);\n\n          // console.log(res);\n          if (res === true) {\n            handleRemoveRecord(true);\n          }\n        } else {\n          notification(err.error, \"danger\");\n        }\n      });\n\n    // removeDiseaseApi(data)\n  };\n\n  const handleSubmit = () => {\n    const data = {\n      entry: {\n        value: disease,\n        date,\n        key: props.selectedItem._key,\n        comment,\n      },\n      token: localStorage.artimal,\n    };\n\n    console.log(data);\n\n    ApiPut(\"api/v0/disease\", data)\n      .then((res) => {\n        props.forceUpdate();\n        props.handleClose();\n        notification(res.result, \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const handleNewStep = () => {\n  //   setNewStep(true);\n  // };\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      setDate(momentJalaali(props.selectedItem.date));\n      setDisease([props.selectedItem.value]);\n      setComment(props.selectedItem.comment);\n    }\n  }, [props]);\n\n  // useEffect(() => {\n  //   if (props.isOpen === false) setNewStep(false);\n  // }, [props.isOpen]);\n\n  // console.log(\".....................XXXXXX\", props);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n            <Label>بیماری</Label>\n            <Typeahead\n              className=\"typeahead\"\n              id=\"vaccine-typeahead\"\n              labelKey=\"name\"\n              onChange={setDisease}\n              options={diseaseOptions}\n              placeholder=\"واکسن را انتخاب کنید\"\n              selected={disease}\n            />\n            <p className=\"error-text-form\">{diseaseError}</p>\n            <Label for=\"exampleText\">توضیحات</Label>\n            <Input\n              type=\"textarea\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            {/* <p className=\"error-text-form\">{deathCommentError}</p> */}\n\n            <Button color=\"danger\" onClick={() => handleRemoveRecord(false)}>\n              پاک کردن\n            </Button>\n          </>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\nimport DatePicker from \"react-datepicker2\";\nimport notification from \"../../helpers/notification\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// api\n// import createDiseaseRelatedApi from \"../../API/disease/createRelated\";\n// import updateVaccineApi from \"../../API/vaccine/update\";\nimport ApiPost from \"API/post\";\n\n// default values\nconst drugOptions = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst effectOptions = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [date, setDate] = useState(momentJalaali());\n  const [comment, setComment] = useState(\"\");\n\n  // new step\n  const [drugs, setDrugs] = useState([]);\n  const [effects, setEffects] = useState([]);\n  const [treatment, setTreatment] = useState(\"\");\n  const [isCured, setIsCured] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleRemoveRecord = () => {\n    // const data = {\n    //   entry: {\n    //     key: props.selectedItem.vaccine._key,\n    //   },\n    //   token: localStorage.artimal,\n    // };\n    // console.log(\"remove buttomn clicked :: key is \", data);\n    // removeVaccineApi(data)\n    //   .then((res) => {\n    //     props.forceUpdate();\n    //     props.handleClose();\n    //     notification(res.result, \"success\");\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  };\n\n  const handleSubmit = () => {\n    if (\n      !comment &&\n      !drugs.length &&\n      !treatment &&\n      !effects.length &&\n      !isCured\n    ) {\n      notification(\"همه ی فیلدها خالی است\", \"danger\");\n    } else {\n      const data = {\n        entry: {\n          drugs,\n          effects,\n          key: props.selectedItem._key,\n          animalKey: props.animalKey,\n          date,\n          treatment,\n          comment,\n          isCured,\n        },\n        token: localStorage.artimal,\n      };\n      console.log(data);\n      ApiPost(\"api/v0/disease/step\", data)\n        .then((res) => {\n          props.forceUpdate();\n          props.handleClose();\n          notification(res.result, \"success\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          ویرایش\n        </ModalHeader>\n        <ModalBody>\n          <>\n            <DatePicker\n              isGregorian={false}\n              timePicker={false}\n              value={date}\n              onChange={(value) => setDate(value)}\n            />\n            <Label for=\"exampleText\">توضیحات</Label>\n            <Input\n              type=\"textarea\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            {/* <p className=\"error-text-form\">{deathCommentError}</p> */}\n            <Label>داروها</Label>\n            <Typeahead\n              clearButton\n              // defaultSelected={drugOptions.slice(0, 5)}\n              id=\"selections-example\"\n              labelKey=\"name\"\n              multiple\n              options={drugOptions}\n              onChange={setDrugs}\n              value={drugs}\n              placeholder=\"Choose a state...\"\n            />\n            <Label>اقدامات درمانی</Label>\n            <Input\n              type=\"textarea\"\n              value={treatment}\n              onChange={(e) => setTreatment(e.target.value)}\n            />\n            <Label>عوارض بیماری</Label>\n            <Typeahead\n              clearButton\n              // defaultSelected={drugOptions.slice(0, 5)}\n              id=\"selections-example\"\n              labelKey=\"name\"\n              multiple\n              options={effectOptions}\n              onChange={setEffects}\n              value={effects}\n              placeholder=\"Choose a state...\"\n            />\n            <div>\n              <Label\n                check\n                style={{\n                  position: \"unset\",\n                  verticalAlign: \"middle\",\n                }}\n              >\n                <Input\n                  check\n                  style={{ marginRight: \"10\" }}\n                  type=\"checkbox\"\n                  checked={isCured}\n                  onChange={() => setIsCured(!isCured)}\n                />\n                <span style={{ marginRight: 22 }}>درمان</span>\n              </Label>\n            </div>\n          </>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n// import DatePicker from \"react-datepicker2\";\n// import notification from \"../../helpers/notification\";\n// import { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { Timeline, TimelineEvent } from \"react-event-timeline\";\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Badge,\n  Alert,\n} from \"reactstrap\";\n\n// api\n// import getDetailsApi from \"API/disease/getDetails\";\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [details, setDetails] = useState([]);\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effect                                   */\n  /* -------------------------------------------------------------------------- */\n  useEffect(() => {\n    if (props.selectedItem) {\n      // console.log(\"ooooooooooooooooooooooooo\", props.selectedItem._key);\n      // getDetailsApi(props.selectedItem._key)\n      ApiGet(`api/v0/disease/step/${props.selectedItem._key}`)\n        .then((res) => {\n          console.log(\"<<<<<<<<<<<<<\", res);\n          // props.forceUpdate();\n          // props.handleClose();\n          // notification(res.result, \"success\");\n          setDetails(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [props.selectedItem]);\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.handleClose}\n        // className={className}\n      >\n        <ModalHeader\n        // toggle={toggle}\n        >\n          {props.selectedItem ? props.selectedItem.value : null}\n        </ModalHeader>\n        <ModalBody>\n          <Timeline className=\"timeline\">\n            {details.map((step) => {\n              return (\n                <TimelineEvent\n                  className=\"timeline-event\"\n                  // title={props.selectedItem.value}\n                  createdAt={momentJalaali(\n                    step.date,\n                    \"YYYY-M-DTHH:mm:ss.SSSZ\"\n                  ).format(\"jYYYY-jM-jD\")}\n                >\n                  {step.drugs && step.drugs.length ? (\n                    <>\n                      <h6>داروها</h6>\n                      {step.drugs.map((drug) => (\n                        <p>{drug}</p>\n                      ))}\n                    </>\n                  ) : null}\n                  {step.effects && step.effects.length ? (\n                    <>\n                      <h6>عوارض</h6>\n                      {step.effects.map((effect) => (\n                        <p>{effect}</p>\n                      ))}\n                    </>\n                  ) : null}\n                  {step.comment && step.comment ? (\n                    <>\n                      <h6>کامنت</h6>\n                      <p>{step.comment}</p>\n                    </>\n                  ) : null}\n                  {step.treatment ? (\n                    <>\n                      <h6>اقدامات درمانی</h6>\n                      <p>{step.treatment}</p>\n                    </>\n                  ) : null}\n                  {step.isCured ? (\n                    <h4>\n                      <Badge color=\"success\" style={{ padding: 10 }}>\n                        درمان\n                      </Badge>\n                    </h4>\n                  ) : null}\n                  {step.died ? (\n                    <h4>\n                      <Badge color=\"danger\" style={{ padding: 10 }}>\n                        مرگ\n                      </Badge>\n                    </h4>\n                  ) : null}\n                </TimelineEvent>\n              );\n            })}\n          </Timeline>\n          {!details.length ? (\n            <Alert color=\"danger\">تایخچه ای برای این بیماری ثبت نشده است</Alert>\n          ) : null}\n        </ModalBody>\n        <ModalFooter>\n          {/* <Button color=\"primary\" type=\"button\" onClick={handleSubmit}>\n            تایید\n          </Button>\n          <Button color=\"secondary\" onClick={props.handleClose}>\n            انصراف\n          </Button> */}\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Table, Button } from \"reactstrap\";\n\n// component\nimport EditModal from \"../../Modals/disease\";\nimport NewStatus from \"../../Modals/newStatusDisease\";\nimport DetailsModal from \"../../Modals/diseaseDetails\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [selectedItem, setSelectedItem] = useState();\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [newStatusModalOpen, setNewStatusModalOpen] = useState(false);\n  const [detailsModalOpen, setDetailsModalOpen] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n\n  const handleSelectItem = (key) => {\n    // console.log(\"XXXXXXXXXXXXXXXXXXX\", props.diseaseArr[0].d);\n    const item = props.diseaseArr.filter((i) => i._key === key);\n    console.log(\"|||||||||||\", item);\n    setSelectedItem(item[0]);\n  };\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(!editModalOpen);\n  };\n\n  const handleNewStatusModalOpen = () => {\n    setNewStatusModalOpen(!newStatusModalOpen);\n  };\n\n  const handleDetailsModalOpen = () => {\n    setDetailsModalOpen(!detailsModalOpen);\n  };\n\n  const handleBody = () => {\n    const result = props.diseaseArr.map((disease, i) => {\n      const createdAtJdate = momentJalaali(\n        disease.date,\n        \"YYYY-M-DTHH:mm:ss.SSSZ\"\n      ).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={`weightItem${i}`}>\n          <td>{createdAtJdate}</td>\n          <td>{disease.value}</td>\n          <td>{disease.active ? \"فعال\" : \"غیرفعال\"}</td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(disease._key);\n                handleEditModalOpen();\n              }}\n            >\n              ویرایش\n            </Button>\n          </td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(disease._key);\n                handleNewStatusModalOpen();\n              }}\n              disabled={!disease.active}\n            >\n              وضعیت جدید\n            </Button>\n          </td>\n          <td>\n            <Button\n              type=\"button\"\n              color=\"link\"\n              onClick={() => {\n                handleSelectItem(disease._key);\n                handleDetailsModalOpen();\n              }}\n            >\n              جزئیات\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n\n    return result;\n  };\n\n  console.log(\"..............pppppp.\", props);\n  return (\n    <>\n      <Card>\n        <CardHeader as=\"h5\">بیماری ها</CardHeader>\n        <CardBody>\n          {props.diseaseArr.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>بیماری</th>\n                  <th>وضعیت</th>\n                </tr>\n              </thead>\n              <tbody>{handleBody()}</tbody>\n            </Table>\n          ) : (\n            <p>بیماری ای برای این دام ثبت نشده است</p>\n          )}\n        </CardBody>\n      </Card>\n      <EditModal\n        isOpen={editModalOpen}\n        handleClose={handleEditModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n        animalKey={props.animalKey}\n      />\n      <NewStatus\n        isOpen={newStatusModalOpen}\n        handleClose={handleNewStatusModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n        animalKey={props.animalKey}\n      />\n      <DetailsModal\n        isOpen={detailsModalOpen}\n        handleClose={handleDetailsModalOpen}\n        forceUpdate={props.forceUpdate}\n        selectedItem={selectedItem}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport notification from \"helpers/notification\";\n// reactstrap components\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Spinner,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\n// api\nimport ApiPost from \"API/post\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [role, setRole] = useState();\n  const [roleError, setRoleError] = useState(\"\");\n\n  const [username, setUsername] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const [onHold, setOnHold] = useState(false);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  functions                                 */\n  /* -------------------------------------------------------------------------- */\n  const validate = () => {\n    return new Promise((resolve, reject) => {\n      const errors = [];\n      if (!role) {\n        errors.push({\n          role: \"ورود نقش کاربر برای ثبت کابر جدید الزامی است\",\n        });\n      }\n\n      if (!username) {\n        errors.push({\n          username: \"ورود نام کاربری برای ثبت کاربر جدید الزامی است\",\n        });\n      } else if (username.length < 4) {\n        errors.push({\n          username: \"نام کاربری باید حداقل ۵ کاراکتر داشته باشد\",\n        });\n      }\n\n      if (!password) {\n        errors.push({\n          password: \"ورود پسورد برای ثبت کاربر جدید الزامی است\",\n        });\n      } else if (password.length < 4) {\n        errors.push({\n          password: \"پسورد باید حداقل ۵ کاراکتر داشته باشد\",\n        });\n      }\n\n      if (errors.length) reject(errors);\n      resolve();\n    });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   effects                                  */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleSubmit = () => {\n    setOnHold(true);\n    setRoleError(\"\");\n    setUsernameError(\"\");\n    setPasswordError(\"\");\n    validate()\n      .then(() => {\n        const data = {\n          entry: {\n            role,\n            username,\n            password,\n          },\n          token: localStorage.artimal,\n        };\n\n        ApiPost(\"api/v0/user\", data)\n          .then((res) => {\n            console.log(res);\n            notification(res.result, \"success\");\n          })\n          .catch((err) => {\n            console.log(err);\n            if (err.error && err.error.username) {\n              setUsernameError(err.error.username);\n            } else if (err.error) {\n              notification(err.error, \"danger\");\n            } else {\n              notification(\"سرور در دسترس نمیباشد\", \"danger\");\n            }\n          })\n          .finally(() => {\n            setOnHold(false);\n          });\n      })\n      .catch((errors) => {\n        errors.forEach((err) => {\n          const key = Object.keys(err)[0];\n          if (key === \"role\") setRoleError(err.role);\n          if (key === \"username\") setUsernameError(err.username);\n          if (key === \"password\") setPasswordError(err.password);\n        });\n      });\n  };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <Card className=\"demo-icons\">\n      <CardHeader>\n        <CardTitle tag=\"h6\">ایجاد کاربر جدید</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <FormGroup>\n          <Label>نقش</Label>\n          <div style={{ display: \"flex\" }}>\n            <FormGroup check>\n              <Label check>\n                <span>ادمین</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setRole(1)}\n                  checked={role === 1}\n                />\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <span>کابر</span>\n                <Input\n                  type=\"radio\"\n                  onChange={() => setRole(2)}\n                  checked={role === 2}\n                />\n              </Label>\n            </FormGroup>\n          </div>\n          <p className=\"error-text-form\">{roleError}</p>\n        </FormGroup>\n        <FormGroup>\n          <Label>نام کاربری</Label>\n          <Input\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            type=\"text\"\n          />\n          <p className=\"error-text-form\">{usernameError}</p>\n        </FormGroup>\n\n        <FormGroup>\n          <Label>پسورد</Label>\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <p className=\"error-text-form\">{passwordError}</p>\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"button\" color=\"primary\" onClick={handleSubmit}>\n            {onHold ? <Spinner size=\"sm\" color=\"light\" /> : \"تایید\"}\n          </Button>\n        </FormGroup>\n      </CardBody>\n    </Card>\n  );\n};\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\nclass Typography extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Paper Table Heading</h5>\n                  <p className=\"category\">\n                    Created using Montserrat Font Family\n                  </p>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"typography-line\">\n                    <h1>\n                      <span>Header 1</span>\n                      The Life of Paper Dashboard\n                    </h1>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h2>\n                      <span>Header 2</span>\n                      The Life of Paper Dashboard\n                    </h2>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h3>\n                      <span>Header 3</span>\n                      The Life of Paper Dashboard\n                    </h3>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h4>\n                      <span>Header 4</span>\n                      The Life of Paper Dashboard\n                    </h4>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h5>\n                      <span>Header 5</span>\n                      The Life of Paper Dashboard\n                    </h5>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h6>\n                      <span>Header 6</span>\n                      The Life of Paper Dashboard\n                    </h6>\n                  </div>\n                  <div className=\"typography-line\">\n                    <p>\n                      <span>Paragraph</span>I will be the leader of a company\n                      that ends up being worth billions of dollars, because I\n                      got the answers. I understand culture. I am the nucleus. I\n                      think that’s a responsibility that I have, to push\n                      possibilities, to show people, this is the level that\n                      things could be at.\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Quote</span>\n                    <blockquote>\n                      <p className=\"blockquote blockquote-primary\">\n                        \"I will be the leader of a company that ends up being\n                        worth billions of dollars, because I got the answers. I\n                        understand culture. I am the nucleus. I think that’s a\n                        responsibility that I have, to push possibilities, to\n                        show people, this is the level that things could be at.\"{\" \"}\n                        <br />\n                        <br />\n                        <small>- Noaa</small>\n                      </p>\n                    </blockquote>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Muted Text</span>\n                    <p className=\"text-muted\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Primary Text</span>\n                    <p className=\"text-primary\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Info Text</span>\n                    <p className=\"text-info\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Success Text</span>\n                    <p className=\"text-success\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Warning Text</span>\n                    <p className=\"text-warning\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Danger Text</span>\n                    <p className=\"text-danger\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h2>\n                      <span>Small Tag</span>\n                      Header with small subtitle <br />\n                      <small>Use \"small\" tag for the headers</small>\n                    </h2>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Typography;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Simple Table</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-right\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-right\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-right\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-right\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-right\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-right\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-right\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-right\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"12\">\n              <Card className=\"card-plain\">\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Table on Plain Background</CardTitle>\n                  <p className=\"card-category\">\n                    Here is a subtitle for this table\n                  </p>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-right\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-right\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-right\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-right\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-right\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-right\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-right\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-right\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.jsx\";\nimport Notifications from \"views/Notifications.jsx\";\nimport Search from \"views/Search.jsx\";\nimport Typography from \"views/Typography.jsx\";\nimport TableList from \"views/Tables.jsx\";\nimport Logs from \"views/Logs.jsx\";\nimport User from \"views/User.jsx\";\nimport UpgradeToPro from \"views/Upgrade.jsx\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"داشبورد\",\n    icon: \"nc-icon nc-paper\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/addRecord\",\n    name: \"رکورد جدید\",\n    icon: \"nc-icon nc-simple-add\",\n    component: Search,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/logs\",\n    name: \"لاگ ها\",\n    icon: \"nc-icon nc-paper\",\n    component: Logs,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user\",\n    name: \"کاربران\",\n    icon: \"nc-icon nc-single-02\",\n    component: User,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/user-page\",\n  //   name: \"User Profile\",\n  //   icon: \"nc-icon nc-single-02\",\n  //   component: UserPage,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Table List\",\n  //   icon: \"nc-icon nc-tile-56\",\n  //   component: TableList,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   path: \"/typography\",\n  //   name: \"Typography\",\n  //   icon: \"nc-icon nc-caps-small\",\n  //   component: Typography,\n  //   layout: \"/admin\",\n  // },\n  // {\n  //   pro: true,\n  //   path: \"/upgrade\",\n  //   name: \"Upgrade to PRO\",\n  //   icon: \"nc-icon nc-spaceship\",\n  //   component: UpgradeToPro,\n  //   layout: \"/admin\",\n  // },\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Upgrade extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col className=\"ml-auto mr-auto\" md=\"8\">\n              <Card className=\"card-upgrade\">\n                <CardHeader className=\"text-center\">\n                  <CardTitle tag=\"h4\">Paper Dashboard PRO</CardTitle>\n                  <p className=\"card-category\">\n                    Are you looking for more components? Please check our\n                    Premium Version of Paper Dashboard PRO.\n                  </p>\n                </CardHeader>\n                <CardBody>\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th />\n                        <th className=\"text-center\">Free</th>\n                        <th className=\"text-center\">PRO</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Components</td>\n                        <td className=\"text-center\">16</td>\n                        <td className=\"text-center\">160</td>\n                      </tr>\n                      <tr>\n                        <td>Plugins</td>\n                        <td className=\"text-center\">4</td>\n                        <td className=\"text-center\">13</td>\n                      </tr>\n                      <tr>\n                        <td>Example Pages</td>\n                        <td className=\"text-center\">7</td>\n                        <td className=\"text-center\">27</td>\n                      </tr>\n                      <tr>\n                        <td>Login, Register, Pricing, Lock Pages</td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-simple-remove text-danger\" />\n                        </td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-check-2 text-success\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          DataTables, VectorMap, SweetAlert, Wizard,\n                          jQueryValidation, FullCalendar etc...\n                        </td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-simple-remove text-danger\" />\n                        </td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-check-2 text-success\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Mini Sidebar</td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-simple-remove text-danger\" />\n                        </td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-check-2 text-success\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Premium Support</td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-simple-remove text-danger\" />\n                        </td>\n                        <td className=\"text-center\">\n                          <i className=\"nc-icon nc-check-2 text-success\" />\n                        </td>\n                      </tr>\n                      <tr>\n                        <td />\n                        <td className=\"text-center\">Free</td>\n                        <td className=\"text-center\">Just $49</td>\n                      </tr>\n                      <tr>\n                        <td className=\"text-center\" />\n                        <td className=\"text-center\">\n                          <Button\n                            className=\"btn-round disabled\"\n                            color=\"default\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            Current Version\n                          </Button>\n                        </td>\n                        <td className=\"text-center\">\n                          <Button\n                            className=\"btn-round\"\n                            color=\"primary\"\n                            href=\"https://www.creative-tim.com/product/paper-dashboard-2-pro?ref=pd-free-upgrade-live\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                          >\n                            Upgrade to PRO\n                          </Button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Upgrade;\n","import React, { useState, useEffect } from \"react\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// moment-jalaali\nimport momentJalaali from \"moment-jalaali\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col,\n  Spinner,\n} from \"reactstrap\";\n// core components\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart,\n} from \"variables/charts.jsx\";\n\n// api\nimport ApiGet from \"API/get\";\n\nexport default (props) => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [totalAnimal, setTotalAnimal] = useState(\"\");\n  const [thisMonthExpense, setThisMonthExpense] = useState(\"\");\n\n  useEffect(() => {\n    ApiGet(\"api/v0/animal/total\")\n      .then((res) => {\n        setTotalAnimal(res.result);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    const currnetYM = momentJalaali().format(\"jYYYY/jM\");\n    console.log(\"......^^^^^^^^^.........\");\n    const firstDayOfMonth = currnetYM + \"/1 00:00\";\n\n    // TODO: create from dynamic\n    // const from = `${momentJalaali(\"1399/2/1 00:00\", \"jYYYY/jM/jD HH:mm\").format(\n    //   \"YYYY-M-DTHH:mm:ss.SSS\"\n    // )}Z`;\n\n    const from = `${momentJalaali(firstDayOfMonth, \"jYYYY/jM/jD HH:mm\").format(\n      \"YYYY-M-DTHH:mm:ss.SSS\"\n    )}Z`;\n\n    const to = `${momentJalaali().format(\"YYYY-M-DTHH:mm:ss.SSS\")}Z`;\n    ApiGet(`api/v0/expenses/${from}/${to}`)\n      .then((res) => {\n        console.log(\"--------\", res);\n        setThisMonthExpense(res.result);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">تعداد کل دام ها</p>\n                      <CardTitle tag=\"p\">\n                        {totalAnimal ? (\n                          totalAnimal\n                        ) : (\n                          <Spinner type=\"grow\" color=\"secondary\" />\n                        )}\n                      </CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fas fa-sync-alt\" /> Update Now\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">هزینه ها</p>\n                      <CardTitle tag=\"p\">\n                        {\" \"}\n                        {thisMonthExpense ? (\n                          thisMonthExpense\n                        ) : (\n                          <Spinner type=\"grow\" color=\"secondary\" />\n                        )}\n                      </CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"far fa-calendar\" /> ماه جاری\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          {/* <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"far fa-clock\" /> In the last hour\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col lg=\"3\" md=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col md=\"4\" xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col md=\"8\" xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                      <p />\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fas fa-sync-alt\" /> موجوودی کنونی\n                </div>\n              </CardFooter>\n            </Card>\n          </Col> */}\n        </Row>\n        {/* <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h5\">Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fa fa-history\" /> Updated 3 minutes ago\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        */}\n        {/* <Row>\n          <Col md=\"4\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h5\">Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <div className=\"stats\">\n                  <i className=\"fa fa-calendar\" /> Number of emails sent\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col md=\"8\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle tag=\"h5\">NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart with Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <div className=\"card-stats\">\n                  <i className=\"fa fa-check\" /> Data information certified\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      */}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\n// reactstrap components\nimport { Row, Col } from \"reactstrap\";\n\n// components\nimport Search from \"components/Search/search\";\nimport Details from \"components/Search/details\";\nimport WeightRecord from \"components/Search/weightRecord\";\nimport WeightTable from \"components/Search/weightTable\";\nimport NewWeight from \"components/Search/newWeight\";\nimport VaccineTable from \"components/Search/vaccineTable\";\nimport NewVaccine from \"components/Search/newVaccine\";\nimport Out from \"components/Search/out\";\nimport OutHistory from \"components/Search/outHistory\";\nimport Milk from \"components/Search/milk\";\nimport NewPregnancy from \"components/Search/newPregnancy\";\nimport HistoryPregnany from \"components/Search/historyPregnancy\";\nimport NewDisease from \"components/Search/disease/new\";\nimport HistoryDisease from \"components/Search/disease/history\";\n\n//api\n// import readVaccineApi from \"API/vaccine/read\";\n// import readDiseaseApi from \"API/disease/read\";\n// import getOutApi from \"API/out/get\";\nimport ApiGet from \"API/get\";\n\nexport default () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [key, setKey] = useState(\"\");\n  const [tool, setTool] = useState(\"\");\n  const [weight, setWeight] = useState([]);\n  const [vaccine, setVaccine] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [selectedAnimal, setSelectedAnimal] = useState({});\n  const [disease, setDisease] = useState([]);\n  const [exit, setExit] = useState();\n  // pregnancy\n  const [pregnancyRecords, setPregnancyRecords] = useState([]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleUpdateKey = (_key) => {\n    console.log(_key);\n    setKey(_key);\n  };\n\n  const handleUpdateTool = (_tool) => {\n    console.log(\"new tool is :\", _tool);\n    setTool(_tool);\n  };\n\n  const handleUpdate = () => {\n    setUpdate(true);\n  };\n\n  // const handleUpdatePregnancy = (_key) => {\n  //   console.log(\"-----------------\", \"key is ::\", key);\n  //   pregnancyRecords.filter((p) => p.pregnancy._key !== _key);\n  // };\n\n  /* -------------------------------------------------------------------------- */\n  /*                                 conditions                                 */\n  /* -------------------------------------------------------------------------- */\n\n  useEffect(() => {\n    console.log(\"forceUpdate worked\", tool);\n    if (update === true) setUpdate(false);\n\n    const getWeightRecords = () => {\n      ApiGet(`api/v0/weight/${key}`)\n        .then((res) => {\n          setWeight(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      // readWeightApi({ animalKeys: [key] })\n    };\n\n    const getVaccineRecords = () => {\n      ApiGet(`api/v0/animal/vaccine/${key}`)\n        .then((res) => {\n          console.log(\"------------\", res);\n          setVaccine(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    const getPregnancyRecords = () => {\n      ApiGet(`api/v0/animal/pregnancy/${key}`)\n        .then((res) => {\n          console.log(\"#################\", res);\n          if (res.result) setPregnancyRecords(res.result);\n          else setPregnancyRecords([]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    const getDiseaseHistory = () => {\n      console.log(\"get disease history \");\n      ApiGet(`api/v0/disease/${key}`)\n        .then((res) => {\n          setDisease(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n\n    if (tool === \"weight\") {\n      getWeightRecords();\n    }\n    if (tool === \"vaccine\") {\n      getVaccineRecords();\n    }\n    if (tool === \"pregnancy\") {\n      getPregnancyRecords();\n    }\n    if (tool === \"disease\") {\n      getDiseaseHistory();\n    }\n    if (tool === \"exit\" && selectedAnimal.exit) {\n      // getOutApi(selectedAnimal._key)\n      ApiGet(`api/v0/exit/${selectedAnimal._key}`)\n        .then((res) => {\n          console.log(\"exit history is :::: \", res);\n          setExit(res.result);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [key, selectedAnimal, tool, update]);\n\n  useEffect(() => {\n    ApiGet(`api/v0/animal/detail/${key}`)\n      .then((res) => {\n        console.log(\"...............\", res);\n        setSelectedAnimal(res.details);\n        // key: res.details._key,\n        // type: res.details.type,\n        // race: res.details.race,\n        // entryType: res.details.entryType,\n        // entryDate: res.details.entryDate,\n        // birthDate: res.details.birthDate,\n        // sex: res.details.sex,\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [key, update]);\n\n  console.log(\"sellected animal is ::: \", selectedAnimal);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"6\">\n          <Search\n            updateKey={handleUpdateKey}\n            updateSelectedAnimal={setSelectedAnimal}\n          />\n          <Details\n            selectedAnimal={selectedAnimal}\n            updateTool={handleUpdateTool}\n          />\n        </Col>\n        <Col md=\"6\">\n          {tool === \"weight\" ? (\n            <>\n              <WeightRecord weightArr={weight} />\n              <WeightTable weightArr={weight} forceUpdate={handleUpdate} />\n              {selectedAnimal.exit ? null : (\n                <NewWeight animalKey={key} forceUpdate={handleUpdate} />\n              )}\n            </>\n          ) : null}\n          {tool === \"vaccine\" ? (\n            <>\n              <VaccineTable vaccineArr={vaccine} forceUpdate={handleUpdate} />\n              {selectedAnimal.exit ? null : (\n                <NewVaccine animalKey={key} forceUpdate={handleUpdate} />\n              )}\n            </>\n          ) : null}\n          {tool === \"exit\" ? (\n            <>\n              {selectedAnimal.exit ? (\n                <OutHistory exit={exit} forceUpdate={handleUpdate} />\n              ) : (\n                <Out animalKey={key} forceUpdate={handleUpdate} />\n              )}\n            </>\n          ) : null}\n          {/* {tool === \"milk\" ? (\n            <>\n              {selectedAnimal.out ? (\n                <p>show history</p>\n              ) : (\n                <Milk animalKey={key} forceUpdate={handleUpdateWeight} />\n              )}\n            </>\n          ) : null} */}\n          {tool === \"disease\" ? (\n            <>\n              {selectedAnimal.exit ? (\n                <HistoryDisease\n                  diseaseArr={disease}\n                  forceUpdate={handleUpdate}\n                  animalKey={key}\n                />\n              ) : (\n                <>\n                  <HistoryDisease\n                    diseaseArr={disease}\n                    animalKey={key}\n                    forceUpdate={handleUpdate}\n                  />\n                  <NewDisease animalKey={key} forceUpdate={handleUpdate} />\n                </>\n              )}\n            </>\n          ) : null}\n          {tool === \"pregnancy\" ? (\n            <>\n              <HistoryPregnany\n                pregnancyRecords={pregnancyRecords}\n                forceUpdate={handleUpdate}\n              />\n              {selectedAnimal.pregnant !== true ||\n              selectedAnimal.exit !== undefined ? (\n                <NewPregnancy\n                  selectedAnimal={selectedAnimal}\n                  forceUpdate={handleUpdate}\n                />\n              ) : null}\n            </>\n          ) : null}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\n/* <HistoryPregnancy animalKey={key} /> */\n","import React, { useEffect, useState } from \"react\";\nimport momentJalaali from \"moment-jalaali\";\n\n// reactstrap components\nimport { Table, Row, Col, Button } from \"reactstrap\";\n\n// API\nimport ApiGet from \"API/get\";\n\nexport default () => {\n  const [logs, setLogs] = useState([]);\n  const [page, setpage] = useState();\n  const [uri, setUri] = useState(\"\");\n\n  if (typeof page !== \"number\") setpage(0);\n\n  useEffect(() => {\n    console.log(\"send request\");\n    ApiGet(uri)\n      .then((res) => {\n        console.log(\"..........\", res);\n        setLogs(res.result);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [uri]);\n\n  useEffect(() => {\n    setUri(`api/v0/logs/pagination/20/${page}`);\n  }, [page]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleBody = () => {\n    return logs.map((log) => {\n      const createdAtJdate = momentJalaali(log.createdAt).format(\"jYYYY-jM-jD\");\n      return (\n        <tr key={log._key}>\n          <td>{createdAtJdate}</td>\n          <td>{log.value}</td>\n          <td>{log.type}</td>\n          <td>{log.entryId}</td>\n          <td>{log.userId}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Button\n            type=\"button\"\n            onClick={() => setpage(page + 1)}\n            color=\"primary\"\n          >\n            بعدی\n          </Button>\n          {page >= 1 ? (\n            <Button\n              type=\"button\"\n              onClick={() => setpage(page - 1)}\n              color=\"secondary\"\n            >\n              قبلی\n            </Button>\n          ) : null}\n        </Col>\n        <Col md=\"12\">\n          {logs.length ? (\n            <Table>\n              <thead className=\"text-primary\">\n                <tr>\n                  <th>تاریخ</th>\n                  <th>نوع</th>\n                  <th>مجموعه</th>\n                  <th>کد دیتای وارد شده</th>\n                  <th>توسط</th>\n                </tr>\n              </thead>\n              <tbody>{handleBody()}</tbody>\n            </Table>\n          ) : null}\n          <p>{page}</p>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nimport CreateNewUser from \"components/user/newUser\";\n\nexport default () => {\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n\n  /* -------------------------------------------------------------------------- */\n  /*                                   return                                   */\n  /* -------------------------------------------------------------------------- */\n\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"6\">\n          <CreateNewUser />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","export const userAction = payload => {\n  return {\n    type: 'SET_USER',\n    payload\n  };\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userAction } from \"../redux/actions\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n//import signinApi from \"../API/signin\";\nimport ApiPost from \"API/post\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  /* -------------------------------------------------------------------------- */\n  /*                                   states                                   */\n  /* -------------------------------------------------------------------------- */\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [usernameErrors, setUsernameErrors] = useState({});\n  const [passwordErrors, setPasswordErrors] = useState({});\n\n  const [otherError, setOtherError] = useState(\"\");\n\n  const [touched, setTouched] = useState({\n    username: false,\n    password: false,\n  });\n\n  const [serverError, setServerError] = useState(\"\");\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  handlers                                  */\n  /* -------------------------------------------------------------------------- */\n  const handleSubmit = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n\n    if (!username.length && !usernameErrors.isRequired) {\n      usernameErr.isRequired = \"ورود نام کاربری الزامی است\";\n    }\n    if (username.length && usernameErrors.isRequired) {\n      delete usernameErrors.isRequired;\n    }\n\n    if (!password.length && !passwordErrors.isRequired) {\n      passwordErr.isRequired = \"ورود پسورد الزامی است\";\n    }\n    if (password.length && passwordErrors.isRequired) {\n      delete passwordErrors.isRequired;\n    }\n\n    if (Object.keys(usernameErr).length) setUsernameErrors({ ...usernameErr });\n    if (Object.keys(passwordErr).length) setPasswordErrors({ ...passwordErr });\n    if (!Object.keys(usernameErr).length && !Object.keys(passwordErr).length) {\n      const data = { username, password };\n      ApiPost(\"api/v0/user/login\", data)\n        .then((res) => {\n          console.log(res);\n          localStorage.setItem(\"artimal\", res.token);\n          dispatch(userAction({ authenticated: true }));\n        })\n        .catch((e) => {\n          console.log(\"error is :: \", e);\n          if (e.hasOwnProperty(\"error\")) {\n            setServerError(e.error);\n            setOtherError(\"\");\n          } else {\n            setOtherError(\"خطا در برقراری ارتباط با سرور\");\n          }\n        });\n      // TODO: send request to server and get new tokens\n      // TODO: set global user to true\n    }\n  };\n\n  const handleErrors = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n\n    if (touched.username && !username.length && !usernameErrors.isRequired) {\n      usernameErr.isRequired = \"ورود نام کاربری الزامی است\";\n    }\n    if (username.length && usernameErrors.isRequired) {\n      delete usernameErrors.isRequired;\n    }\n\n    if (touched.password && !password.length && !passwordErrors.isRequired) {\n      passwordErr.isRequired = \"ورود پسورد الزامی است\";\n    }\n    if (password.length && passwordErrors.isRequired) {\n      delete passwordErrors.isRequired;\n    }\n\n    if (Object.keys(usernameErr).length) setUsernameErrors({ ...usernameErr });\n    if (Object.keys(passwordErr).length) setPasswordErrors({ ...passwordErr });\n  };\n\n  handleErrors();\n\n  return (\n    <>\n      <div className=\"container login-page-c\">\n        <Card className=\"card-user\">\n          <CardHeader>\n            <CardTitle tag=\"h5\">ورود</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <Row>\n                <Col className=\"px-1\">\n                  <FormGroup>\n                    <label>نام کاربری</label>\n                    <Input\n                      placeholder=\"نام کاربری خود را وارد کنید\"\n                      type=\"text\"\n                      value={username}\n                      onChange={(e) => {\n                        if (!touched.username) {\n                          setTouched({ ...touched, username: true });\n                        }\n                        setUsername(e.target.value);\n                      }}\n                    />\n                  </FormGroup>\n                  {Object.keys(usernameErrors).map((v, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`username${i}`}>\n                        {usernameErrors[v]}\n                      </p>\n                    );\n                  })}\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"px-1\">\n                  <FormGroup>\n                    <label htmlFor=\"exampleInputEmail1\">پسورد</label>\n                    <Input\n                      placeholder=\"پسورد خود را وارد کنید\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => {\n                        if (!touched.password) {\n                          setTouched({ ...touched, password: true });\n                        }\n                        setPassword(e.target.value);\n                      }}\n                    />\n                  </FormGroup>\n                  {Object.keys(passwordErrors).map((v, i) => {\n                    return (\n                      <p className=\"error-text-form\" key={`password${i}`}>\n                        {passwordErrors[v]}\n                      </p>\n                    );\n                  })}\n                </Col>\n              </Row>\n\n              <Row>\n                <div className=\"update ml-auto mr-auto\">\n                  <Button\n                    className=\"btn-wd\"\n                    color=\"primary\"\n                    type=\"button\"\n                    onClick={handleSubmit}\n                  >\n                    تایید\n                  </Button>\n                </div>\n              </Row>\n              <Row>\n                <p className=\"error-text-form\">{serverError}</p>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactNotification from \"react-notifications-component\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Login from \"views/Login.jsx\";\n\n// api\n// import isVerifiedApi from \"./API/verify\";\nimport ApiGet from \"API/get\";\n\n// actions\nimport { userAction } from \"./redux/actions\";\n\nconst hist = createBrowserHistory();\n\nexport default () => {\n  const dispatch = useDispatch();\n  const userReducer = useSelector((global) => global.user);\n  console.log(userReducer);\n\n  useEffect(() => {\n    if ((userReducer.authenticated === null, localStorage.artimal)) {\n      ApiGet(`api/v0/user/token/${localStorage.artimal}`)\n        .then((user) => {\n          dispatch(userAction({ authenticated: true, role: user.result.role }));\n          // TODO: show error somewhere on app\n        })\n        .catch((err) => {\n          // TODO: show error somewhere on app\n          console.log(err);\n          dispatch(userAction({ authenticated: false }));\n        });\n    } else {\n      dispatch(userAction({ authenticated: false }));\n    }\n  }, [dispatch, userReducer.authenticated]);\n\n  return (\n    <>\n      <ReactNotification />\n      {userReducer.authenticated === null ? null : (\n        <Router history={hist}>\n          {!userReducer.authenticated ? (\n            <Login />\n          ) : (\n            <>\n              <Switch>\n                <Route\n                  path=\"/admin\"\n                  render={(props) => <AdminLayout {...props} />}\n                />\n                <Redirect to=\"/admin/dashboard\" />\n              </Switch>\n            </>\n          )}\n        </Router>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducers from \"./redux/reducers\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\nimport \"assets/demo/demo.css\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\n\nimport App from \"./app\";\n\nconsole.log(\"----------------------\", process.env, process.env.REACT_APP_ENV);\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}